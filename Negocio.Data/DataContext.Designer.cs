//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 19/01/2025 11:06:52 p. m.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;
using Microsoft.Extensions.Configuration;

namespace Negocio.Data
{

    [DatabaseAttribute(Name = "PORTAL_NEGOCIOS")]
    [ProviderAttribute(typeof(Devart.Data.Oracle.Linq.Provider.OracleDataProvider))]
    public partial class PORTALNEGOCIODataContext : Devart.Data.Linq.DataContext
    {
        public static CompiledQueryCache compiledQueryCache = CompiledQueryCache.RegisterDataContext(typeof(PORTALNEGOCIODataContext));
        private static MappingSource mappingSource = new Devart.Data.Linq.Mapping.AttributeMappingSource();

        #region Extensibility Method Definitions
    
        partial void OnCreated();
        partial void OnSubmitError(Devart.Data.Linq.SubmitErrorEventArgs args);
        partial void InsertPONESOLICITUDCOMPRA(PONESOLICITUDCOMPRA instance);
        partial void UpdatePONESOLICITUDCOMPRA(PONESOLICITUDCOMPRA instance);
        partial void DeletePONESOLICITUDCOMPRA(PONESOLICITUDCOMPRA instance);
        partial void InsertPONEPROVEEDORACTALTERNA(PONEPROVEEDORACTALTERNA instance);
        partial void UpdatePONEPROVEEDORACTALTERNA(PONEPROVEEDORACTALTERNA instance);
        partial void DeletePONEPROVEEDORACTALTERNA(PONEPROVEEDORACTALTERNA instance);
        partial void InsertPONEPROVEEDOR(PONEPROVEEDOR instance);
        partial void UpdatePONEPROVEEDOR(PONEPROVEEDOR instance);
        partial void DeletePONEPROVEEDOR(PONEPROVEEDOR instance);
        partial void InsertPONEPREGUNTASOLICITUD(PONEPREGUNTASOLICITUD instance);
        partial void UpdatePONEPREGUNTASOLICITUD(PONEPREGUNTASOLICITUD instance);
        partial void DeletePONEPREGUNTASOLICITUD(PONEPREGUNTASOLICITUD instance);
        partial void InsertPONEPARAMETRIZACIONEVALFINAN(PONEPARAMETRIZACIONEVALFINAN instance);
        partial void UpdatePONEPARAMETRIZACIONEVALFINAN(PONEPARAMETRIZACIONEVALFINAN instance);
        partial void DeletePONEPARAMETRIZACIONEVALFINAN(PONEPARAMETRIZACIONEVALFINAN instance);
        partial void InsertPONENOTICIA(PONENOTICIA instance);
        partial void UpdatePONENOTICIA(PONENOTICIA instance);
        partial void DeletePONENOTICIA(PONENOTICIA instance);
        partial void InsertPONEHISTORICOESTADOSOLICITUD(PONEHISTORICOESTADOSOLICITUD instance);
        partial void UpdatePONEHISTORICOESTADOSOLICITUD(PONEHISTORICOESTADOSOLICITUD instance);
        partial void DeletePONEHISTORICOESTADOSOLICITUD(PONEHISTORICOESTADOSOLICITUD instance);
        partial void InsertPONEHISTDOCPROV(PONEHISTDOCPROV instance);
        partial void UpdatePONEHISTDOCPROV(PONEHISTDOCPROV instance);
        partial void DeletePONEHISTDOCPROV(PONEHISTDOCPROV instance);
        partial void InsertPONEFORMATOXPROVEEDOR(PONEFORMATOXPROVEEDOR instance);
        partial void UpdatePONEFORMATOXPROVEEDOR(PONEFORMATOXPROVEEDOR instance);
        partial void DeletePONEFORMATOXPROVEEDOR(PONEFORMATOXPROVEEDOR instance);
        partial void InsertPONEEVALUACIONFINANCIERA(PONEEVALUACIONFINANCIERA instance);
        partial void UpdatePONEEVALUACIONFINANCIERA(PONEEVALUACIONFINANCIERA instance);
        partial void DeletePONEEVALUACIONFINANCIERA(PONEEVALUACIONFINANCIERA instance);
        partial void InsertPONEESTADOSOLICITUD(PONEESTADOSOLICITUD instance);
        partial void UpdatePONEESTADOSOLICITUD(PONEESTADOSOLICITUD instance);
        partial void DeletePONEESTADOSOLICITUD(PONEESTADOSOLICITUD instance);
        partial void InsertPONEESPECIALIDADPROVEEDOR(PONEESPECIALIDADPROVEEDOR instance);
        partial void UpdatePONEESPECIALIDADPROVEEDOR(PONEESPECIALIDADPROVEEDOR instance);
        partial void DeletePONEESPECIALIDADPROVEEDOR(PONEESPECIALIDADPROVEEDOR instance);
        partial void InsertPONEDOCUMENTOXPERSONA(PONEDOCUMENTOXPERSONA instance);
        partial void UpdatePONEDOCUMENTOXPERSONA(PONEDOCUMENTOXPERSONA instance);
        partial void DeletePONEDOCUMENTOXPERSONA(PONEDOCUMENTOXPERSONA instance);
        partial void InsertPONEDOCUMENTOSOLICITUD(PONEDOCUMENTOSOLICITUD instance);
        partial void UpdatePONEDOCUMENTOSOLICITUD(PONEDOCUMENTOSOLICITUD instance);
        partial void DeletePONEDOCUMENTOSOLICITUD(PONEDOCUMENTOSOLICITUD instance);
        partial void InsertPONEDOCUMENTODETALLECOT(PONEDOCUMENTODETALLECOT instance);
        partial void UpdatePONEDOCUMENTODETALLECOT(PONEDOCUMENTODETALLECOT instance);
        partial void DeletePONEDOCUMENTODETALLECOT(PONEDOCUMENTODETALLECOT instance);
        partial void InsertPONEDOCUMENTOCOTIZACION(PONEDOCUMENTOCOTIZACION instance);
        partial void UpdatePONEDOCUMENTOCOTIZACION(PONEDOCUMENTOCOTIZACION instance);
        partial void DeletePONEDOCUMENTOCOTIZACION(PONEDOCUMENTOCOTIZACION instance);
        partial void InsertPONEDOCUMENTO(PONEDOCUMENTO instance);
        partial void UpdatePONEDOCUMENTO(PONEDOCUMENTO instance);
        partial void DeletePONEDOCUMENTO(PONEDOCUMENTO instance);
        partial void InsertPONEDOCSINVITACION(PONEDOCSINVITACION instance);
        partial void UpdatePONEDOCSINVITACION(PONEDOCSINVITACION instance);
        partial void DeletePONEDOCSINVITACION(PONEDOCSINVITACION instance);
        partial void InsertPONEDETALLESOLICITUD(PONEDETALLESOLICITUD instance);
        partial void UpdatePONEDETALLESOLICITUD(PONEDETALLESOLICITUD instance);
        partial void DeletePONEDETALLESOLICITUD(PONEDETALLESOLICITUD instance);
        partial void InsertPONEDETALLECOTIZACION(PONEDETALLECOTIZACION instance);
        partial void UpdatePONEDETALLECOTIZACION(PONEDETALLECOTIZACION instance);
        partial void DeletePONEDETALLECOTIZACION(PONEDETALLECOTIZACION instance);
        partial void InsertPONEDETALLECONFARCHIVO(PONEDETALLECONFARCHIVO instance);
        partial void UpdatePONEDETALLECONFARCHIVO(PONEDETALLECONFARCHIVO instance);
        partial void DeletePONEDETALLECONFARCHIVO(PONEDETALLECONFARCHIVO instance);
        partial void InsertPONEDETALLEACCIONISTA(PONEDETALLEACCIONISTA instance);
        partial void UpdatePONEDETALLEACCIONISTA(PONEDETALLEACCIONISTA instance);
        partial void DeletePONEDETALLEACCIONISTA(PONEDETALLEACCIONISTA instance);
        partial void InsertPONEDETAFORMATOXPROVEEDOR(PONEDETAFORMATOXPROVEEDOR instance);
        partial void UpdatePONEDETAFORMATOXPROVEEDOR(PONEDETAFORMATOXPROVEEDOR instance);
        partial void DeletePONEDETAFORMATOXPROVEEDOR(PONEDETAFORMATOXPROVEEDOR instance);
        partial void InsertPONEDETAEVALUACIONFINANCIERA(PONEDETAEVALUACIONFINANCIERA instance);
        partial void UpdatePONEDETAEVALUACIONFINANCIERA(PONEDETAEVALUACIONFINANCIERA instance);
        partial void DeletePONEDETAEVALUACIONFINANCIERA(PONEDETAEVALUACIONFINANCIERA instance);
        partial void InsertPONECOTIZACION(PONECOTIZACION instance);
        partial void UpdatePONECOTIZACION(PONECOTIZACION instance);
        partial void DeletePONECOTIZACION(PONECOTIZACION instance);
        partial void InsertPONECONFARCHIVO(PONECONFARCHIVO instance);
        partial void UpdatePONECONFARCHIVO(PONECONFARCHIVO instance);
        partial void DeletePONECONFARCHIVO(PONECONFARCHIVO instance);
        partial void InsertPONECATALOGO(PONECATALOGO instance);
        partial void UpdatePONECATALOGO(PONECATALOGO instance);
        partial void DeletePONECATALOGO(PONECATALOGO instance);
        partial void InsertPONEBLOB(PONEBLOB instance);
        partial void UpdatePONEBLOB(PONEBLOB instance);
        partial void DeletePONEBLOB(PONEBLOB instance);
        partial void InsertPONEADJUDICACION(PONEADJUDICACION instance);
        partial void UpdatePONEADJUDICACION(PONEADJUDICACION instance);
        partial void DeletePONEADJUDICACION(PONEADJUDICACION instance);
        partial void InsertPONEACTUALIZACIONPROVEEDOR(PONEACTUALIZACIONPROVEEDOR instance);
        partial void UpdatePONEACTUALIZACIONPROVEEDOR(PONEACTUALIZACIONPROVEEDOR instance);
        partial void DeletePONEACTUALIZACIONPROVEEDOR(PONEACTUALIZACIONPROVEEDOR instance);
        partial void InsertPOGEUSUARIO(POGEUSUARIO instance);
        partial void UpdatePOGEUSUARIO(POGEUSUARIO instance);
        partial void DeletePOGEUSUARIO(POGEUSUARIO instance);
        partial void InsertPOGEROL(POGEROL instance);
        partial void UpdatePOGEROL(POGEROL instance);
        partial void DeletePOGEROL(POGEROL instance);
        partial void InsertPOGEPAI(POGEPAI instance);
        partial void UpdatePOGEPAI(POGEPAI instance);
        partial void DeletePOGEPAI(POGEPAI instance);
        partial void InsertPOGEOPCIONXROL(POGEOPCIONXROL instance);
        partial void UpdatePOGEOPCIONXROL(POGEOPCIONXROL instance);
        partial void DeletePOGEOPCIONXROL(POGEOPCIONXROL instance);
        partial void InsertPOGEOPCION(POGEOPCION instance);
        partial void UpdatePOGEOPCION(POGEOPCION instance);
        partial void DeletePOGEOPCION(POGEOPCION instance);
        partial void InsertPOGENOTIFICACIONXUSUARIO(POGENOTIFICACIONXUSUARIO instance);
        partial void UpdatePOGENOTIFICACIONXUSUARIO(POGENOTIFICACIONXUSUARIO instance);
        partial void DeletePOGENOTIFICACIONXUSUARIO(POGENOTIFICACIONXUSUARIO instance);
        partial void InsertPOGENOTIFICACION(POGENOTIFICACION instance);
        partial void UpdatePOGENOTIFICACION(POGENOTIFICACION instance);
        partial void DeletePOGENOTIFICACION(POGENOTIFICACION instance);
        partial void InsertPOGEMUNICIPIO(POGEMUNICIPIO instance);
        partial void UpdatePOGEMUNICIPIO(POGEMUNICIPIO instance);
        partial void DeletePOGEMUNICIPIO(POGEMUNICIPIO instance);
        partial void InsertPOGEMODULO(POGEMODULO instance);
        partial void UpdatePOGEMODULO(POGEMODULO instance);
        partial void DeletePOGEMODULO(POGEMODULO instance);
        partial void InsertPOGEDEPARTAMENTO(POGEDEPARTAMENTO instance);
        partial void UpdatePOGEDEPARTAMENTO(POGEDEPARTAMENTO instance);
        partial void DeletePOGEDEPARTAMENTO(POGEDEPARTAMENTO instance);
        partial void InsertPOGECONSTANTE(POGECONSTANTE instance);
        partial void UpdatePOGECONSTANTE(POGECONSTANTE instance);
        partial void DeletePOGECONSTANTE(POGECONSTANTE instance);
        partial void InsertPOGECLASEVALOR(POGECLASEVALOR instance);
        partial void UpdatePOGECLASEVALOR(POGECLASEVALOR instance);
        partial void DeletePOGECLASEVALOR(POGECLASEVALOR instance);
        partial void InsertPOGECLASE(POGECLASE instance);
        partial void UpdatePOGECLASE(POGECLASE instance);
        partial void DeletePOGECLASE(POGECLASE instance);
        partial void InsertPOGEACTIVIDADECONOMICA(POGEACTIVIDADECONOMICA instance);
        partial void UpdatePOGEACTIVIDADECONOMICA(POGEACTIVIDADECONOMICA instance);
        partial void DeletePOGEACTIVIDADECONOMICA(POGEACTIVIDADECONOMICA instance);
        partial void InsertPOAUMOVIMIENTO(POAUMOVIMIENTO instance);
        partial void UpdatePOAUMOVIMIENTO(POAUMOVIMIENTO instance);
        partial void DeletePOAUMOVIMIENTO(POAUMOVIMIENTO instance);
        partial void InsertPOAUDETAMOVIMIENTO(POAUDETAMOVIMIENTO instance);
        partial void UpdatePOAUDETAMOVIMIENTO(POAUDETAMOVIMIENTO instance);
        partial void DeletePOAUDETAMOVIMIENTO(POAUDETAMOVIMIENTO instance);
        partial void InsertPOGEAUTORIZADORGERENCIA(POGEAUTORIZADORGERENCIA instance);
        partial void UpdatePOGEAUTORIZADORGERENCIA(POGEAUTORIZADORGERENCIA instance);
        partial void DeletePOGEAUTORIZADORGERENCIA(POGEAUTORIZADORGERENCIA instance);

        #endregion

        public PORTALNEGOCIODataContext() :
        base(GetConnectionString("PORTALNEGOCIODataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        public PORTALNEGOCIODataContext(MappingSource mappingSource) :
        base(GetConnectionString("PORTALNEGOCIODataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        private static string GetConnectionString(string connectionStringName)
        {
            var configurationBuilder = new ConfigurationBuilder().AddJsonFile("appsettings.json", optional: true, reloadOnChange: false);
            var configuration = configurationBuilder.Build();
            return configuration.GetConnectionString(connectionStringName);
        }

        public PORTALNEGOCIODataContext(string connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public PORTALNEGOCIODataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public PORTALNEGOCIODataContext(string connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public PORTALNEGOCIODataContext(System.Data.IDbConnection connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Devart.Data.Linq.Table<PONESOLICITUDCOMPRA> PONESOLICITUDCOMPRAs
        {
            get
            {
                return this.GetTable<PONESOLICITUDCOMPRA>();
            }
        }

        public Devart.Data.Linq.Table<PONEPROVEEDORACTALTERNA> PONEPROVEEDORACTALTERNAs
        {
            get
            {
                return this.GetTable<PONEPROVEEDORACTALTERNA>();
            }
        }

        public Devart.Data.Linq.Table<PONEPROVEEDOR> PONEPROVEEDORs
        {
            get
            {
                return this.GetTable<PONEPROVEEDOR>();
            }
        }

        public Devart.Data.Linq.Table<PONEPREGUNTASOLICITUD> PONEPREGUNTASOLICITUDs
        {
            get
            {
                return this.GetTable<PONEPREGUNTASOLICITUD>();
            }
        }

        public Devart.Data.Linq.Table<PONEPARAMETRIZACIONEVALFINAN> PONEPARAMETRIZACIONEVALFINANs
        {
            get
            {
                return this.GetTable<PONEPARAMETRIZACIONEVALFINAN>();
            }
        }

        public Devart.Data.Linq.Table<PONENOTICIA> PONENOTICIAs
        {
            get
            {
                return this.GetTable<PONENOTICIA>();
            }
        }

        public Devart.Data.Linq.Table<PONEHISTORICOESTADOSOLICITUD> PONEHISTORICOESTADOSOLICITUDs
        {
            get
            {
                return this.GetTable<PONEHISTORICOESTADOSOLICITUD>();
            }
        }

        public Devart.Data.Linq.Table<PONEHISTDOCPROV> PONEHISTDOCPROVs
        {
            get
            {
                return this.GetTable<PONEHISTDOCPROV>();
            }
        }

        public Devart.Data.Linq.Table<PONEFORMATOXPROVEEDOR> PONEFORMATOXPROVEEDORs
        {
            get
            {
                return this.GetTable<PONEFORMATOXPROVEEDOR>();
            }
        }

        public Devart.Data.Linq.Table<PONEEVALUACIONFINANCIERA> PONEEVALUACIONFINANCIERAs
        {
            get
            {
                return this.GetTable<PONEEVALUACIONFINANCIERA>();
            }
        }

        public Devart.Data.Linq.Table<PONEESTADOSOLICITUD> PONEESTADOSOLICITUDs
        {
            get
            {
                return this.GetTable<PONEESTADOSOLICITUD>();
            }
        }

        public Devart.Data.Linq.Table<PONEESPECIALIDADPROVEEDOR> PONEESPECIALIDADPROVEEDORs
        {
            get
            {
                return this.GetTable<PONEESPECIALIDADPROVEEDOR>();
            }
        }

        public Devart.Data.Linq.Table<PONEDOCUMENTOXPERSONA> PONEDOCUMENTOXPERSONAs
        {
            get
            {
                return this.GetTable<PONEDOCUMENTOXPERSONA>();
            }
        }

        public Devart.Data.Linq.Table<PONEDOCUMENTOSOLICITUD> PONEDOCUMENTOSOLICITUDs
        {
            get
            {
                return this.GetTable<PONEDOCUMENTOSOLICITUD>();
            }
        }

        public Devart.Data.Linq.Table<PONEDOCUMENTODETALLECOT> PONEDOCUMENTODETALLECOTs
        {
            get
            {
                return this.GetTable<PONEDOCUMENTODETALLECOT>();
            }
        }

        public Devart.Data.Linq.Table<PONEDOCUMENTOCOTIZACION> PONEDOCUMENTOCOTIZACIONs
        {
            get
            {
                return this.GetTable<PONEDOCUMENTOCOTIZACION>();
            }
        }

        public Devart.Data.Linq.Table<PONEDOCUMENTO> PONEDOCUMENTOs
        {
            get
            {
                return this.GetTable<PONEDOCUMENTO>();
            }
        }

        public Devart.Data.Linq.Table<PONEDOCSINVITACION> PONEDOCSINVITACIONs
        {
            get
            {
                return this.GetTable<PONEDOCSINVITACION>();
            }
        }

        public Devart.Data.Linq.Table<PONEDETALLESOLICITUD> PONEDETALLESOLICITUDs
        {
            get
            {
                return this.GetTable<PONEDETALLESOLICITUD>();
            }
        }

        public Devart.Data.Linq.Table<PONEDETALLECOTIZACION> PONEDETALLECOTIZACIONs
        {
            get
            {
                return this.GetTable<PONEDETALLECOTIZACION>();
            }
        }

        public Devart.Data.Linq.Table<PONEDETALLECONFARCHIVO> PONEDETALLECONFARCHIVOs
        {
            get
            {
                return this.GetTable<PONEDETALLECONFARCHIVO>();
            }
        }

        public Devart.Data.Linq.Table<PONEDETALLEACCIONISTA> PONEDETALLEACCIONISTAs
        {
            get
            {
                return this.GetTable<PONEDETALLEACCIONISTA>();
            }
        }

        public Devart.Data.Linq.Table<PONEDETAFORMATOXPROVEEDOR> PONEDETAFORMATOXPROVEEDORs
        {
            get
            {
                return this.GetTable<PONEDETAFORMATOXPROVEEDOR>();
            }
        }

        public Devart.Data.Linq.Table<PONEDETAEVALUACIONFINANCIERA> PONEDETAEVALUACIONFINANCIERAs
        {
            get
            {
                return this.GetTable<PONEDETAEVALUACIONFINANCIERA>();
            }
        }

        public Devart.Data.Linq.Table<PONECOTIZACION> PONECOTIZACIONs
        {
            get
            {
                return this.GetTable<PONECOTIZACION>();
            }
        }

        public Devart.Data.Linq.Table<PONECONFARCHIVO> PONECONFARCHIVOs
        {
            get
            {
                return this.GetTable<PONECONFARCHIVO>();
            }
        }

        public Devart.Data.Linq.Table<PONECATALOGO> PONECATALOGOs
        {
            get
            {
                return this.GetTable<PONECATALOGO>();
            }
        }

        public Devart.Data.Linq.Table<PONEBLOB> PONEBLOBs
        {
            get
            {
                return this.GetTable<PONEBLOB>();
            }
        }

        public Devart.Data.Linq.Table<PONEADJUDICACION> PONEADJUDICACIONs
        {
            get
            {
                return this.GetTable<PONEADJUDICACION>();
            }
        }

        public Devart.Data.Linq.Table<PONEACTUALIZACIONPROVEEDOR> PONEACTUALIZACIONPROVEEDORs
        {
            get
            {
                return this.GetTable<PONEACTUALIZACIONPROVEEDOR>();
            }
        }

        public Devart.Data.Linq.Table<POGEUSUARIO> POGEUSUARIOs
        {
            get
            {
                return this.GetTable<POGEUSUARIO>();
            }
        }

        public Devart.Data.Linq.Table<POGEROL> POGEROLs
        {
            get
            {
                return this.GetTable<POGEROL>();
            }
        }

        public Devart.Data.Linq.Table<POGEPAI> POGEPAIs
        {
            get
            {
                return this.GetTable<POGEPAI>();
            }
        }

        public Devart.Data.Linq.Table<POGEOPCIONXROL> POGEOPCIONXROLs
        {
            get
            {
                return this.GetTable<POGEOPCIONXROL>();
            }
        }

        public Devart.Data.Linq.Table<POGEOPCION> POGEOPCIONs
        {
            get
            {
                return this.GetTable<POGEOPCION>();
            }
        }

        public Devart.Data.Linq.Table<POGENOTIFICACIONXUSUARIO> POGENOTIFICACIONXUSUARIOs
        {
            get
            {
                return this.GetTable<POGENOTIFICACIONXUSUARIO>();
            }
        }

        public Devart.Data.Linq.Table<POGENOTIFICACION> POGENOTIFICACIONs
        {
            get
            {
                return this.GetTable<POGENOTIFICACION>();
            }
        }

        public Devart.Data.Linq.Table<POGEMUNICIPIO> POGEMUNICIPIOs
        {
            get
            {
                return this.GetTable<POGEMUNICIPIO>();
            }
        }

        public Devart.Data.Linq.Table<POGEMODULO> POGEMODULOs
        {
            get
            {
                return this.GetTable<POGEMODULO>();
            }
        }

        public Devart.Data.Linq.Table<POGEDEPARTAMENTO> POGEDEPARTAMENTOs
        {
            get
            {
                return this.GetTable<POGEDEPARTAMENTO>();
            }
        }

        public Devart.Data.Linq.Table<POGECONSTANTE> POGECONSTANTEs
        {
            get
            {
                return this.GetTable<POGECONSTANTE>();
            }
        }

        public Devart.Data.Linq.Table<POGECLASEVALOR> POGECLASEVALORs
        {
            get
            {
                return this.GetTable<POGECLASEVALOR>();
            }
        }

        public Devart.Data.Linq.Table<POGECLASE> POGECLASEs
        {
            get
            {
                return this.GetTable<POGECLASE>();
            }
        }

        public Devart.Data.Linq.Table<POGEACTIVIDADECONOMICA> POGEACTIVIDADECONOMICAs
        {
            get
            {
                return this.GetTable<POGEACTIVIDADECONOMICA>();
            }
        }

        public Devart.Data.Linq.Table<POAUMOVIMIENTO> POAUMOVIMIENTOs
        {
            get
            {
                return this.GetTable<POAUMOVIMIENTO>();
            }
        }

        public Devart.Data.Linq.Table<POAUDETAMOVIMIENTO> POAUDETAMOVIMIENTOs
        {
            get
            {
                return this.GetTable<POAUDETAMOVIMIENTO>();
            }
        }

        public Devart.Data.Linq.Table<PONEVTIPOIDENTIFICACION> PONEVTIPOIDENTIFICACIONs
        {
            get
            {
                return this.GetTable<PONEVTIPOIDENTIFICACION>();
            }
        }

        public Devart.Data.Linq.Table<PONEVSAIA> PONEVSAIAs
        {
            get
            {
                return this.GetTable<PONEVSAIA>();
            }
        }

        public Devart.Data.Linq.Table<PONEVTIPOPERSONA> PONEVTIPOPERSONAs
        {
            get
            {
                return this.GetTable<PONEVTIPOPERSONA>();
            }
        }

        public Devart.Data.Linq.Table<PONEVAREA> PONEVAREAs
        {
            get
            {
                return this.GetTable<PONEVAREA>();
            }
        }

        public Devart.Data.Linq.Table<PONEVGERENCIA> PONEVGERENCIAs
        {
            get
            {
                return this.GetTable<PONEVGERENCIA>();
            }
        }

        public Devart.Data.Linq.Table<POGEAUTORIZADORGERENCIA> POGEAUTORIZADORGERENCIAs
        {
            get
            {
                return this.GetTable<POGEAUTORIZADORGERENCIA>();
            }
        }

    
        /// <summary>
        /// There are no comments for FCAMBIARCLAVE in the schema.
        /// </summary>
        [Function(Name=@"PORTAL_NEGOCIOS.F_CAMBIAR_CLAVE", IsComposable=true)]
        public System.Nullable<System.Decimal> FCAMBIARCLAVE([Parameter(Name="P_USUARIO", DbType="VARCHAR2(4000 CHAR)")] string P_USUARIO, [Parameter(Name="P_CLAVE", DbType="VARCHAR2(4000 CHAR)")] string P_CLAVE)
        {
            IExecuteResult _FCAMBIARCLAVEResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), P_USUARIO, P_CLAVE);
            return ((System.Nullable<System.Decimal>)(_FCAMBIARCLAVEResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for FOBTENERPAGO in the schema.
        /// </summary>
        [Function(Name=@"PORTAL_NEGOCIOS.F_OBTENER_PAGOS", IsComposable=true)]
        public System.Linq.IQueryable<FOBTENERPAGOResult> FOBTENERPAGO([Parameter(Name="IDEMPRESA", DbType="NUMBER")] decimal? IDEMPRESA, [Parameter(Name="IDENT", DbType="NUMBER")] decimal? IDENT, [Parameter(Name="PERINI", DbType="NUMBER")] decimal? PERINI, [Parameter(Name="PERFIN", DbType="NUMBER")] decimal? PERFIN)
        {
            return this.CreateMethodCallQuery<FOBTENERPAGOResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDEMPRESA, IDENT, PERINI, PERFIN);
        }

    
        /// <summary>
        /// There are no comments for GEGETSECUENCIA in the schema.
        /// </summary>
        [Function(Name=@"PORTAL_NEGOCIOS.GE_GETSECUENCIA", IsComposable=true)]
        public System.Nullable<System.Decimal> GEGETSECUENCIA([Parameter(Name="NOMSEC", DbType="VARCHAR2(4000 CHAR)")] string NOMSEC)
        {
            IExecuteResult _GEGETSECUENCIAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), NOMSEC);
            return ((System.Nullable<System.Decimal>)(_GEGETSECUENCIAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for FVALIDARLOGIN in the schema.
        /// </summary>
        [Function(Name=@"PORTAL_NEGOCIOS.F_VALIDAR_LOGIN", IsComposable=true)]
        public System.Object FVALIDARLOGIN([Parameter(Name="P_USUARIO", DbType="VARCHAR2(4000 CHAR)")] string P_USUARIO, [Parameter(Name="P_CLAVE", DbType="VARCHAR2(4000 CHAR)")] string P_CLAVE)
        {
            IExecuteResult _FVALIDARLOGINResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), P_USUARIO, P_CLAVE);
            return ((System.Object)(_FVALIDARLOGINResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GENERARCLAVEALEATORIA in the schema.
        /// </summary>
        [Function(Name=@"PORTAL_NEGOCIOS.GENERAR_CLAVE_ALEATORIA", IsComposable=true)]
        public System.String GENERARCLAVEALEATORIA()
        {
            IExecuteResult _GENERARCLAVEALEATORIAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((System.String)(_GENERARCLAVEALEATORIAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for FDESCUENTOPAGO in the schema.
        /// </summary>
        [Function(Name=@"PORTAL_NEGOCIOS.F_DESCUENTO_PAGO", IsComposable=true)]
        public System.Linq.IQueryable<FDESCUENTOPAGOResult> FDESCUENTOPAGO([Parameter(Name="VIG_ORPA", DbType="NUMBER")] decimal? VIG_ORPA, [Parameter(Name="ORPA", DbType="NUMBER")] decimal? ORPA, [Parameter(Name="IDEMPRESA", DbType="NUMBER")] decimal? IDEMPRESA)
        {
            return this.CreateMethodCallQuery<FDESCUENTOPAGOResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), VIG_ORPA, ORPA, IDEMPRESA);
        }

    
        /// <summary>
        /// There are no comments for FENCABEZADORETENCION in the schema.
        /// </summary>
        [Function(Name=@"PORTAL_NEGOCIOS.F_ENCABEZADO_RETENCION", IsComposable=true)]
        public System.Linq.IQueryable<FENCABEZADORETENCIONResult> FENCABEZADORETENCION([Parameter(Name="PERIODOINICIAL", DbType="NUMBER")] decimal? PERIODOINICIAL, [Parameter(Name="PERIODOFINAL", DbType="NUMBER")] decimal? PERIODOFINAL, [Parameter(Name="TIPORETENCION", DbType="VARCHAR2(4000 CHAR)")] string TIPORETENCION, [Parameter(Name="NIT", DbType="NUMBER")] decimal? NIT)
        {
            return this.CreateMethodCallQuery<FENCABEZADORETENCIONResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), PERIODOINICIAL, PERIODOFINAL, TIPORETENCION, NIT);
        }

    
        /// <summary>
        /// There are no comments for FDETALLERETENCION in the schema.
        /// </summary>
        [Function(Name=@"PORTAL_NEGOCIOS.F_DETALLE_RETENCION", IsComposable=true)]
        public System.Linq.IQueryable<FDETALLERETENCIONResult> FDETALLERETENCION([Parameter(Name="PERIODOINICIAL", DbType="NUMBER")] decimal? PERIODOINICIAL, [Parameter(Name="PERIODOFINAL", DbType="NUMBER")] decimal? PERIODOFINAL, [Parameter(Name="TIPORETENCION", DbType="VARCHAR2(4000 CHAR)")] string TIPORETENCION, [Parameter(Name="NIT", DbType="NUMBER")] decimal? NIT)
        {
            return this.CreateMethodCallQuery<FDETALLERETENCIONResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), PERIODOINICIAL, PERIODOFINAL, TIPORETENCION, NIT);
        }

    
        /// <summary>
        /// There are no comments for FOBTENERRAZONSOCIALPROVEEDOR in the schema.
        /// </summary>
        [Function(Name=@"PORTAL_NEGOCIOS.F_OBTENER_RAZONSOCIALPROVEEDOR", IsComposable=true)]
        public System.String FOBTENERRAZONSOCIALPROVEEDOR([Parameter(Name="IDPROVEEDOR", DbType="NUMBER(38)")] decimal? IDPROVEEDOR)
        {
            IExecuteResult _FOBTENERRAZONSOCIALPROVEEDORResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDPROVEEDOR);
            return ((System.String)(_FOBTENERRAZONSOCIALPROVEEDORResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for FENCRIPTAR in the schema.
        /// </summary>
        [Function(Name=@"PORTAL_NEGOCIOS.F_ENCRIPTAR", IsComposable=true)]
        public System.String FENCRIPTAR([Parameter(Name="P_CADENA", DbType="VARCHAR2(4000 CHAR)")] string P_CADENA)
        {
            IExecuteResult _FENCRIPTARResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), P_CADENA);
            return ((System.String)(_FENCRIPTARResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for FDETALLEPAGO in the schema.
        /// </summary>
        [Function(Name=@"PORTAL_NEGOCIOS.F_DETALLE_PAGO", IsComposable=true)]
        [Devart.Data.Linq.Mapping.ResultType(typeof(FDETALLEPAGOResult), 0, Devart.Data.Linq.Mapping.ResultTypeOrigin.ReturnValue)]
        public System.Linq.IQueryable<FDETALLEPAGOResult> FDETALLEPAGO([Parameter(Name="IDEMPRESA", DbType="NUMBER")] decimal? IDEMPRESA, [Parameter(Name="VIG_ORPA", DbType="NUMBER")] decimal? VIG_ORPA, [Parameter(Name="ORPA", DbType="NUMBER")] decimal? ORPA, [Parameter(Name="NROAUXILIAR", DbType="NUMBER")] decimal? NROAUXILIAR)
        {
            return this.CreateMethodCallQuery<FDETALLEPAGOResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDEMPRESA, VIG_ORPA, ORPA, NROAUXILIAR);
        }

    
        /// <summary>
        /// There are no comments for FPROVEEDORESREGISTRADOSME in the schema.
        /// </summary>
        [Function(Name=@"PORTAL_NEGOCIOS.F_PROVEEDORES_REGISTRADOS_MES", IsComposable=true)]
        [Devart.Data.Linq.Mapping.ResultType(typeof(FPROVEEDORESREGISTRADOSMEResult), 0, Devart.Data.Linq.Mapping.ResultTypeOrigin.ReturnValue)]
        public System.Linq.IQueryable<FPROVEEDORESREGISTRADOSMEResult> FPROVEEDORESREGISTRADOSME([Parameter(Name="VIGENCIA", DbType="NUMBER(38)")] decimal? VIGENCIA)
        {
            return this.CreateMethodCallQuery<FPROVEEDORESREGISTRADOSMEResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), VIGENCIA);
        }

    
        /// <summary>
        /// There are no comments for FAUTORIZADORGERENCIAXAREA in the schema.
        /// </summary>
        [Function(Name=@"PORTAL_NEGOCIOS.F_AUTORIZADORGERENCIAXAREA", IsComposable=true)]
        [Devart.Data.Linq.Mapping.ResultType(typeof(FAUTORIZADORGERENCIAXAREAResult), 0, Devart.Data.Linq.Mapping.ResultTypeOrigin.ReturnValue)]
        public System.Linq.IQueryable<FAUTORIZADORGERENCIAXAREAResult> FAUTORIZADORGERENCIAXAREA([Parameter(Name="CODIGOAREA", DbType="NUMBER")] decimal? CODIGOAREA)
        {
            return this.CreateMethodCallQuery<FAUTORIZADORGERENCIAXAREAResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODIGOAREA);
        }

    
        /// <summary>
        /// There are no comments for FOBTENERPROVEEDOR in the schema.
        /// </summary>
        [Function(Name=@"PORTAL_NEGOCIOS.F_OBTENER_PROVEEDOR")]
        [Devart.Data.Linq.Mapping.ResultType(typeof(FOBTENERPROVEEDORResult), 0, Devart.Data.Linq.Mapping.ResultTypeOrigin.ReturnValue)]
        public Devart.Data.Linq.ISingleResult<FOBTENERPROVEEDORResult> FOBTENERPROVEEDOR([Parameter(Name="IDPROVEEDOR", DbType="NUMBER")] decimal? IDPROVEEDOR)
        {
            IExecuteResult _FOBTENERPROVEEDORResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDPROVEEDOR);
            return ((Devart.Data.Linq.ISingleResult<FOBTENERPROVEEDORResult>)(_FOBTENERPROVEEDORResult.ReturnValue));
        }
    }
}

namespace Negocio.Data
{

    /// <summary>
    /// Tabla para almacenar las solicitudes de compras, el registro de solicitud va hasta el final del proceso.
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_SOLICITUDCOMPRA")]
    public partial class PONESOLICITUDCOMPRA : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _SOCOSOLICITUD;

        private System.DateTime _SOCOFECHA;

        private decimal _USUAUSUARIO;

        private string _SOCODESCRIPCION;

        private string _SOCOESTADO;

        private decimal _CLASTIPOCONTRATACION3;

        private string _SOCOETAPA;

        private string _SOCOOBSERVACIONESAUTORIZACION;

        private System.DateTime? _SOCOFECHAPUBLICACION;

        private System.DateTime? _SOCOFECHAPREGUNTA;

        private System.DateTime? _SOCOFECHARESPUESTA;

        private System.DateTime? _SOCOFECHAPROPUESTAS;

        private decimal _CLASAREA9;

        private decimal? _SOCONUMEROSAIA;

        private decimal? _SOCOPROYECTOSAIA;

        private System.DateTime? _SOCOFECHASAIA;

        private string _SOCOTIPOSOLICITUD;

        private string _SOCOPRESUPUESTO;

        private double? _SOCOVALOR;

        private System.DateTime? _SOCOFECHACIERRE;

        private string _SOCOOBSERVACIONESRECHAZA;

        private System.DateTime _LOGSFECHA = DateTime.Now;

        private decimal _LOGSUSUARIO;

        private string _SOCOENVIOPROV = @"N";

        private string _SOCOOBSERVACIONADJUDICACION;
        #pragma warning restore 0649

        private EntitySet<PONEHISTORICOESTADOSOLICITUD> _PONEHISTORICOESTADOSOLICITUDs;

        private EntitySet<PONEDOCUMENTOSOLICITUD> _PONEDOCUMENTOSOLICITUDs;

        private EntitySet<PONEDOCSINVITACION> _PONEDOCSINVITACIONs;

        private EntitySet<PONEDETALLESOLICITUD> _PONEDETALLESOLICITUDs;

        private EntitySet<PONECOTIZACION> _PONECOTIZACIONs;

        private EntityRef<POGECLASEVALOR> _POGECLASEVALOR_CLASAREA9;

        private EntityRef<POGECLASEVALOR> _POGECLASEVALOR_CLASTIPOCONTRATACION3;

        private EntitySet<PONEADJUDICACION> _PONEADJUDICACIONs;

        private EntitySet<PONEPREGUNTASOLICITUD> _PONEPREGUNTASOLICITUDs;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnSOCOSOLICITUDChanging(decimal value);
        partial void OnSOCOSOLICITUDChanged();
        partial void OnSOCOFECHAChanging(System.DateTime value);
        partial void OnSOCOFECHAChanged();
        partial void OnUSUAUSUARIOChanging(decimal value);
        partial void OnUSUAUSUARIOChanged();
        partial void OnSOCODESCRIPCIONChanging(string value);
        partial void OnSOCODESCRIPCIONChanged();
        partial void OnSOCOESTADOChanging(string value);
        partial void OnSOCOESTADOChanged();
        partial void OnCLASTIPOCONTRATACION3Changing(decimal value);
        partial void OnCLASTIPOCONTRATACION3Changed();
        partial void OnSOCOETAPAChanging(string value);
        partial void OnSOCOETAPAChanged();
        partial void OnSOCOOBSERVACIONESAUTORIZACIONChanging(string value);
        partial void OnSOCOOBSERVACIONESAUTORIZACIONChanged();
        partial void OnSOCOFECHAPUBLICACIONChanging(System.DateTime? value);
        partial void OnSOCOFECHAPUBLICACIONChanged();
        partial void OnSOCOFECHAPREGUNTAChanging(System.DateTime? value);
        partial void OnSOCOFECHAPREGUNTAChanged();
        partial void OnSOCOFECHARESPUESTAChanging(System.DateTime? value);
        partial void OnSOCOFECHARESPUESTAChanged();
        partial void OnSOCOFECHAPROPUESTASChanging(System.DateTime? value);
        partial void OnSOCOFECHAPROPUESTASChanged();
        partial void OnCLASAREA9Changing(decimal value);
        partial void OnCLASAREA9Changed();
        partial void OnSOCONUMEROSAIAChanging(decimal? value);
        partial void OnSOCONUMEROSAIAChanged();
        partial void OnSOCOPROYECTOSAIAChanging(decimal? value);
        partial void OnSOCOPROYECTOSAIAChanged();
        partial void OnSOCOFECHASAIAChanging(System.DateTime? value);
        partial void OnSOCOFECHASAIAChanged();
        partial void OnSOCOTIPOSOLICITUDChanging(string value);
        partial void OnSOCOTIPOSOLICITUDChanged();
        partial void OnSOCOPRESUPUESTOChanging(string value);
        partial void OnSOCOPRESUPUESTOChanged();
        partial void OnSOCOVALORChanging(double? value);
        partial void OnSOCOVALORChanged();
        partial void OnSOCOFECHACIERREChanging(System.DateTime? value);
        partial void OnSOCOFECHACIERREChanged();
        partial void OnSOCOOBSERVACIONESRECHAZAChanging(string value);
        partial void OnSOCOOBSERVACIONESRECHAZAChanged();
        partial void OnLOGSFECHAChanging(System.DateTime value);
        partial void OnLOGSFECHAChanged();
        partial void OnLOGSUSUARIOChanging(decimal value);
        partial void OnLOGSUSUARIOChanged();
        partial void OnSOCOENVIOPROVChanging(string value);
        partial void OnSOCOENVIOPROVChanged();
        partial void OnSOCOOBSERVACIONADJUDICACIONChanging(string value);
        partial void OnSOCOOBSERVACIONADJUDICACIONChanged();
        #endregion

        public PONESOLICITUDCOMPRA()
        {
            this._PONEHISTORICOESTADOSOLICITUDs = new EntitySet<PONEHISTORICOESTADOSOLICITUD>(new Action<PONEHISTORICOESTADOSOLICITUD>(this.attach_PONEHISTORICOESTADOSOLICITUDs), new Action<PONEHISTORICOESTADOSOLICITUD>(this.detach_PONEHISTORICOESTADOSOLICITUDs));
            this._PONEDOCUMENTOSOLICITUDs = new EntitySet<PONEDOCUMENTOSOLICITUD>(new Action<PONEDOCUMENTOSOLICITUD>(this.attach_PONEDOCUMENTOSOLICITUDs), new Action<PONEDOCUMENTOSOLICITUD>(this.detach_PONEDOCUMENTOSOLICITUDs));
            this._PONEDOCSINVITACIONs = new EntitySet<PONEDOCSINVITACION>(new Action<PONEDOCSINVITACION>(this.attach_PONEDOCSINVITACIONs), new Action<PONEDOCSINVITACION>(this.detach_PONEDOCSINVITACIONs));
            this._PONEDETALLESOLICITUDs = new EntitySet<PONEDETALLESOLICITUD>(new Action<PONEDETALLESOLICITUD>(this.attach_PONEDETALLESOLICITUDs), new Action<PONEDETALLESOLICITUD>(this.detach_PONEDETALLESOLICITUDs));
            this._PONECOTIZACIONs = new EntitySet<PONECOTIZACION>(new Action<PONECOTIZACION>(this.attach_PONECOTIZACIONs), new Action<PONECOTIZACION>(this.detach_PONECOTIZACIONs));
            this._POGECLASEVALOR_CLASAREA9  = default(EntityRef<POGECLASEVALOR>);
            this._POGECLASEVALOR_CLASTIPOCONTRATACION3  = default(EntityRef<POGECLASEVALOR>);
            this._PONEADJUDICACIONs = new EntitySet<PONEADJUDICACION>(new Action<PONEADJUDICACION>(this.attach_PONEADJUDICACIONs), new Action<PONEADJUDICACION>(this.detach_PONEADJUDICACIONs));
            this._PONEPREGUNTASOLICITUDs = new EntitySet<PONEPREGUNTASOLICITUD>(new Action<PONEPREGUNTASOLICITUD>(this.attach_PONEPREGUNTASOLICITUDs), new Action<PONEPREGUNTASOLICITUD>(this.detach_PONEPREGUNTASOLICITUDs));
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"SOCO_SOLICITUD", Storage = "_SOCOSOLICITUD", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal SOCOSOLICITUD
        {
            get
            {
                return this._SOCOSOLICITUD;
            }
            set
            {
                if (this._SOCOSOLICITUD != value)
                {
                    this.OnSOCOSOLICITUDChanging(value);
                    this.SendPropertyChanging("SOCOSOLICITUD");
                    this._SOCOSOLICITUD = value;
                    this.SendPropertyChanged("SOCOSOLICITUD");
                    this.OnSOCOSOLICITUDChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha de creacion del registro
        /// </summary>
        [Column(Name = @"SOCO_FECHA", Storage = "_SOCOFECHA", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime SOCOFECHA
        {
            get
            {
                return this._SOCOFECHA;
            }
            set
            {
                if (this._SOCOFECHA != value)
                {
                    this.OnSOCOFECHAChanging(value);
                    this.SendPropertyChanging("SOCOFECHA");
                    this._SOCOFECHA = value;
                    this.SendPropertyChanged("SOCOFECHA");
                    this.OnSOCOFECHAChanged();
                }
            }
        }

    
        /// <summary>
        /// Id usuario creo o cambia de estado
        /// </summary>
        [Column(Name = @"USUA_USUARIO", Storage = "_USUAUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal USUAUSUARIO
        {
            get
            {
                return this._USUAUSUARIO;
            }
            set
            {
                if (this._USUAUSUARIO != value)
                {
                    this.OnUSUAUSUARIOChanging(value);
                    this.SendPropertyChanging("USUAUSUARIO");
                    this._USUAUSUARIO = value;
                    this.SendPropertyChanged("USUAUSUARIO");
                    this.OnUSUAUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Objecto de la solicitud
        /// </summary>
        [Column(Name = @"SOCO_DESCRIPCION", Storage = "_SOCODESCRIPCION", CanBeNull = false, DbType = "VARCHAR2(500 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string SOCODESCRIPCION
        {
            get
            {
                return this._SOCODESCRIPCION;
            }
            set
            {
                if (this._SOCODESCRIPCION != value)
                {
                    this.OnSOCODESCRIPCIONChanging(value);
                    this.SendPropertyChanging("SOCODESCRIPCION");
                    this._SOCODESCRIPCION = value;
                    this.SendPropertyChanged("SOCODESCRIPCION");
                    this.OnSOCODESCRIPCIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Estado de la solicitud
        /// </summary>
        [Column(Name = @"SOCO_ESTADO", Storage = "_SOCOESTADO", CanBeNull = false, DbType = "VARCHAR2(1 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string SOCOESTADO
        {
            get
            {
                return this._SOCOESTADO;
            }
            set
            {
                if (this._SOCOESTADO != value)
                {
                    this.OnSOCOESTADOChanging(value);
                    this.SendPropertyChanging("SOCOESTADO");
                    this._SOCOESTADO = value;
                    this.SendPropertyChanged("SOCOESTADO");
                    this.OnSOCOESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// Tipo de contratacion: Sin formalidades, con formalidades
        /// </summary>
        [Column(Name = @"CLAS_TIPOCONTRATACION3", Storage = "_CLASTIPOCONTRATACION3", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CLASTIPOCONTRATACION3
        {
            get
            {
                return this._CLASTIPOCONTRATACION3;
            }
            set
            {
                if (this._CLASTIPOCONTRATACION3 != value)
                {
                    if (this._POGECLASEVALOR_CLASTIPOCONTRATACION3.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCLASTIPOCONTRATACION3Changing(value);
                    this.SendPropertyChanging("CLASTIPOCONTRATACION3");
                    this._CLASTIPOCONTRATACION3 = value;
                    this.SendPropertyChanged("CLASTIPOCONTRATACION3");
                    this.OnCLASTIPOCONTRATACION3Changed();
                }
            }
        }

    
        /// <summary>
        /// Indica la etapa en que se encuentra el proceso
        /// S: Solicitud compra
        /// O: Publicacion oferta
        /// A: Adjudicada
        /// D: Desierta
        /// </summary>
        [Column(Name = @"SOCO_ETAPA", Storage = "_SOCOETAPA", CanBeNull = false, DbType = "VARCHAR2(1 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string SOCOETAPA
        {
            get
            {
                return this._SOCOETAPA;
            }
            set
            {
                if (this._SOCOETAPA != value)
                {
                    this.OnSOCOETAPAChanging(value);
                    this.SendPropertyChanging("SOCOETAPA");
                    this._SOCOETAPA = value;
                    this.SendPropertyChanged("SOCOETAPA");
                    this.OnSOCOETAPAChanged();
                }
            }
        }

    
        /// <summary>
        /// Observacion al momento de autorizar
        /// </summary>
        [Column(Name = @"SOCO_OBSERVACIONESAUTORIZACION", Storage = "_SOCOOBSERVACIONESAUTORIZACION", DbType = "VARCHAR2(500 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string SOCOOBSERVACIONESAUTORIZACION
        {
            get
            {
                return this._SOCOOBSERVACIONESAUTORIZACION;
            }
            set
            {
                if (this._SOCOOBSERVACIONESAUTORIZACION != value)
                {
                    this.OnSOCOOBSERVACIONESAUTORIZACIONChanging(value);
                    this.SendPropertyChanging("SOCOOBSERVACIONESAUTORIZACION");
                    this._SOCOOBSERVACIONESAUTORIZACION = value;
                    this.SendPropertyChanged("SOCOOBSERVACIONESAUTORIZACION");
                    this.OnSOCOOBSERVACIONESAUTORIZACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha en que se publica como invitacion
        /// </summary>
        [Column(Name = @"SOCO_FECHAPUBLICACION", Storage = "_SOCOFECHAPUBLICACION", DbType = "TIMESTAMP(6) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? SOCOFECHAPUBLICACION
        {
            get
            {
                return this._SOCOFECHAPUBLICACION;
            }
            set
            {
                if (this._SOCOFECHAPUBLICACION != value)
                {
                    this.OnSOCOFECHAPUBLICACIONChanging(value);
                    this.SendPropertyChanging("SOCOFECHAPUBLICACION");
                    this._SOCOFECHAPUBLICACION = value;
                    this.SendPropertyChanged("SOCOFECHAPUBLICACION");
                    this.OnSOCOFECHAPUBLICACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha limite recepcion de preguntas
        /// </summary>
        [Column(Name = @"SOCO_FECHAPREGUNTA", Storage = "_SOCOFECHAPREGUNTA", DbType = "TIMESTAMP(6) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? SOCOFECHAPREGUNTA
        {
            get
            {
                return this._SOCOFECHAPREGUNTA;
            }
            set
            {
                if (this._SOCOFECHAPREGUNTA != value)
                {
                    this.OnSOCOFECHAPREGUNTAChanging(value);
                    this.SendPropertyChanging("SOCOFECHAPREGUNTA");
                    this._SOCOFECHAPREGUNTA = value;
                    this.SendPropertyChanged("SOCOFECHAPREGUNTA");
                    this.OnSOCOFECHAPREGUNTAChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha de respuestas
        /// </summary>
        [Column(Name = @"SOCO_FECHARESPUESTA", Storage = "_SOCOFECHARESPUESTA", DbType = "TIMESTAMP(6) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? SOCOFECHARESPUESTA
        {
            get
            {
                return this._SOCOFECHARESPUESTA;
            }
            set
            {
                if (this._SOCOFECHARESPUESTA != value)
                {
                    this.OnSOCOFECHARESPUESTAChanging(value);
                    this.SendPropertyChanging("SOCOFECHARESPUESTA");
                    this._SOCOFECHARESPUESTA = value;
                    this.SendPropertyChanged("SOCOFECHARESPUESTA");
                    this.OnSOCOFECHARESPUESTAChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha y hora limite de recepcion de propuestas
        /// </summary>
        [Column(Name = @"SOCO_FECHAPROPUESTAS", Storage = "_SOCOFECHAPROPUESTAS", DbType = "TIMESTAMP(6) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? SOCOFECHAPROPUESTAS
        {
            get
            {
                return this._SOCOFECHAPROPUESTAS;
            }
            set
            {
                if (this._SOCOFECHAPROPUESTAS != value)
                {
                    this.OnSOCOFECHAPROPUESTASChanging(value);
                    this.SendPropertyChanging("SOCOFECHAPROPUESTAS");
                    this._SOCOFECHAPROPUESTAS = value;
                    this.SendPropertyChanged("SOCOFECHAPROPUESTAS");
                    this.OnSOCOFECHAPROPUESTASChanged();
                }
            }
        }

    
        /// <summary>
        /// Area solicita
        /// </summary>
        [Column(Name = @"CLAS_AREA9", Storage = "_CLASAREA9", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CLASAREA9
        {
            get
            {
                return this._CLASAREA9;
            }
            set
            {
                if (this._CLASAREA9 != value)
                {
                    if (this._POGECLASEVALOR_CLASAREA9.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCLASAREA9Changing(value);
                    this.SendPropertyChanging("CLASAREA9");
                    this._CLASAREA9 = value;
                    this.SendPropertyChanged("CLASAREA9");
                    this.OnCLASAREA9Changed();
                }
            }
        }

    
        /// <summary>
        /// Numero de SAIA
        /// </summary>
        [Column(Name = @"SOCO_NUMEROSAIA", Storage = "_SOCONUMEROSAIA", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? SOCONUMEROSAIA
        {
            get
            {
                return this._SOCONUMEROSAIA;
            }
            set
            {
                if (this._SOCONUMEROSAIA != value)
                {
                    this.OnSOCONUMEROSAIAChanging(value);
                    this.SendPropertyChanging("SOCONUMEROSAIA");
                    this._SOCONUMEROSAIA = value;
                    this.SendPropertyChanged("SOCONUMEROSAIA");
                    this.OnSOCONUMEROSAIAChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo Proyecto SAIA cuando la solicitud tiene SAIA asociado
        /// </summary>
        [Column(Name = @"SOCO_PROYECTOSAIA", Storage = "_SOCOPROYECTOSAIA", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? SOCOPROYECTOSAIA
        {
            get
            {
                return this._SOCOPROYECTOSAIA;
            }
            set
            {
                if (this._SOCOPROYECTOSAIA != value)
                {
                    this.OnSOCOPROYECTOSAIAChanging(value);
                    this.SendPropertyChanging("SOCOPROYECTOSAIA");
                    this._SOCOPROYECTOSAIA = value;
                    this.SendPropertyChanged("SOCOPROYECTOSAIA");
                    this.OnSOCOPROYECTOSAIAChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha de SAIA
        /// </summary>
        [Column(Name = @"SOCO_FECHASAIA", Storage = "_SOCOFECHASAIA", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? SOCOFECHASAIA
        {
            get
            {
                return this._SOCOFECHASAIA;
            }
            set
            {
                if (this._SOCOFECHASAIA != value)
                {
                    this.OnSOCOFECHASAIAChanging(value);
                    this.SendPropertyChanging("SOCOFECHASAIA");
                    this._SOCOFECHASAIA = value;
                    this.SendPropertyChanged("SOCOFECHASAIA");
                    this.OnSOCOFECHASAIAChanged();
                }
            }
        }

    
        /// <summary>
        /// Tipo de solicitud Servicio o elementos
        /// </summary>
        [Column(Name = @"SOCO_TIPOSOLICITUD", Storage = "_SOCOTIPOSOLICITUD", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string SOCOTIPOSOLICITUD
        {
            get
            {
                return this._SOCOTIPOSOLICITUD;
            }
            set
            {
                if (this._SOCOTIPOSOLICITUD != value)
                {
                    this.OnSOCOTIPOSOLICITUDChanging(value);
                    this.SendPropertyChanging("SOCOTIPOSOLICITUD");
                    this._SOCOTIPOSOLICITUD = value;
                    this.SendPropertyChanged("SOCOTIPOSOLICITUD");
                    this.OnSOCOTIPOSOLICITUDChanged();
                }
            }
        }

    
        /// <summary>
        /// Tipo de presupuesta si es SAIA o por FAC
        /// </summary>
        [Column(Name = @"SOCO_PRESUPUESTO", Storage = "_SOCOPRESUPUESTO", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string SOCOPRESUPUESTO
        {
            get
            {
                return this._SOCOPRESUPUESTO;
            }
            set
            {
                if (this._SOCOPRESUPUESTO != value)
                {
                    this.OnSOCOPRESUPUESTOChanging(value);
                    this.SendPropertyChanging("SOCOPRESUPUESTO");
                    this._SOCOPRESUPUESTO = value;
                    this.SendPropertyChanged("SOCOPRESUPUESTO");
                    this.OnSOCOPRESUPUESTOChanged();
                }
            }
        }

    
        /// <summary>
        /// Valor presupuestado
        /// </summary>
        [Column(Name = @"SOCO_VALOR", Storage = "_SOCOVALOR", DbType = "NUMBER(12,2) NULL", UpdateCheck = UpdateCheck.Never)]
        public double? SOCOVALOR
        {
            get
            {
                return this._SOCOVALOR;
            }
            set
            {
                if (this._SOCOVALOR != value)
                {
                    this.OnSOCOVALORChanging(value);
                    this.SendPropertyChanging("SOCOVALOR");
                    this._SOCOVALOR = value;
                    this.SendPropertyChanged("SOCOVALOR");
                    this.OnSOCOVALORChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha de cierre de la solicitud
        /// </summary>
        [Column(Name = @"SOCO_FECHACIERRE", Storage = "_SOCOFECHACIERRE", DbType = "TIMESTAMP(6) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? SOCOFECHACIERRE
        {
            get
            {
                return this._SOCOFECHACIERRE;
            }
            set
            {
                if (this._SOCOFECHACIERRE != value)
                {
                    this.OnSOCOFECHACIERREChanging(value);
                    this.SendPropertyChanging("SOCOFECHACIERRE");
                    this._SOCOFECHACIERRE = value;
                    this.SendPropertyChanged("SOCOFECHACIERRE");
                    this.OnSOCOFECHACIERREChanged();
                }
            }
        }

    
        /// <summary>
        /// Observacion de Rechazo de Solicitud
        /// </summary>
        [Column(Name = @"SOCO_OBSERVACIONESRECHAZA", Storage = "_SOCOOBSERVACIONESRECHAZA", DbType = "VARCHAR2(500 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string SOCOOBSERVACIONESRECHAZA
        {
            get
            {
                return this._SOCOOBSERVACIONESRECHAZA;
            }
            set
            {
                if (this._SOCOOBSERVACIONESRECHAZA != value)
                {
                    this.OnSOCOOBSERVACIONESRECHAZAChanging(value);
                    this.SendPropertyChanging("SOCOOBSERVACIONESRECHAZA");
                    this._SOCOOBSERVACIONESRECHAZA = value;
                    this.SendPropertyChanged("SOCOOBSERVACIONESRECHAZA");
                    this.OnSOCOOBSERVACIONESRECHAZAChanged();
                }
            }
        }

    
        /// <summary>
        /// Logs fecha para el manejo de histico cambio de estados
        /// </summary>
        [Column(Name = @"LOGS_FECHA", Storage = "_LOGSFECHA", CanBeNull = false, DbType = "TIMESTAMP(6) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime LOGSFECHA
        {
            get
            {
                return this._LOGSFECHA;
            }
            set
            {
                if (this._LOGSFECHA != value)
                {
                    this.OnLOGSFECHAChanging(value);
                    this.SendPropertyChanging("LOGSFECHA");
                    this._LOGSFECHA = value;
                    this.SendPropertyChanged("LOGSFECHA");
                    this.OnLOGSFECHAChanged();
                }
            }
        }

    
        /// <summary>
        /// Logs usuario para el manejo de cambio de estado
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Indica si ya se envio la notificacion a los proveedores cuando la solicitud es autorizada por el area de compras S: Si, N: No
        /// </summary>
        [Column(Name = @"SOCO_ENVIOPROV", Storage = "_SOCOENVIOPROV", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string SOCOENVIOPROV
        {
            get
            {
                return this._SOCOENVIOPROV;
            }
            set
            {
                if (this._SOCOENVIOPROV != value)
                {
                    this.OnSOCOENVIOPROVChanging(value);
                    this.SendPropertyChanging("SOCOENVIOPROV");
                    this._SOCOENVIOPROV = value;
                    this.SendPropertyChanged("SOCOENVIOPROV");
                    this.OnSOCOENVIOPROVChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SOCOOBSERVACIONADJUDICACION in the schema.
        /// </summary>
        [Column(Name = @"SOCO_OBSERVACIONADJUDICACION", Storage = "_SOCOOBSERVACIONADJUDICACION", DbType = "VARCHAR2(1000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string SOCOOBSERVACIONADJUDICACION
        {
            get
            {
                return this._SOCOOBSERVACIONADJUDICACION;
            }
            set
            {
                if (this._SOCOOBSERVACIONADJUDICACION != value)
                {
                    this.OnSOCOOBSERVACIONADJUDICACIONChanging(value);
                    this.SendPropertyChanging("SOCOOBSERVACIONADJUDICACION");
                    this._SOCOOBSERVACIONADJUDICACION = value;
                    this.SendPropertyChanged("SOCOOBSERVACIONADJUDICACION");
                    this.OnSOCOOBSERVACIONADJUDICACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEHISTORICOESTADOSOLICITUDs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONESOLICITUDCOMPRA_PONEHISTORICOESTADOSOLICITUD", Storage="_PONEHISTORICOESTADOSOLICITUDs", ThisKey="SOCOSOLICITUD", OtherKey="SOCOSOLICITUD", DeleteRule="NO ACTION")]
        public EntitySet<PONEHISTORICOESTADOSOLICITUD> PONEHISTORICOESTADOSOLICITUDs
        {
            get
            {
                return this._PONEHISTORICOESTADOSOLICITUDs;
            }
            set
            {
                this._PONEHISTORICOESTADOSOLICITUDs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDOCUMENTOSOLICITUDs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONESOLICITUDCOMPRA_PONEDOCUMENTOSOLICITUD", Storage="_PONEDOCUMENTOSOLICITUDs", ThisKey="SOCOSOLICITUD", OtherKey="SOCOSOLICITUD", DeleteRule="NO ACTION")]
        public EntitySet<PONEDOCUMENTOSOLICITUD> PONEDOCUMENTOSOLICITUDs
        {
            get
            {
                return this._PONEDOCUMENTOSOLICITUDs;
            }
            set
            {
                this._PONEDOCUMENTOSOLICITUDs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDOCSINVITACIONs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONESOLICITUDCOMPRA_PONEDOCSINVITACION", Storage="_PONEDOCSINVITACIONs", ThisKey="SOCOSOLICITUD", OtherKey="SOCOSOLICITUD", DeleteRule="NO ACTION")]
        public EntitySet<PONEDOCSINVITACION> PONEDOCSINVITACIONs
        {
            get
            {
                return this._PONEDOCSINVITACIONs;
            }
            set
            {
                this._PONEDOCSINVITACIONs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDETALLESOLICITUDs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONESOLICITUDCOMPRA_PONEDETALLESOLICITUD", Storage="_PONEDETALLESOLICITUDs", ThisKey="SOCOSOLICITUD", OtherKey="SOCOSOLICITUD", DeleteRule="NO ACTION")]
        public EntitySet<PONEDETALLESOLICITUD> PONEDETALLESOLICITUDs
        {
            get
            {
                return this._PONEDETALLESOLICITUDs;
            }
            set
            {
                this._PONEDETALLESOLICITUDs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONECOTIZACIONs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONESOLICITUDCOMPRA_PONECOTIZACION", Storage="_PONECOTIZACIONs", ThisKey="SOCOSOLICITUD", OtherKey="SOCOSOLICITUD", DeleteRule="NO ACTION")]
        public EntitySet<PONECOTIZACION> PONECOTIZACIONs
        {
            get
            {
                return this._PONECOTIZACIONs;
            }
            set
            {
                this._PONECOTIZACIONs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for POGECLASEVALOR_CLASAREA9 in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGECLASEVALOR_PONESOLICITUDCOMPRA", Storage="_POGECLASEVALOR_CLASAREA9", ThisKey="CLASAREA9", OtherKey="CLVACLASEVALOR", IsForeignKey=true)]
        public POGECLASEVALOR POGECLASEVALOR_CLASAREA9
        {
            get
            {
                return this._POGECLASEVALOR_CLASAREA9.Entity;
            }
            set
            {
                POGECLASEVALOR previousValue = this._POGECLASEVALOR_CLASAREA9.Entity;
                if ((previousValue != value) || (this._POGECLASEVALOR_CLASAREA9.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("POGECLASEVALOR_CLASAREA9");
                    if (previousValue != null)
                    {
                        this._POGECLASEVALOR_CLASAREA9.Entity = null;
                        previousValue.PONESOLICITUDCOMPRAs_CLASAREA9.Remove(this);
                    }
                    this._POGECLASEVALOR_CLASAREA9.Entity = value;
                    if (value != null)
                    {
                        this._CLASAREA9 = value.CLVACLASEVALOR;
                        value.PONESOLICITUDCOMPRAs_CLASAREA9.Add(this);
                    }
                    else
                    {
                        this._CLASAREA9 = default(decimal);
                    }
                    this.SendPropertyChanged("POGECLASEVALOR_CLASAREA9");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POGECLASEVALOR_CLASTIPOCONTRATACION3 in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGECLASEVALOR_PONESOLICITUDCOMPRA1", Storage="_POGECLASEVALOR_CLASTIPOCONTRATACION3", ThisKey="CLASTIPOCONTRATACION3", OtherKey="CLVACLASEVALOR", IsForeignKey=true)]
        public POGECLASEVALOR POGECLASEVALOR_CLASTIPOCONTRATACION3
        {
            get
            {
                return this._POGECLASEVALOR_CLASTIPOCONTRATACION3.Entity;
            }
            set
            {
                POGECLASEVALOR previousValue = this._POGECLASEVALOR_CLASTIPOCONTRATACION3.Entity;
                if ((previousValue != value) || (this._POGECLASEVALOR_CLASTIPOCONTRATACION3.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("POGECLASEVALOR_CLASTIPOCONTRATACION3");
                    if (previousValue != null)
                    {
                        this._POGECLASEVALOR_CLASTIPOCONTRATACION3.Entity = null;
                        previousValue.PONESOLICITUDCOMPRAs_CLASTIPOCONTRATACION3.Remove(this);
                    }
                    this._POGECLASEVALOR_CLASTIPOCONTRATACION3.Entity = value;
                    if (value != null)
                    {
                        this._CLASTIPOCONTRATACION3 = value.CLVACLASEVALOR;
                        value.PONESOLICITUDCOMPRAs_CLASTIPOCONTRATACION3.Add(this);
                    }
                    else
                    {
                        this._CLASTIPOCONTRATACION3 = default(decimal);
                    }
                    this.SendPropertyChanged("POGECLASEVALOR_CLASTIPOCONTRATACION3");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEADJUDICACIONs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONESOLICITUDCOMPRA_PONEADJUDICACION", Storage="_PONEADJUDICACIONs", ThisKey="SOCOSOLICITUD", OtherKey="SOCOSOLICITUD", DeleteRule="NO ACTION")]
        public EntitySet<PONEADJUDICACION> PONEADJUDICACIONs
        {
            get
            {
                return this._PONEADJUDICACIONs;
            }
            set
            {
                this._PONEADJUDICACIONs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEPREGUNTASOLICITUDs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONESOLICITUDCOMPRA_PONEPREGUNTASOLICITUD", Storage="_PONEPREGUNTASOLICITUDs", ThisKey="SOCOSOLICITUD", OtherKey="SOCOSOLICITUD", DeleteRule="NO ACTION")]
        public EntitySet<PONEPREGUNTASOLICITUD> PONEPREGUNTASOLICITUDs
        {
            get
            {
                return this._PONEPREGUNTASOLICITUDs;
            }
            set
            {
                this._PONEPREGUNTASOLICITUDs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_PONEHISTORICOESTADOSOLICITUDs(PONEHISTORICOESTADOSOLICITUD entity)
        {
            this.SendPropertyChanging("PONEHISTORICOESTADOSOLICITUDs");
            entity.PONESOLICITUDCOMPRA = this;
        }
    
        private void detach_PONEHISTORICOESTADOSOLICITUDs(PONEHISTORICOESTADOSOLICITUD entity)
        {
            this.SendPropertyChanging("PONEHISTORICOESTADOSOLICITUDs");
            entity.PONESOLICITUDCOMPRA = null;
        }

        private void attach_PONEDOCUMENTOSOLICITUDs(PONEDOCUMENTOSOLICITUD entity)
        {
            this.SendPropertyChanging("PONEDOCUMENTOSOLICITUDs");
            entity.PONESOLICITUDCOMPRA = this;
        }
    
        private void detach_PONEDOCUMENTOSOLICITUDs(PONEDOCUMENTOSOLICITUD entity)
        {
            this.SendPropertyChanging("PONEDOCUMENTOSOLICITUDs");
            entity.PONESOLICITUDCOMPRA = null;
        }

        private void attach_PONEDOCSINVITACIONs(PONEDOCSINVITACION entity)
        {
            this.SendPropertyChanging("PONEDOCSINVITACIONs");
            entity.PONESOLICITUDCOMPRA = this;
        }
    
        private void detach_PONEDOCSINVITACIONs(PONEDOCSINVITACION entity)
        {
            this.SendPropertyChanging("PONEDOCSINVITACIONs");
            entity.PONESOLICITUDCOMPRA = null;
        }

        private void attach_PONEDETALLESOLICITUDs(PONEDETALLESOLICITUD entity)
        {
            this.SendPropertyChanging("PONEDETALLESOLICITUDs");
            entity.PONESOLICITUDCOMPRA = this;
        }
    
        private void detach_PONEDETALLESOLICITUDs(PONEDETALLESOLICITUD entity)
        {
            this.SendPropertyChanging("PONEDETALLESOLICITUDs");
            entity.PONESOLICITUDCOMPRA = null;
        }

        private void attach_PONECOTIZACIONs(PONECOTIZACION entity)
        {
            this.SendPropertyChanging("PONECOTIZACIONs");
            entity.PONESOLICITUDCOMPRA = this;
        }
    
        private void detach_PONECOTIZACIONs(PONECOTIZACION entity)
        {
            this.SendPropertyChanging("PONECOTIZACIONs");
            entity.PONESOLICITUDCOMPRA = null;
        }

        private void attach_PONEADJUDICACIONs(PONEADJUDICACION entity)
        {
            this.SendPropertyChanging("PONEADJUDICACIONs");
            entity.PONESOLICITUDCOMPRA = this;
        }
    
        private void detach_PONEADJUDICACIONs(PONEADJUDICACION entity)
        {
            this.SendPropertyChanging("PONEADJUDICACIONs");
            entity.PONESOLICITUDCOMPRA = null;
        }

        private void attach_PONEPREGUNTASOLICITUDs(PONEPREGUNTASOLICITUD entity)
        {
            this.SendPropertyChanging("PONEPREGUNTASOLICITUDs");
            entity.PONESOLICITUDCOMPRA = this;
        }
    
        private void detach_PONEPREGUNTASOLICITUDs(PONEPREGUNTASOLICITUD entity)
        {
            this.SendPropertyChanging("PONEPREGUNTASOLICITUDs");
            entity.PONESOLICITUDCOMPRA = null;
        }
    }

    /// <summary>
    /// Tabla para almacer las actividades alternas del proveedor
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_PROVEEDORACTALTERNA")]
    public partial class PONEPROVEEDORACTALTERNA : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _PRAAACTIVIDADALTERNA;

        private decimal _PROVPROVEEDOR;

        private string _PONECODIGOACTIVIDAD;

        private decimal? _LOGSUSUARIO;
        #pragma warning restore 0649

        private EntityRef<PONEPROVEEDOR> _PONEPROVEEDOR;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnPRAAACTIVIDADALTERNAChanging(decimal value);
        partial void OnPRAAACTIVIDADALTERNAChanged();
        partial void OnPROVPROVEEDORChanging(decimal value);
        partial void OnPROVPROVEEDORChanged();
        partial void OnPONECODIGOACTIVIDADChanging(string value);
        partial void OnPONECODIGOACTIVIDADChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        #endregion

        public PONEPROVEEDORACTALTERNA()
        {
            this._PONEPROVEEDOR  = default(EntityRef<PONEPROVEEDOR>);
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"PRAA_ACTIVIDADALTERNA", Storage = "_PRAAACTIVIDADALTERNA", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal PRAAACTIVIDADALTERNA
        {
            get
            {
                return this._PRAAACTIVIDADALTERNA;
            }
            set
            {
                if (this._PRAAACTIVIDADALTERNA != value)
                {
                    this.OnPRAAACTIVIDADALTERNAChanging(value);
                    this.SendPropertyChanging("PRAAACTIVIDADALTERNA");
                    this._PRAAACTIVIDADALTERNA = value;
                    this.SendPropertyChanged("PRAAACTIVIDADALTERNA");
                    this.OnPRAAACTIVIDADALTERNAChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de proveedor
        /// </summary>
        [Column(Name = @"PROV_PROVEEDOR", Storage = "_PROVPROVEEDOR", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal PROVPROVEEDOR
        {
            get
            {
                return this._PROVPROVEEDOR;
            }
            set
            {
                if (this._PROVPROVEEDOR != value)
                {
                    if (this._PONEPROVEEDOR.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnPROVPROVEEDORChanging(value);
                    this.SendPropertyChanging("PROVPROVEEDOR");
                    this._PROVPROVEEDOR = value;
                    this.SendPropertyChanged("PROVPROVEEDOR");
                    this.OnPROVPROVEEDORChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de actividad
        /// </summary>
        [Column(Name = @"PONE_CODIGOACTIVIDAD", Storage = "_PONECODIGOACTIVIDAD", DbType = "VARCHAR2(4 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PONECODIGOACTIVIDAD
        {
            get
            {
                return this._PONECODIGOACTIVIDAD;
            }
            set
            {
                if (this._PONECODIGOACTIVIDAD != value)
                {
                    this.OnPONECODIGOACTIVIDADChanging(value);
                    this.SendPropertyChanging("PONECODIGOACTIVIDAD");
                    this._PONECODIGOACTIVIDAD = value;
                    this.SendPropertyChanged("PONECODIGOACTIVIDAD");
                    this.OnPONECODIGOACTIVIDADChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario campo para auditoria
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEPROVEEDOR in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEPROVEEDOR_PONEPROVEEDORACTALTERNA", Storage="_PONEPROVEEDOR", ThisKey="PROVPROVEEDOR", OtherKey="PROVPROVEEDOR", IsForeignKey=true)]
        public PONEPROVEEDOR PONEPROVEEDOR
        {
            get
            {
                return this._PONEPROVEEDOR.Entity;
            }
            set
            {
                PONEPROVEEDOR previousValue = this._PONEPROVEEDOR.Entity;
                if ((previousValue != value) || (this._PONEPROVEEDOR.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONEPROVEEDOR");
                    if (previousValue != null)
                    {
                        this._PONEPROVEEDOR.Entity = null;
                        previousValue.PONEPROVEEDORACTALTERNAs.Remove(this);
                    }
                    this._PONEPROVEEDOR.Entity = value;
                    if (value != null)
                    {
                        this._PROVPROVEEDOR = value.PROVPROVEEDOR;
                        value.PONEPROVEEDORACTALTERNAs.Add(this);
                    }
                    else
                    {
                        this._PROVPROVEEDOR = default(decimal);
                    }
                    this.SendPropertyChanged("PONEPROVEEDOR");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Almacena la informacion general de los proveedores
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_PROVEEDOR")]
    public partial class PONEPROVEEDOR : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _PROVPROVEEDOR;

        private decimal? _CLASTIPOIDENTIFICACION2;

        private string _PROVIDENTIFICACION;

        private string _PROVRAZONSOCIAL;

        private string _PROVREPRESENTANTELEGAL;

        private string _PROVIDENTREPRESENTANTE;

        private string _PROVREGIMENTRIBUTARIO;

        private long? _PROVTELEFONO;

        private string _PROVEMAIL;

        private System.DateTime _PROVFECHAINSCRIPCION;

        private string _PROVESTADO;

        private decimal? _PROVUSUARIOAUTORIZO;

        private System.DateTime? _PROVFECHAAUTORIZACION;

        private decimal? _CLASTIPOIDENTREPRES2;

        private System.DateTime? _PROVFECEXPIDENTREPRESENTANTE;

        private decimal? _PROVLUGAREXPIDENTREPRESENT;

        private System.DateTime? _PROVFECHANACIMIENTO;

        private decimal? _PROVLUGARNACIMIENTO;

        private string _PROVDIRECCIONPRINCIAL;

        private string _PROVDIRECCIONCOMERCIAL;

        private string _ACECCODIGOACTIVIDAD;

        private string _PROVPROFESION;

        private decimal? _PROVACTIVIDAD;

        private string _PROVEMPRESATRABAJA;

        private string _PROVCARGO;

        private decimal? _PROVFAX;

        private string _PROVMANEJARECURSOPUBLICOS;

        private string _PROVRECONOCIMIENTOPUBLICO;

        private string _PROVPODERPUBLICO;

        private string _PROVOBSERVACION;

        private decimal? _CLASTIPOEMPRESA13;

        private decimal? _CLASSECTORECONOMICO14;

        private decimal? _PROVNACIONALIDADREPRESENTANTE;

        private decimal? _PROVINGRESOSMENSUALES;

        private decimal? _PROVEGRESOSMENSUALES;

        private decimal? _PROVACTIVOS;

        private decimal? _PROVPASIVOS;

        private decimal? _PROVPATRIMONIO;

        private decimal? _PROVOTROSINGRESOS;

        private string _PROVCONCEPTOOTROSINGRESOS;

        private string _PROVTRANSMONEDAEXT;

        private decimal? _CLASTIPOMONEDA5;

        private string _PROVPRODFINANEXT;

        private string _PROVRESOLAUTORRETENEDOR;

        private string _PROVENTIDADESTATAL;

        private string _PROVGRANCONTRIBUYENTE;

        private string _PROVRESPONSABLEIVA;

        private string _PROVAGENTERETENEDORIVA;

        private string _PROVINDUSTRIAYCOMERCIO;

        private decimal? _CLASENTIDADBANCARIA6;

        private string _PROVSUCURSALBANCO;

        private string _PROVNUMEROCUENTA;

        private decimal? _CLASTIPOCUENTA7;

        private string _PROVTITULARCUENTA;

        private string _PROVIDENTITULARCUENTA;

        private System.DateTime? _PROVULTMAFECACTUALIZACION;

        private decimal? _CLASTIPOPERSONAL1;

        private decimal? _PROVPAIS;

        private decimal? _PROVDEPARTAMENTO;

        private decimal? _PROVCIUDAD;

        private string _PROVAPARTADOAEREO;

        private string _PROVDATOSPERSONALES;

        private string _PROVTELEFONOEMPRESA;

        private int? _PROVCIUDADEMPRESA;

        private string _PROVTELEFONOSUCURSAL;

        private decimal? _PROVCIUDADSUCURSAL;

        private string _PROVDIRECCIONSUCURSAL;

        private string _PROVENTIDADSINANILUCRO;

        private string _PROVRESOLENTSINANILUCRO;

        private System.DateTime? _PROVFECHANACIMIENTOREP;

        private decimal? _PROVLUGARNACIMIENTOREP;

        private string _PROVRESOLGRANCONTRIBUYENTE;

        private System.DateTime? _PROVFECHAULTACT;

        private string _PROVAUTORRETENEDOR;

        private string _PROVCONTRIBUYENTERENTA;

        private string _CLASACTPEREIRA14;

        private string _PROVRESOLAGENTERETENEDORIVA;

        private decimal? _PROVLUGAREXPEDICION;

        private string _PROVCLASTAMANO;

        private string _PROVCLASSECTOR;

        private string _PROVOPERMERCANTILES;

        private decimal? _LOGSUSUARIO;
        #pragma warning restore 0649

        private EntitySet<PONEPROVEEDORACTALTERNA> _PONEPROVEEDORACTALTERNAs;

        private EntityRef<POGEACTIVIDADECONOMICA> _POGEACTIVIDADECONOMICA;

        private EntitySet<PONEHISTDOCPROV> _PONEHISTDOCPROVs;

        private EntitySet<PONEFORMATOXPROVEEDOR> _PONEFORMATOXPROVEEDORs;

        private EntitySet<PONEESPECIALIDADPROVEEDOR> _PONEESPECIALIDADPROVEEDORs;

        private EntitySet<PONEDETALLEACCIONISTA> _PONEDETALLEACCIONISTAs;

        private EntitySet<PONECOTIZACION> _PONECOTIZACIONs;

        private EntitySet<PONEACTUALIZACIONPROVEEDOR> _PONEACTUALIZACIONPROVEEDORs;

        private EntitySet<POGEUSUARIO> _POGEUSUARIOs;

        private EntitySet<PONEDOCUMENTO> _PONEDOCUMENTOs;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnPROVPROVEEDORChanging(decimal value);
        partial void OnPROVPROVEEDORChanged();
        partial void OnCLASTIPOIDENTIFICACION2Changing(decimal? value);
        partial void OnCLASTIPOIDENTIFICACION2Changed();
        partial void OnPROVIDENTIFICACIONChanging(string value);
        partial void OnPROVIDENTIFICACIONChanged();
        partial void OnPROVRAZONSOCIALChanging(string value);
        partial void OnPROVRAZONSOCIALChanged();
        partial void OnPROVREPRESENTANTELEGALChanging(string value);
        partial void OnPROVREPRESENTANTELEGALChanged();
        partial void OnPROVIDENTREPRESENTANTEChanging(string value);
        partial void OnPROVIDENTREPRESENTANTEChanged();
        partial void OnPROVREGIMENTRIBUTARIOChanging(string value);
        partial void OnPROVREGIMENTRIBUTARIOChanged();
        partial void OnPROVTELEFONOChanging(long? value);
        partial void OnPROVTELEFONOChanged();
        partial void OnPROVEMAILChanging(string value);
        partial void OnPROVEMAILChanged();
        partial void OnPROVFECHAINSCRIPCIONChanging(System.DateTime value);
        partial void OnPROVFECHAINSCRIPCIONChanged();
        partial void OnPROVESTADOChanging(string value);
        partial void OnPROVESTADOChanged();
        partial void OnPROVUSUARIOAUTORIZOChanging(decimal? value);
        partial void OnPROVUSUARIOAUTORIZOChanged();
        partial void OnPROVFECHAAUTORIZACIONChanging(System.DateTime? value);
        partial void OnPROVFECHAAUTORIZACIONChanged();
        partial void OnCLASTIPOIDENTREPRES2Changing(decimal? value);
        partial void OnCLASTIPOIDENTREPRES2Changed();
        partial void OnPROVFECEXPIDENTREPRESENTANTEChanging(System.DateTime? value);
        partial void OnPROVFECEXPIDENTREPRESENTANTEChanged();
        partial void OnPROVLUGAREXPIDENTREPRESENTChanging(decimal? value);
        partial void OnPROVLUGAREXPIDENTREPRESENTChanged();
        partial void OnPROVFECHANACIMIENTOChanging(System.DateTime? value);
        partial void OnPROVFECHANACIMIENTOChanged();
        partial void OnPROVLUGARNACIMIENTOChanging(decimal? value);
        partial void OnPROVLUGARNACIMIENTOChanged();
        partial void OnPROVDIRECCIONPRINCIALChanging(string value);
        partial void OnPROVDIRECCIONPRINCIALChanged();
        partial void OnPROVDIRECCIONCOMERCIALChanging(string value);
        partial void OnPROVDIRECCIONCOMERCIALChanged();
        partial void OnACECCODIGOACTIVIDADChanging(string value);
        partial void OnACECCODIGOACTIVIDADChanged();
        partial void OnPROVPROFESIONChanging(string value);
        partial void OnPROVPROFESIONChanged();
        partial void OnPROVACTIVIDADChanging(decimal? value);
        partial void OnPROVACTIVIDADChanged();
        partial void OnPROVEMPRESATRABAJAChanging(string value);
        partial void OnPROVEMPRESATRABAJAChanged();
        partial void OnPROVCARGOChanging(string value);
        partial void OnPROVCARGOChanged();
        partial void OnPROVFAXChanging(decimal? value);
        partial void OnPROVFAXChanged();
        partial void OnPROVMANEJARECURSOPUBLICOSChanging(string value);
        partial void OnPROVMANEJARECURSOPUBLICOSChanged();
        partial void OnPROVRECONOCIMIENTOPUBLICOChanging(string value);
        partial void OnPROVRECONOCIMIENTOPUBLICOChanged();
        partial void OnPROVPODERPUBLICOChanging(string value);
        partial void OnPROVPODERPUBLICOChanged();
        partial void OnPROVOBSERVACIONChanging(string value);
        partial void OnPROVOBSERVACIONChanged();
        partial void OnCLASTIPOEMPRESA13Changing(decimal? value);
        partial void OnCLASTIPOEMPRESA13Changed();
        partial void OnCLASSECTORECONOMICO14Changing(decimal? value);
        partial void OnCLASSECTORECONOMICO14Changed();
        partial void OnPROVNACIONALIDADREPRESENTANTEChanging(decimal? value);
        partial void OnPROVNACIONALIDADREPRESENTANTEChanged();
        partial void OnPROVINGRESOSMENSUALESChanging(decimal? value);
        partial void OnPROVINGRESOSMENSUALESChanged();
        partial void OnPROVEGRESOSMENSUALESChanging(decimal? value);
        partial void OnPROVEGRESOSMENSUALESChanged();
        partial void OnPROVACTIVOSChanging(decimal? value);
        partial void OnPROVACTIVOSChanged();
        partial void OnPROVPASIVOSChanging(decimal? value);
        partial void OnPROVPASIVOSChanged();
        partial void OnPROVPATRIMONIOChanging(decimal? value);
        partial void OnPROVPATRIMONIOChanged();
        partial void OnPROVOTROSINGRESOSChanging(decimal? value);
        partial void OnPROVOTROSINGRESOSChanged();
        partial void OnPROVCONCEPTOOTROSINGRESOSChanging(string value);
        partial void OnPROVCONCEPTOOTROSINGRESOSChanged();
        partial void OnPROVTRANSMONEDAEXTChanging(string value);
        partial void OnPROVTRANSMONEDAEXTChanged();
        partial void OnCLASTIPOMONEDA5Changing(decimal? value);
        partial void OnCLASTIPOMONEDA5Changed();
        partial void OnPROVPRODFINANEXTChanging(string value);
        partial void OnPROVPRODFINANEXTChanged();
        partial void OnPROVRESOLAUTORRETENEDORChanging(string value);
        partial void OnPROVRESOLAUTORRETENEDORChanged();
        partial void OnPROVENTIDADESTATALChanging(string value);
        partial void OnPROVENTIDADESTATALChanged();
        partial void OnPROVGRANCONTRIBUYENTEChanging(string value);
        partial void OnPROVGRANCONTRIBUYENTEChanged();
        partial void OnPROVRESPONSABLEIVAChanging(string value);
        partial void OnPROVRESPONSABLEIVAChanged();
        partial void OnPROVAGENTERETENEDORIVAChanging(string value);
        partial void OnPROVAGENTERETENEDORIVAChanged();
        partial void OnPROVINDUSTRIAYCOMERCIOChanging(string value);
        partial void OnPROVINDUSTRIAYCOMERCIOChanged();
        partial void OnCLASENTIDADBANCARIA6Changing(decimal? value);
        partial void OnCLASENTIDADBANCARIA6Changed();
        partial void OnPROVSUCURSALBANCOChanging(string value);
        partial void OnPROVSUCURSALBANCOChanged();
        partial void OnPROVNUMEROCUENTAChanging(string value);
        partial void OnPROVNUMEROCUENTAChanged();
        partial void OnCLASTIPOCUENTA7Changing(decimal? value);
        partial void OnCLASTIPOCUENTA7Changed();
        partial void OnPROVTITULARCUENTAChanging(string value);
        partial void OnPROVTITULARCUENTAChanged();
        partial void OnPROVIDENTITULARCUENTAChanging(string value);
        partial void OnPROVIDENTITULARCUENTAChanged();
        partial void OnPROVULTMAFECACTUALIZACIONChanging(System.DateTime? value);
        partial void OnPROVULTMAFECACTUALIZACIONChanged();
        partial void OnCLASTIPOPERSONAL1Changing(decimal? value);
        partial void OnCLASTIPOPERSONAL1Changed();
        partial void OnPROVPAISChanging(decimal? value);
        partial void OnPROVPAISChanged();
        partial void OnPROVDEPARTAMENTOChanging(decimal? value);
        partial void OnPROVDEPARTAMENTOChanged();
        partial void OnPROVCIUDADChanging(decimal? value);
        partial void OnPROVCIUDADChanged();
        partial void OnPROVAPARTADOAEREOChanging(string value);
        partial void OnPROVAPARTADOAEREOChanged();
        partial void OnPROVDATOSPERSONALESChanging(string value);
        partial void OnPROVDATOSPERSONALESChanged();
        partial void OnPROVTELEFONOEMPRESAChanging(string value);
        partial void OnPROVTELEFONOEMPRESAChanged();
        partial void OnPROVCIUDADEMPRESAChanging(int? value);
        partial void OnPROVCIUDADEMPRESAChanged();
        partial void OnPROVTELEFONOSUCURSALChanging(string value);
        partial void OnPROVTELEFONOSUCURSALChanged();
        partial void OnPROVCIUDADSUCURSALChanging(decimal? value);
        partial void OnPROVCIUDADSUCURSALChanged();
        partial void OnPROVDIRECCIONSUCURSALChanging(string value);
        partial void OnPROVDIRECCIONSUCURSALChanged();
        partial void OnPROVENTIDADSINANILUCROChanging(string value);
        partial void OnPROVENTIDADSINANILUCROChanged();
        partial void OnPROVRESOLENTSINANILUCROChanging(string value);
        partial void OnPROVRESOLENTSINANILUCROChanged();
        partial void OnPROVFECHANACIMIENTOREPChanging(System.DateTime? value);
        partial void OnPROVFECHANACIMIENTOREPChanged();
        partial void OnPROVLUGARNACIMIENTOREPChanging(decimal? value);
        partial void OnPROVLUGARNACIMIENTOREPChanged();
        partial void OnPROVRESOLGRANCONTRIBUYENTEChanging(string value);
        partial void OnPROVRESOLGRANCONTRIBUYENTEChanged();
        partial void OnPROVFECHAULTACTChanging(System.DateTime? value);
        partial void OnPROVFECHAULTACTChanged();
        partial void OnPROVAUTORRETENEDORChanging(string value);
        partial void OnPROVAUTORRETENEDORChanged();
        partial void OnPROVCONTRIBUYENTERENTAChanging(string value);
        partial void OnPROVCONTRIBUYENTERENTAChanged();
        partial void OnCLASACTPEREIRA14Changing(string value);
        partial void OnCLASACTPEREIRA14Changed();
        partial void OnPROVRESOLAGENTERETENEDORIVAChanging(string value);
        partial void OnPROVRESOLAGENTERETENEDORIVAChanged();
        partial void OnPROVLUGAREXPEDICIONChanging(decimal? value);
        partial void OnPROVLUGAREXPEDICIONChanged();
        partial void OnPROVCLASTAMANOChanging(string value);
        partial void OnPROVCLASTAMANOChanged();
        partial void OnPROVCLASSECTORChanging(string value);
        partial void OnPROVCLASSECTORChanged();
        partial void OnPROVOPERMERCANTILESChanging(string value);
        partial void OnPROVOPERMERCANTILESChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        #endregion

        public PONEPROVEEDOR()
        {
            this._PONEPROVEEDORACTALTERNAs = new EntitySet<PONEPROVEEDORACTALTERNA>(new Action<PONEPROVEEDORACTALTERNA>(this.attach_PONEPROVEEDORACTALTERNAs), new Action<PONEPROVEEDORACTALTERNA>(this.detach_PONEPROVEEDORACTALTERNAs));
            this._POGEACTIVIDADECONOMICA  = default(EntityRef<POGEACTIVIDADECONOMICA>);
            this._PONEHISTDOCPROVs = new EntitySet<PONEHISTDOCPROV>(new Action<PONEHISTDOCPROV>(this.attach_PONEHISTDOCPROVs), new Action<PONEHISTDOCPROV>(this.detach_PONEHISTDOCPROVs));
            this._PONEFORMATOXPROVEEDORs = new EntitySet<PONEFORMATOXPROVEEDOR>(new Action<PONEFORMATOXPROVEEDOR>(this.attach_PONEFORMATOXPROVEEDORs), new Action<PONEFORMATOXPROVEEDOR>(this.detach_PONEFORMATOXPROVEEDORs));
            this._PONEESPECIALIDADPROVEEDORs = new EntitySet<PONEESPECIALIDADPROVEEDOR>(new Action<PONEESPECIALIDADPROVEEDOR>(this.attach_PONEESPECIALIDADPROVEEDORs), new Action<PONEESPECIALIDADPROVEEDOR>(this.detach_PONEESPECIALIDADPROVEEDORs));
            this._PONEDETALLEACCIONISTAs = new EntitySet<PONEDETALLEACCIONISTA>(new Action<PONEDETALLEACCIONISTA>(this.attach_PONEDETALLEACCIONISTAs), new Action<PONEDETALLEACCIONISTA>(this.detach_PONEDETALLEACCIONISTAs));
            this._PONECOTIZACIONs = new EntitySet<PONECOTIZACION>(new Action<PONECOTIZACION>(this.attach_PONECOTIZACIONs), new Action<PONECOTIZACION>(this.detach_PONECOTIZACIONs));
            this._PONEACTUALIZACIONPROVEEDORs = new EntitySet<PONEACTUALIZACIONPROVEEDOR>(new Action<PONEACTUALIZACIONPROVEEDOR>(this.attach_PONEACTUALIZACIONPROVEEDORs), new Action<PONEACTUALIZACIONPROVEEDOR>(this.detach_PONEACTUALIZACIONPROVEEDORs));
            this._POGEUSUARIOs = new EntitySet<POGEUSUARIO>(new Action<POGEUSUARIO>(this.attach_POGEUSUARIOs), new Action<POGEUSUARIO>(this.detach_POGEUSUARIOs));
            this._PONEDOCUMENTOs = new EntitySet<PONEDOCUMENTO>(new Action<PONEDOCUMENTO>(this.attach_PONEDOCUMENTOs), new Action<PONEDOCUMENTO>(this.detach_PONEDOCUMENTOs));
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"PROV_PROVEEDOR", Storage = "_PROVPROVEEDOR", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal PROVPROVEEDOR
        {
            get
            {
                return this._PROVPROVEEDOR;
            }
            set
            {
                if (this._PROVPROVEEDOR != value)
                {
                    this.OnPROVPROVEEDORChanging(value);
                    this.SendPropertyChanging("PROVPROVEEDOR");
                    this._PROVPROVEEDOR = value;
                    this.SendPropertyChanged("PROVPROVEEDOR");
                    this.OnPROVPROVEEDORChanged();
                }
            }
        }

    
        /// <summary>
        /// Tipo de identificacion: 1:CC, 2: NIT, 3...
        /// </summary>
        [Column(Name = @"CLAS_TIPOIDENTIFICACION2", Storage = "_CLASTIPOIDENTIFICACION2", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? CLASTIPOIDENTIFICACION2
        {
            get
            {
                return this._CLASTIPOIDENTIFICACION2;
            }
            set
            {
                if (this._CLASTIPOIDENTIFICACION2 != value)
                {
                    this.OnCLASTIPOIDENTIFICACION2Changing(value);
                    this.SendPropertyChanging("CLASTIPOIDENTIFICACION2");
                    this._CLASTIPOIDENTIFICACION2 = value;
                    this.SendPropertyChanged("CLASTIPOIDENTIFICACION2");
                    this.OnCLASTIPOIDENTIFICACION2Changed();
                }
            }
        }

    
        /// <summary>
        /// Identificacion del proveedor
        /// </summary>
        [Column(Name = @"PROV_IDENTIFICACION", Storage = "_PROVIDENTIFICACION", CanBeNull = false, DbType = "VARCHAR2(15 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVIDENTIFICACION
        {
            get
            {
                return this._PROVIDENTIFICACION;
            }
            set
            {
                if (this._PROVIDENTIFICACION != value)
                {
                    this.OnPROVIDENTIFICACIONChanging(value);
                    this.SendPropertyChanging("PROVIDENTIFICACION");
                    this._PROVIDENTIFICACION = value;
                    this.SendPropertyChanged("PROVIDENTIFICACION");
                    this.OnPROVIDENTIFICACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre de la razon social del proveedor o nombre completo en el caso de que el proveedor se persona natural
        /// </summary>
        [Column(Name = @"PROV_RAZONSOCIAL", Storage = "_PROVRAZONSOCIAL", CanBeNull = false, DbType = "VARCHAR2(100 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVRAZONSOCIAL
        {
            get
            {
                return this._PROVRAZONSOCIAL;
            }
            set
            {
                if (this._PROVRAZONSOCIAL != value)
                {
                    this.OnPROVRAZONSOCIALChanging(value);
                    this.SendPropertyChanging("PROVRAZONSOCIAL");
                    this._PROVRAZONSOCIAL = value;
                    this.SendPropertyChanged("PROVRAZONSOCIAL");
                    this.OnPROVRAZONSOCIALChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre y apellido del representante legal
        /// </summary>
        [Column(Name = @"PROV_REPRESENTANTELEGAL", Storage = "_PROVREPRESENTANTELEGAL", DbType = "VARCHAR2(60 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVREPRESENTANTELEGAL
        {
            get
            {
                return this._PROVREPRESENTANTELEGAL;
            }
            set
            {
                if (this._PROVREPRESENTANTELEGAL != value)
                {
                    this.OnPROVREPRESENTANTELEGALChanging(value);
                    this.SendPropertyChanging("PROVREPRESENTANTELEGAL");
                    this._PROVREPRESENTANTELEGAL = value;
                    this.SendPropertyChanged("PROVREPRESENTANTELEGAL");
                    this.OnPROVREPRESENTANTELEGALChanged();
                }
            }
        }

    
        /// <summary>
        /// Identificacion del representante legal
        /// </summary>
        [Column(Name = @"PROV_IDENTREPRESENTANTE", Storage = "_PROVIDENTREPRESENTANTE", DbType = "VARCHAR2(15 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVIDENTREPRESENTANTE
        {
            get
            {
                return this._PROVIDENTREPRESENTANTE;
            }
            set
            {
                if (this._PROVIDENTREPRESENTANTE != value)
                {
                    this.OnPROVIDENTREPRESENTANTEChanging(value);
                    this.SendPropertyChanging("PROVIDENTREPRESENTANTE");
                    this._PROVIDENTREPRESENTANTE = value;
                    this.SendPropertyChanged("PROVIDENTREPRESENTANTE");
                    this.OnPROVIDENTREPRESENTANTEChanged();
                }
            }
        }

    
        /// <summary>
        /// Tipo regimen tributario
        /// </summary>
        [Column(Name = @"PROV_REGIMENTRIBUTARIO", Storage = "_PROVREGIMENTRIBUTARIO", DbType = "VARCHAR2(2 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVREGIMENTRIBUTARIO
        {
            get
            {
                return this._PROVREGIMENTRIBUTARIO;
            }
            set
            {
                if (this._PROVREGIMENTRIBUTARIO != value)
                {
                    this.OnPROVREGIMENTRIBUTARIOChanging(value);
                    this.SendPropertyChanging("PROVREGIMENTRIBUTARIO");
                    this._PROVREGIMENTRIBUTARIO = value;
                    this.SendPropertyChanged("PROVREGIMENTRIBUTARIO");
                    this.OnPROVREGIMENTRIBUTARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Telefono proveedor
        /// </summary>
        [Column(Name = @"PROV_TELEFONO", Storage = "_PROVTELEFONO", DbType = "NUMBER(14) NULL", UpdateCheck = UpdateCheck.Never)]
        public long? PROVTELEFONO
        {
            get
            {
                return this._PROVTELEFONO;
            }
            set
            {
                if (this._PROVTELEFONO != value)
                {
                    this.OnPROVTELEFONOChanging(value);
                    this.SendPropertyChanging("PROVTELEFONO");
                    this._PROVTELEFONO = value;
                    this.SendPropertyChanged("PROVTELEFONO");
                    this.OnPROVTELEFONOChanged();
                }
            }
        }

    
        /// <summary>
        /// Direccion de correo electronico
        /// </summary>
        [Column(Name = @"PROV_EMAIL", Storage = "_PROVEMAIL", CanBeNull = false, DbType = "VARCHAR2(80 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVEMAIL
        {
            get
            {
                return this._PROVEMAIL;
            }
            set
            {
                if (this._PROVEMAIL != value)
                {
                    this.OnPROVEMAILChanging(value);
                    this.SendPropertyChanging("PROVEMAIL");
                    this._PROVEMAIL = value;
                    this.SendPropertyChanged("PROVEMAIL");
                    this.OnPROVEMAILChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha de inscripcion
        /// </summary>
        [Column(Name = @"PROV_FECHAINSCRIPCION", Storage = "_PROVFECHAINSCRIPCION", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime PROVFECHAINSCRIPCION
        {
            get
            {
                return this._PROVFECHAINSCRIPCION;
            }
            set
            {
                if (this._PROVFECHAINSCRIPCION != value)
                {
                    this.OnPROVFECHAINSCRIPCIONChanging(value);
                    this.SendPropertyChanging("PROVFECHAINSCRIPCION");
                    this._PROVFECHAINSCRIPCION = value;
                    this.SendPropertyChanged("PROVFECHAINSCRIPCION");
                    this.OnPROVFECHAINSCRIPCIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Estado del proveedor (A: Activo, P: Pendiente autoriar, I: Inactivo)
        /// </summary>
        [Column(Name = @"PROV_ESTADO", Storage = "_PROVESTADO", CanBeNull = false, DbType = "VARCHAR2(1 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVESTADO
        {
            get
            {
                return this._PROVESTADO;
            }
            set
            {
                if (this._PROVESTADO != value)
                {
                    this.OnPROVESTADOChanging(value);
                    this.SendPropertyChanging("PROVESTADO");
                    this._PROVESTADO = value;
                    this.SendPropertyChanged("PROVESTADO");
                    this.OnPROVESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario autorizo el registro del proveedor
        /// </summary>
        [Column(Name = @"PROV_USUARIOAUTORIZO", Storage = "_PROVUSUARIOAUTORIZO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVUSUARIOAUTORIZO
        {
            get
            {
                return this._PROVUSUARIOAUTORIZO;
            }
            set
            {
                if (this._PROVUSUARIOAUTORIZO != value)
                {
                    this.OnPROVUSUARIOAUTORIZOChanging(value);
                    this.SendPropertyChanging("PROVUSUARIOAUTORIZO");
                    this._PROVUSUARIOAUTORIZO = value;
                    this.SendPropertyChanged("PROVUSUARIOAUTORIZO");
                    this.OnPROVUSUARIOAUTORIZOChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha de autorizacion del registro de proveedor
        /// </summary>
        [Column(Name = @"PROV_FECHAAUTORIZACION", Storage = "_PROVFECHAAUTORIZACION", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? PROVFECHAAUTORIZACION
        {
            get
            {
                return this._PROVFECHAAUTORIZACION;
            }
            set
            {
                if (this._PROVFECHAAUTORIZACION != value)
                {
                    this.OnPROVFECHAAUTORIZACIONChanging(value);
                    this.SendPropertyChanging("PROVFECHAAUTORIZACION");
                    this._PROVFECHAAUTORIZACION = value;
                    this.SendPropertyChanged("PROVFECHAAUTORIZACION");
                    this.OnPROVFECHAAUTORIZACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Tipo de identificacion del representante legal
        /// </summary>
        [Column(Name = @"CLAS_TIPOIDENTREPRES2", Storage = "_CLASTIPOIDENTREPRES2", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? CLASTIPOIDENTREPRES2
        {
            get
            {
                return this._CLASTIPOIDENTREPRES2;
            }
            set
            {
                if (this._CLASTIPOIDENTREPRES2 != value)
                {
                    this.OnCLASTIPOIDENTREPRES2Changing(value);
                    this.SendPropertyChanging("CLASTIPOIDENTREPRES2");
                    this._CLASTIPOIDENTREPRES2 = value;
                    this.SendPropertyChanged("CLASTIPOIDENTREPRES2");
                    this.OnCLASTIPOIDENTREPRES2Changed();
                }
            }
        }

    
        /// <summary>
        /// Fecha de expedicion del documento del representante legal
        /// </summary>
        [Column(Name = @"PROV_FECEXPIDENTREPRESENTANTE", Storage = "_PROVFECEXPIDENTREPRESENTANTE", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? PROVFECEXPIDENTREPRESENTANTE
        {
            get
            {
                return this._PROVFECEXPIDENTREPRESENTANTE;
            }
            set
            {
                if (this._PROVFECEXPIDENTREPRESENTANTE != value)
                {
                    this.OnPROVFECEXPIDENTREPRESENTANTEChanging(value);
                    this.SendPropertyChanging("PROVFECEXPIDENTREPRESENTANTE");
                    this._PROVFECEXPIDENTREPRESENTANTE = value;
                    this.SendPropertyChanged("PROVFECEXPIDENTREPRESENTANTE");
                    this.OnPROVFECEXPIDENTREPRESENTANTEChanged();
                }
            }
        }

    
        /// <summary>
        /// Lugar de expedicion del documento del representante legal o persona natural, codigo
        /// </summary>
        [Column(Name = @"PROV_LUGAREXPIDENTREPRESENT", Storage = "_PROVLUGAREXPIDENTREPRESENT", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVLUGAREXPIDENTREPRESENT
        {
            get
            {
                return this._PROVLUGAREXPIDENTREPRESENT;
            }
            set
            {
                if (this._PROVLUGAREXPIDENTREPRESENT != value)
                {
                    this.OnPROVLUGAREXPIDENTREPRESENTChanging(value);
                    this.SendPropertyChanging("PROVLUGAREXPIDENTREPRESENT");
                    this._PROVLUGAREXPIDENTREPRESENT = value;
                    this.SendPropertyChanged("PROVLUGAREXPIDENTREPRESENT");
                    this.OnPROVLUGAREXPIDENTREPRESENTChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha de nacimiento proveedor en caso de ser persona natural
        /// </summary>
        [Column(Name = @"PROV_FECHANACIMIENTO", Storage = "_PROVFECHANACIMIENTO", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? PROVFECHANACIMIENTO
        {
            get
            {
                return this._PROVFECHANACIMIENTO;
            }
            set
            {
                if (this._PROVFECHANACIMIENTO != value)
                {
                    this.OnPROVFECHANACIMIENTOChanging(value);
                    this.SendPropertyChanging("PROVFECHANACIMIENTO");
                    this._PROVFECHANACIMIENTO = value;
                    this.SendPropertyChanged("PROVFECHANACIMIENTO");
                    this.OnPROVFECHANACIMIENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// lugar de nacimiento proveedor en caso de ser persona natural, Codigo
        /// </summary>
        [Column(Name = @"PROV_LUGARNACIMIENTO", Storage = "_PROVLUGARNACIMIENTO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVLUGARNACIMIENTO
        {
            get
            {
                return this._PROVLUGARNACIMIENTO;
            }
            set
            {
                if (this._PROVLUGARNACIMIENTO != value)
                {
                    this.OnPROVLUGARNACIMIENTOChanging(value);
                    this.SendPropertyChanging("PROVLUGARNACIMIENTO");
                    this._PROVLUGARNACIMIENTO = value;
                    this.SendPropertyChanged("PROVLUGARNACIMIENTO");
                    this.OnPROVLUGARNACIMIENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// Direccion principal de la empresa o direccion de residencia en caso de persona natural
        /// </summary>
        [Column(Name = @"PROV_DIRECCIONPRINCIAL", Storage = "_PROVDIRECCIONPRINCIAL", DbType = "VARCHAR2(150 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVDIRECCIONPRINCIAL
        {
            get
            {
                return this._PROVDIRECCIONPRINCIAL;
            }
            set
            {
                if (this._PROVDIRECCIONPRINCIAL != value)
                {
                    this.OnPROVDIRECCIONPRINCIALChanging(value);
                    this.SendPropertyChanging("PROVDIRECCIONPRINCIAL");
                    this._PROVDIRECCIONPRINCIAL = value;
                    this.SendPropertyChanged("PROVDIRECCIONPRINCIAL");
                    this.OnPROVDIRECCIONPRINCIALChanged();
                }
            }
        }

    
        /// <summary>
        /// Direccion comercial si es PN o direccion de sucursal o agencia en caso de PJ
        /// </summary>
        [Column(Name = @"PROV_DIRECCIONCOMERCIAL", Storage = "_PROVDIRECCIONCOMERCIAL", DbType = "VARCHAR2(110 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVDIRECCIONCOMERCIAL
        {
            get
            {
                return this._PROVDIRECCIONCOMERCIAL;
            }
            set
            {
                if (this._PROVDIRECCIONCOMERCIAL != value)
                {
                    this.OnPROVDIRECCIONCOMERCIALChanging(value);
                    this.SendPropertyChanging("PROVDIRECCIONCOMERCIAL");
                    this._PROVDIRECCIONCOMERCIAL = value;
                    this.SendPropertyChanged("PROVDIRECCIONCOMERCIAL");
                    this.OnPROVDIRECCIONCOMERCIALChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de actividad comercial DIAN
        /// </summary>
        [Column(Name = @"ACEC_CODIGOACTIVIDAD", Storage = "_ACECCODIGOACTIVIDAD", DbType = "VARCHAR2(4 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ACECCODIGOACTIVIDAD
        {
            get
            {
                return this._ACECCODIGOACTIVIDAD;
            }
            set
            {
                if (this._ACECCODIGOACTIVIDAD != value)
                {
                    if (this._POGEACTIVIDADECONOMICA.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnACECCODIGOACTIVIDADChanging(value);
                    this.SendPropertyChanging("ACECCODIGOACTIVIDAD");
                    this._ACECCODIGOACTIVIDAD = value;
                    this.SendPropertyChanged("ACECCODIGOACTIVIDAD");
                    this.OnACECCODIGOACTIVIDADChanged();
                }
            }
        }

    
        /// <summary>
        /// Profesion del proveedor en caso de ser PN
        /// </summary>
        [Column(Name = @"PROV_PROFESION", Storage = "_PROVPROFESION", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVPROFESION
        {
            get
            {
                return this._PROVPROFESION;
            }
            set
            {
                if (this._PROVPROFESION != value)
                {
                    this.OnPROVPROFESIONChanging(value);
                    this.SendPropertyChanging("PROVPROFESION");
                    this._PROVPROFESION = value;
                    this.SendPropertyChanged("PROVPROFESION");
                    this.OnPROVPROFESIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Tipo de empleado en caso de ser PN: Independiente, Dependiente
        /// </summary>
        [Column(Name = @"PROV_ACTIVIDAD", Storage = "_PROVACTIVIDAD", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVACTIVIDAD
        {
            get
            {
                return this._PROVACTIVIDAD;
            }
            set
            {
                if (this._PROVACTIVIDAD != value)
                {
                    this.OnPROVACTIVIDADChanging(value);
                    this.SendPropertyChanging("PROVACTIVIDAD");
                    this._PROVACTIVIDAD = value;
                    this.SendPropertyChanged("PROVACTIVIDAD");
                    this.OnPROVACTIVIDADChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre de la empresa donde trabaja, si el proveedor es persona natural y empleado
        /// </summary>
        [Column(Name = @"PROV_EMPRESATRABAJA", Storage = "_PROVEMPRESATRABAJA", DbType = "VARCHAR2(50 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVEMPRESATRABAJA
        {
            get
            {
                return this._PROVEMPRESATRABAJA;
            }
            set
            {
                if (this._PROVEMPRESATRABAJA != value)
                {
                    this.OnPROVEMPRESATRABAJAChanging(value);
                    this.SendPropertyChanging("PROVEMPRESATRABAJA");
                    this._PROVEMPRESATRABAJA = value;
                    this.SendPropertyChanged("PROVEMPRESATRABAJA");
                    this.OnPROVEMPRESATRABAJAChanged();
                }
            }
        }

    
        /// <summary>
        /// Cargo si es emplado y PN
        /// </summary>
        [Column(Name = @"PROV_CARGO", Storage = "_PROVCARGO", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVCARGO
        {
            get
            {
                return this._PROVCARGO;
            }
            set
            {
                if (this._PROVCARGO != value)
                {
                    this.OnPROVCARGOChanging(value);
                    this.SendPropertyChanging("PROVCARGO");
                    this._PROVCARGO = value;
                    this.SendPropertyChanged("PROVCARGO");
                    this.OnPROVCARGOChanged();
                }
            }
        }

    
        /// <summary>
        /// Numero de fax
        /// </summary>
        [Column(Name = @"PROV_FAX", Storage = "_PROVFAX", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVFAX
        {
            get
            {
                return this._PROVFAX;
            }
            set
            {
                if (this._PROVFAX != value)
                {
                    this.OnPROVFAXChanging(value);
                    this.SendPropertyChanging("PROVFAX");
                    this._PROVFAX = value;
                    this.SendPropertyChanged("PROVFAX");
                    this.OnPROVFAXChanged();
                }
            }
        }

    
        /// <summary>
        /// Indica si el proveedor maneja recursos publicos S: SI, N: NO
        /// </summary>
        [Column(Name = @"PROV_MANEJARECURSOPUBLICOS", Storage = "_PROVMANEJARECURSOPUBLICOS", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVMANEJARECURSOPUBLICOS
        {
            get
            {
                return this._PROVMANEJARECURSOPUBLICOS;
            }
            set
            {
                if (this._PROVMANEJARECURSOPUBLICOS != value)
                {
                    this.OnPROVMANEJARECURSOPUBLICOSChanging(value);
                    this.SendPropertyChanging("PROVMANEJARECURSOPUBLICOS");
                    this._PROVMANEJARECURSOPUBLICOS = value;
                    this.SendPropertyChanged("PROVMANEJARECURSOPUBLICOS");
                    this.OnPROVMANEJARECURSOPUBLICOSChanged();
                }
            }
        }

    
        /// <summary>
        /// Por su actividad u oficio, goza usted de reconocimiento público general, S: SI, N:NO
        /// </summary>
        [Column(Name = @"PROV_RECONOCIMIENTOPUBLICO", Storage = "_PROVRECONOCIMIENTOPUBLICO", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVRECONOCIMIENTOPUBLICO
        {
            get
            {
                return this._PROVRECONOCIMIENTOPUBLICO;
            }
            set
            {
                if (this._PROVRECONOCIMIENTOPUBLICO != value)
                {
                    this.OnPROVRECONOCIMIENTOPUBLICOChanging(value);
                    this.SendPropertyChanging("PROVRECONOCIMIENTOPUBLICO");
                    this._PROVRECONOCIMIENTOPUBLICO = value;
                    this.SendPropertyChanged("PROVRECONOCIMIENTOPUBLICO");
                    this.OnPROVRECONOCIMIENTOPUBLICOChanged();
                }
            }
        }

    
        /// <summary>
        /// Por su cargo o actividad ejerce algun grado de poder público, S: SI, N: NO
        /// 
        /// </summary>
        [Column(Name = @"PROV_PODERPUBLICO", Storage = "_PROVPODERPUBLICO", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVPODERPUBLICO
        {
            get
            {
                return this._PROVPODERPUBLICO;
            }
            set
            {
                if (this._PROVPODERPUBLICO != value)
                {
                    this.OnPROVPODERPUBLICOChanging(value);
                    this.SendPropertyChanging("PROVPODERPUBLICO");
                    this._PROVPODERPUBLICO = value;
                    this.SendPropertyChanged("PROVPODERPUBLICO");
                    this.OnPROVPODERPUBLICOChanged();
                }
            }
        }

    
        /// <summary>
        /// Si por su cargo o actividad maneja recursos publicos o si por su actividad u oficio, goza usted de reconocimiento público general o si por su cargo o actividad ejerce algun grado de poder público, este campo es para explicar la respuesta:
        /// </summary>
        [Column(Name = @"PROV_OBSERVACION", Storage = "_PROVOBSERVACION", DbType = "VARCHAR2(200 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVOBSERVACION
        {
            get
            {
                return this._PROVOBSERVACION;
            }
            set
            {
                if (this._PROVOBSERVACION != value)
                {
                    this.OnPROVOBSERVACIONChanging(value);
                    this.SendPropertyChanging("PROVOBSERVACION");
                    this._PROVOBSERVACION = value;
                    this.SendPropertyChanged("PROVOBSERVACION");
                    this.OnPROVOBSERVACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Tipo de empresa, origen parametros
        /// </summary>
        [Column(Name = @"CLAS_TIPOEMPRESA13", Storage = "_CLASTIPOEMPRESA13", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? CLASTIPOEMPRESA13
        {
            get
            {
                return this._CLASTIPOEMPRESA13;
            }
            set
            {
                if (this._CLASTIPOEMPRESA13 != value)
                {
                    this.OnCLASTIPOEMPRESA13Changing(value);
                    this.SendPropertyChanging("CLASTIPOEMPRESA13");
                    this._CLASTIPOEMPRESA13 = value;
                    this.SendPropertyChanged("CLASTIPOEMPRESA13");
                    this.OnCLASTIPOEMPRESA13Changed();
                }
            }
        }

    
        /// <summary>
        /// Sector economico del proveedor, origen parametros
        /// </summary>
        [Column(Name = @"CLAS_SECTORECONOMICO14", Storage = "_CLASSECTORECONOMICO14", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? CLASSECTORECONOMICO14
        {
            get
            {
                return this._CLASSECTORECONOMICO14;
            }
            set
            {
                if (this._CLASSECTORECONOMICO14 != value)
                {
                    this.OnCLASSECTORECONOMICO14Changing(value);
                    this.SendPropertyChanging("CLASSECTORECONOMICO14");
                    this._CLASSECTORECONOMICO14 = value;
                    this.SendPropertyChanged("CLASSECTORECONOMICO14");
                    this.OnCLASSECTORECONOMICO14Changed();
                }
            }
        }

    
        /// <summary>
        /// Nacionalidad del representante legal
        /// </summary>
        [Column(Name = @"PROV_NACIONALIDADREPRESENTANTE", Storage = "_PROVNACIONALIDADREPRESENTANTE", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVNACIONALIDADREPRESENTANTE
        {
            get
            {
                return this._PROVNACIONALIDADREPRESENTANTE;
            }
            set
            {
                if (this._PROVNACIONALIDADREPRESENTANTE != value)
                {
                    this.OnPROVNACIONALIDADREPRESENTANTEChanging(value);
                    this.SendPropertyChanging("PROVNACIONALIDADREPRESENTANTE");
                    this._PROVNACIONALIDADREPRESENTANTE = value;
                    this.SendPropertyChanged("PROVNACIONALIDADREPRESENTANTE");
                    this.OnPROVNACIONALIDADREPRESENTANTEChanged();
                }
            }
        }

    
        /// <summary>
        /// Ingresos Mensuales (Pesos)
        /// </summary>
        [Column(Name = @"PROV_INGRESOSMENSUALES", Storage = "_PROVINGRESOSMENSUALES", DbType = "NUMBER(16,2) NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVINGRESOSMENSUALES
        {
            get
            {
                return this._PROVINGRESOSMENSUALES;
            }
            set
            {
                if (this._PROVINGRESOSMENSUALES != value)
                {
                    this.OnPROVINGRESOSMENSUALESChanging(value);
                    this.SendPropertyChanging("PROVINGRESOSMENSUALES");
                    this._PROVINGRESOSMENSUALES = value;
                    this.SendPropertyChanged("PROVINGRESOSMENSUALES");
                    this.OnPROVINGRESOSMENSUALESChanged();
                }
            }
        }

    
        /// <summary>
        /// Egresos Mensuales (Pesos)
        /// </summary>
        [Column(Name = @"PROV_EGRESOSMENSUALES", Storage = "_PROVEGRESOSMENSUALES", DbType = "NUMBER(16,2) NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVEGRESOSMENSUALES
        {
            get
            {
                return this._PROVEGRESOSMENSUALES;
            }
            set
            {
                if (this._PROVEGRESOSMENSUALES != value)
                {
                    this.OnPROVEGRESOSMENSUALESChanging(value);
                    this.SendPropertyChanging("PROVEGRESOSMENSUALES");
                    this._PROVEGRESOSMENSUALES = value;
                    this.SendPropertyChanged("PROVEGRESOSMENSUALES");
                    this.OnPROVEGRESOSMENSUALESChanged();
                }
            }
        }

    
        /// <summary>
        /// Activos (Pesos)
        /// </summary>
        [Column(Name = @"PROV_ACTIVOS", Storage = "_PROVACTIVOS", DbType = "NUMBER(16,2) NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVACTIVOS
        {
            get
            {
                return this._PROVACTIVOS;
            }
            set
            {
                if (this._PROVACTIVOS != value)
                {
                    this.OnPROVACTIVOSChanging(value);
                    this.SendPropertyChanging("PROVACTIVOS");
                    this._PROVACTIVOS = value;
                    this.SendPropertyChanged("PROVACTIVOS");
                    this.OnPROVACTIVOSChanged();
                }
            }
        }

    
        /// <summary>
        /// Pasivos (Pesos)
        /// </summary>
        [Column(Name = @"PROV_PASIVOS", Storage = "_PROVPASIVOS", DbType = "NUMBER(16,2) NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVPASIVOS
        {
            get
            {
                return this._PROVPASIVOS;
            }
            set
            {
                if (this._PROVPASIVOS != value)
                {
                    this.OnPROVPASIVOSChanging(value);
                    this.SendPropertyChanging("PROVPASIVOS");
                    this._PROVPASIVOS = value;
                    this.SendPropertyChanged("PROVPASIVOS");
                    this.OnPROVPASIVOSChanged();
                }
            }
        }

    
        /// <summary>
        /// Patrimonio (Pesos)
        /// </summary>
        [Column(Name = @"PROV_PATRIMONIO", Storage = "_PROVPATRIMONIO", DbType = "NUMBER(16,2) NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVPATRIMONIO
        {
            get
            {
                return this._PROVPATRIMONIO;
            }
            set
            {
                if (this._PROVPATRIMONIO != value)
                {
                    this.OnPROVPATRIMONIOChanging(value);
                    this.SendPropertyChanging("PROVPATRIMONIO");
                    this._PROVPATRIMONIO = value;
                    this.SendPropertyChanged("PROVPATRIMONIO");
                    this.OnPROVPATRIMONIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Otros Ingresos
        /// </summary>
        [Column(Name = @"PROV_OTROSINGRESOS", Storage = "_PROVOTROSINGRESOS", DbType = "NUMBER(16,2) NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVOTROSINGRESOS
        {
            get
            {
                return this._PROVOTROSINGRESOS;
            }
            set
            {
                if (this._PROVOTROSINGRESOS != value)
                {
                    this.OnPROVOTROSINGRESOSChanging(value);
                    this.SendPropertyChanging("PROVOTROSINGRESOS");
                    this._PROVOTROSINGRESOS = value;
                    this.SendPropertyChanged("PROVOTROSINGRESOS");
                    this.OnPROVOTROSINGRESOSChanged();
                }
            }
        }

    
        /// <summary>
        /// Concepto de Otros Ingresos 
        /// </summary>
        [Column(Name = @"PROV_CONCEPTOOTROSINGRESOS", Storage = "_PROVCONCEPTOOTROSINGRESOS", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVCONCEPTOOTROSINGRESOS
        {
            get
            {
                return this._PROVCONCEPTOOTROSINGRESOS;
            }
            set
            {
                if (this._PROVCONCEPTOOTROSINGRESOS != value)
                {
                    this.OnPROVCONCEPTOOTROSINGRESOSChanging(value);
                    this.SendPropertyChanging("PROVCONCEPTOOTROSINGRESOS");
                    this._PROVCONCEPTOOTROSINGRESOS = value;
                    this.SendPropertyChanged("PROVCONCEPTOOTROSINGRESOS");
                    this.OnPROVCONCEPTOOTROSINGRESOSChanged();
                }
            }
        }

    
        /// <summary>
        /// Indica si ealiza transacciones en moneda extranjera, S: SI, N: NO
        /// </summary>
        [Column(Name = @"PROV_TRANSMONEDAEXT", Storage = "_PROVTRANSMONEDAEXT", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVTRANSMONEDAEXT
        {
            get
            {
                return this._PROVTRANSMONEDAEXT;
            }
            set
            {
                if (this._PROVTRANSMONEDAEXT != value)
                {
                    this.OnPROVTRANSMONEDAEXTChanging(value);
                    this.SendPropertyChanging("PROVTRANSMONEDAEXT");
                    this._PROVTRANSMONEDAEXT = value;
                    this.SendPropertyChanged("PROVTRANSMONEDAEXT");
                    this.OnPROVTRANSMONEDAEXTChanged();
                }
            }
        }

    
        /// <summary>
        /// Tipo de moneda extranjera
        /// </summary>
        [Column(Name = @"CLAS_TIPOMONEDA5", Storage = "_CLASTIPOMONEDA5", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? CLASTIPOMONEDA5
        {
            get
            {
                return this._CLASTIPOMONEDA5;
            }
            set
            {
                if (this._CLASTIPOMONEDA5 != value)
                {
                    this.OnCLASTIPOMONEDA5Changing(value);
                    this.SendPropertyChanging("CLASTIPOMONEDA5");
                    this._CLASTIPOMONEDA5 = value;
                    this.SendPropertyChanged("CLASTIPOMONEDA5");
                    this.OnCLASTIPOMONEDA5Changed();
                }
            }
        }

    
        /// <summary>
        /// Indica si posee productos financieros en el exterior o posee cuentas en moneda extranjera, S: SI, N: NO
        /// </summary>
        [Column(Name = @"PROV_PRODFINANEXT", Storage = "_PROVPRODFINANEXT", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVPRODFINANEXT
        {
            get
            {
                return this._PROVPRODFINANEXT;
            }
            set
            {
                if (this._PROVPRODFINANEXT != value)
                {
                    this.OnPROVPRODFINANEXTChanging(value);
                    this.SendPropertyChanging("PROVPRODFINANEXT");
                    this._PROVPRODFINANEXT = value;
                    this.SendPropertyChanged("PROVPRODFINANEXT");
                    this.OnPROVPRODFINANEXTChanged();
                }
            }
        }

    
        /// <summary>
        /// Si el proveedor es autoretenedor,l este campo tiene la resolucion, si es diferente de null indica que si
        /// 
        /// 
        /// </summary>
        [Column(Name = @"PROV_RESOLAUTORRETENEDOR", Storage = "_PROVRESOLAUTORRETENEDOR", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVRESOLAUTORRETENEDOR
        {
            get
            {
                return this._PROVRESOLAUTORRETENEDOR;
            }
            set
            {
                if (this._PROVRESOLAUTORRETENEDOR != value)
                {
                    this.OnPROVRESOLAUTORRETENEDORChanging(value);
                    this.SendPropertyChanging("PROVRESOLAUTORRETENEDOR");
                    this._PROVRESOLAUTORRETENEDOR = value;
                    this.SendPropertyChanged("PROVRESOLAUTORRETENEDOR");
                    this.OnPROVRESOLAUTORRETENEDORChanged();
                }
            }
        }

    
        /// <summary>
        /// Indica si el proveedor es entidad estatal S si N no
        /// </summary>
        [Column(Name = @"PROV_ENTIDADESTATAL", Storage = "_PROVENTIDADESTATAL", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVENTIDADESTATAL
        {
            get
            {
                return this._PROVENTIDADESTATAL;
            }
            set
            {
                if (this._PROVENTIDADESTATAL != value)
                {
                    this.OnPROVENTIDADESTATALChanging(value);
                    this.SendPropertyChanging("PROVENTIDADESTATAL");
                    this._PROVENTIDADESTATAL = value;
                    this.SendPropertyChanged("PROVENTIDADESTATAL");
                    this.OnPROVENTIDADESTATALChanged();
                }
            }
        }

    
        /// <summary>
        /// Indica si el proveedor es gran contribuyente
        /// </summary>
        [Column(Name = @"PROV_GRANCONTRIBUYENTE", Storage = "_PROVGRANCONTRIBUYENTE", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVGRANCONTRIBUYENTE
        {
            get
            {
                return this._PROVGRANCONTRIBUYENTE;
            }
            set
            {
                if (this._PROVGRANCONTRIBUYENTE != value)
                {
                    this.OnPROVGRANCONTRIBUYENTEChanging(value);
                    this.SendPropertyChanging("PROVGRANCONTRIBUYENTE");
                    this._PROVGRANCONTRIBUYENTE = value;
                    this.SendPropertyChanged("PROVGRANCONTRIBUYENTE");
                    this.OnPROVGRANCONTRIBUYENTEChanged();
                }
            }
        }

    
        /// <summary>
        /// Indica si el proveedor es responsable del IVA
        /// </summary>
        [Column(Name = @"PROV_RESPONSABLEIVA", Storage = "_PROVRESPONSABLEIVA", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVRESPONSABLEIVA
        {
            get
            {
                return this._PROVRESPONSABLEIVA;
            }
            set
            {
                if (this._PROVRESPONSABLEIVA != value)
                {
                    this.OnPROVRESPONSABLEIVAChanging(value);
                    this.SendPropertyChanging("PROVRESPONSABLEIVA");
                    this._PROVRESPONSABLEIVA = value;
                    this.SendPropertyChanged("PROVRESPONSABLEIVA");
                    this.OnPROVRESPONSABLEIVAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVAGENTERETENEDORIVA in the schema.
        /// </summary>
        [Column(Name = @"PROV_AGENTERETENEDORIVA", Storage = "_PROVAGENTERETENEDORIVA", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVAGENTERETENEDORIVA
        {
            get
            {
                return this._PROVAGENTERETENEDORIVA;
            }
            set
            {
                if (this._PROVAGENTERETENEDORIVA != value)
                {
                    this.OnPROVAGENTERETENEDORIVAChanging(value);
                    this.SendPropertyChanging("PROVAGENTERETENEDORIVA");
                    this._PROVAGENTERETENEDORIVA = value;
                    this.SendPropertyChanged("PROVAGENTERETENEDORIVA");
                    this.OnPROVAGENTERETENEDORIVAChanged();
                }
            }
        }

    
        /// <summary>
        /// Responsable de industria y comercio
        /// </summary>
        [Column(Name = @"PROV_INDUSTRIAYCOMERCIO", Storage = "_PROVINDUSTRIAYCOMERCIO", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVINDUSTRIAYCOMERCIO
        {
            get
            {
                return this._PROVINDUSTRIAYCOMERCIO;
            }
            set
            {
                if (this._PROVINDUSTRIAYCOMERCIO != value)
                {
                    this.OnPROVINDUSTRIAYCOMERCIOChanging(value);
                    this.SendPropertyChanging("PROVINDUSTRIAYCOMERCIO");
                    this._PROVINDUSTRIAYCOMERCIO = value;
                    this.SendPropertyChanged("PROVINDUSTRIAYCOMERCIO");
                    this.OnPROVINDUSTRIAYCOMERCIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo entidad bancaria de la cuenta del proveedor
        /// </summary>
        [Column(Name = @"CLAS_ENTIDADBANCARIA6", Storage = "_CLASENTIDADBANCARIA6", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? CLASENTIDADBANCARIA6
        {
            get
            {
                return this._CLASENTIDADBANCARIA6;
            }
            set
            {
                if (this._CLASENTIDADBANCARIA6 != value)
                {
                    this.OnCLASENTIDADBANCARIA6Changing(value);
                    this.SendPropertyChanging("CLASENTIDADBANCARIA6");
                    this._CLASENTIDADBANCARIA6 = value;
                    this.SendPropertyChanged("CLASENTIDADBANCARIA6");
                    this.OnCLASENTIDADBANCARIA6Changed();
                }
            }
        }

    
        /// <summary>
        /// Nombre de la sucursal del banco
        /// </summary>
        [Column(Name = @"PROV_SUCURSALBANCO", Storage = "_PROVSUCURSALBANCO", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVSUCURSALBANCO
        {
            get
            {
                return this._PROVSUCURSALBANCO;
            }
            set
            {
                if (this._PROVSUCURSALBANCO != value)
                {
                    this.OnPROVSUCURSALBANCOChanging(value);
                    this.SendPropertyChanging("PROVSUCURSALBANCO");
                    this._PROVSUCURSALBANCO = value;
                    this.SendPropertyChanged("PROVSUCURSALBANCO");
                    this.OnPROVSUCURSALBANCOChanged();
                }
            }
        }

    
        /// <summary>
        /// Numero o referencia de cuenta bancaria del proveedor
        /// </summary>
        [Column(Name = @"PROV_NUMEROCUENTA", Storage = "_PROVNUMEROCUENTA", DbType = "VARCHAR2(15 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVNUMEROCUENTA
        {
            get
            {
                return this._PROVNUMEROCUENTA;
            }
            set
            {
                if (this._PROVNUMEROCUENTA != value)
                {
                    this.OnPROVNUMEROCUENTAChanging(value);
                    this.SendPropertyChanging("PROVNUMEROCUENTA");
                    this._PROVNUMEROCUENTA = value;
                    this.SendPropertyChanged("PROVNUMEROCUENTA");
                    this.OnPROVNUMEROCUENTAChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo tipo cuenta bancaria, de parametros
        /// </summary>
        [Column(Name = @"CLAS_TIPOCUENTA7", Storage = "_CLASTIPOCUENTA7", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? CLASTIPOCUENTA7
        {
            get
            {
                return this._CLASTIPOCUENTA7;
            }
            set
            {
                if (this._CLASTIPOCUENTA7 != value)
                {
                    this.OnCLASTIPOCUENTA7Changing(value);
                    this.SendPropertyChanging("CLASTIPOCUENTA7");
                    this._CLASTIPOCUENTA7 = value;
                    this.SendPropertyChanged("CLASTIPOCUENTA7");
                    this.OnCLASTIPOCUENTA7Changed();
                }
            }
        }

    
        /// <summary>
        /// Nombre del titular de la cuenta
        /// </summary>
        [Column(Name = @"PROV_TITULARCUENTA", Storage = "_PROVTITULARCUENTA", DbType = "VARCHAR2(50 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVTITULARCUENTA
        {
            get
            {
                return this._PROVTITULARCUENTA;
            }
            set
            {
                if (this._PROVTITULARCUENTA != value)
                {
                    this.OnPROVTITULARCUENTAChanging(value);
                    this.SendPropertyChanging("PROVTITULARCUENTA");
                    this._PROVTITULARCUENTA = value;
                    this.SendPropertyChanged("PROVTITULARCUENTA");
                    this.OnPROVTITULARCUENTAChanged();
                }
            }
        }

    
        /// <summary>
        /// Identificacion del titular de la cuenta
        /// </summary>
        [Column(Name = @"PROV_IDENTITULARCUENTA", Storage = "_PROVIDENTITULARCUENTA", DbType = "VARCHAR2(12 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVIDENTITULARCUENTA
        {
            get
            {
                return this._PROVIDENTITULARCUENTA;
            }
            set
            {
                if (this._PROVIDENTITULARCUENTA != value)
                {
                    this.OnPROVIDENTITULARCUENTAChanging(value);
                    this.SendPropertyChanging("PROVIDENTITULARCUENTA");
                    this._PROVIDENTITULARCUENTA = value;
                    this.SendPropertyChanged("PROVIDENTITULARCUENTA");
                    this.OnPROVIDENTITULARCUENTAChanged();
                }
            }
        }

    
        /// <summary>
        /// Ultima fecha de actualizacion
        /// </summary>
        [Column(Name = @"PROV_ULTMAFECACTUALIZACION", Storage = "_PROVULTMAFECACTUALIZACION", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? PROVULTMAFECACTUALIZACION
        {
            get
            {
                return this._PROVULTMAFECACTUALIZACION;
            }
            set
            {
                if (this._PROVULTMAFECACTUALIZACION != value)
                {
                    this.OnPROVULTMAFECACTUALIZACIONChanging(value);
                    this.SendPropertyChanging("PROVULTMAFECACTUALIZACION");
                    this._PROVULTMAFECACTUALIZACION = value;
                    this.SendPropertyChanged("PROVULTMAFECACTUALIZACION");
                    this.OnPROVULTMAFECACTUALIZACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Indica si es persona natural (PN) o es persona juridica (PJ)
        /// </summary>
        [Column(Name = @"CLAS_TIPOPERSONAL1", Storage = "_CLASTIPOPERSONAL1", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? CLASTIPOPERSONAL1
        {
            get
            {
                return this._CLASTIPOPERSONAL1;
            }
            set
            {
                if (this._CLASTIPOPERSONAL1 != value)
                {
                    this.OnCLASTIPOPERSONAL1Changing(value);
                    this.SendPropertyChanging("CLASTIPOPERSONAL1");
                    this._CLASTIPOPERSONAL1 = value;
                    this.SendPropertyChanged("CLASTIPOPERSONAL1");
                    this.OnCLASTIPOPERSONAL1Changed();
                }
            }
        }

    
        /// <summary>
        /// Pais del proveedor
        /// </summary>
        [Column(Name = @"PROV_PAIS", Storage = "_PROVPAIS", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVPAIS
        {
            get
            {
                return this._PROVPAIS;
            }
            set
            {
                if (this._PROVPAIS != value)
                {
                    this.OnPROVPAISChanging(value);
                    this.SendPropertyChanging("PROVPAIS");
                    this._PROVPAIS = value;
                    this.SendPropertyChanged("PROVPAIS");
                    this.OnPROVPAISChanged();
                }
            }
        }

    
        /// <summary>
        /// Departamento del proveedor
        /// </summary>
        [Column(Name = @"PROV_DEPARTAMENTO", Storage = "_PROVDEPARTAMENTO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVDEPARTAMENTO
        {
            get
            {
                return this._PROVDEPARTAMENTO;
            }
            set
            {
                if (this._PROVDEPARTAMENTO != value)
                {
                    this.OnPROVDEPARTAMENTOChanging(value);
                    this.SendPropertyChanging("PROVDEPARTAMENTO");
                    this._PROVDEPARTAMENTO = value;
                    this.SendPropertyChanged("PROVDEPARTAMENTO");
                    this.OnPROVDEPARTAMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// Ciudad del proveedor
        /// </summary>
        [Column(Name = @"PROV_CIUDAD", Storage = "_PROVCIUDAD", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVCIUDAD
        {
            get
            {
                return this._PROVCIUDAD;
            }
            set
            {
                if (this._PROVCIUDAD != value)
                {
                    this.OnPROVCIUDADChanging(value);
                    this.SendPropertyChanging("PROVCIUDAD");
                    this._PROVCIUDAD = value;
                    this.SendPropertyChanged("PROVCIUDAD");
                    this.OnPROVCIUDADChanged();
                }
            }
        }

    
        /// <summary>
        /// Apartado Aereo
        /// </summary>
        [Column(Name = @"PROV_APARTADOAEREO", Storage = "_PROVAPARTADOAEREO", DbType = "VARCHAR2(6 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVAPARTADOAEREO
        {
            get
            {
                return this._PROVAPARTADOAEREO;
            }
            set
            {
                if (this._PROVAPARTADOAEREO != value)
                {
                    this.OnPROVAPARTADOAEREOChanging(value);
                    this.SendPropertyChanging("PROVAPARTADOAEREO");
                    this._PROVAPARTADOAEREO = value;
                    this.SendPropertyChanged("PROVAPARTADOAEREO");
                    this.OnPROVAPARTADOAEREOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVDATOSPERSONALES in the schema.
        /// </summary>
        [Column(Name = @"PROV_DATOSPERSONALES", Storage = "_PROVDATOSPERSONALES", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVDATOSPERSONALES
        {
            get
            {
                return this._PROVDATOSPERSONALES;
            }
            set
            {
                if (this._PROVDATOSPERSONALES != value)
                {
                    this.OnPROVDATOSPERSONALESChanging(value);
                    this.SendPropertyChanging("PROVDATOSPERSONALES");
                    this._PROVDATOSPERSONALES = value;
                    this.SendPropertyChanged("PROVDATOSPERSONALES");
                    this.OnPROVDATOSPERSONALESChanged();
                }
            }
        }

    
        /// <summary>
        /// Telefono de la empresa
        /// </summary>
        [Column(Name = @"PROV_TELEFONOEMPRESA", Storage = "_PROVTELEFONOEMPRESA", DbType = "VARCHAR2(12 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVTELEFONOEMPRESA
        {
            get
            {
                return this._PROVTELEFONOEMPRESA;
            }
            set
            {
                if (this._PROVTELEFONOEMPRESA != value)
                {
                    this.OnPROVTELEFONOEMPRESAChanging(value);
                    this.SendPropertyChanging("PROVTELEFONOEMPRESA");
                    this._PROVTELEFONOEMPRESA = value;
                    this.SendPropertyChanged("PROVTELEFONOEMPRESA");
                    this.OnPROVTELEFONOEMPRESAChanged();
                }
            }
        }

    
        /// <summary>
        /// Ciudad de la empresa
        /// </summary>
        [Column(Name = @"PROV_CIUDADEMPRESA", Storage = "_PROVCIUDADEMPRESA", DbType = "NUMBER(5) NULL", UpdateCheck = UpdateCheck.Never)]
        public int? PROVCIUDADEMPRESA
        {
            get
            {
                return this._PROVCIUDADEMPRESA;
            }
            set
            {
                if (this._PROVCIUDADEMPRESA != value)
                {
                    this.OnPROVCIUDADEMPRESAChanging(value);
                    this.SendPropertyChanging("PROVCIUDADEMPRESA");
                    this._PROVCIUDADEMPRESA = value;
                    this.SendPropertyChanged("PROVCIUDADEMPRESA");
                    this.OnPROVCIUDADEMPRESAChanged();
                }
            }
        }

    
        /// <summary>
        /// Telefono de la sucursal
        /// </summary>
        [Column(Name = @"PROV_TELEFONOSUCURSAL", Storage = "_PROVTELEFONOSUCURSAL", DbType = "VARCHAR2(12 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVTELEFONOSUCURSAL
        {
            get
            {
                return this._PROVTELEFONOSUCURSAL;
            }
            set
            {
                if (this._PROVTELEFONOSUCURSAL != value)
                {
                    this.OnPROVTELEFONOSUCURSALChanging(value);
                    this.SendPropertyChanging("PROVTELEFONOSUCURSAL");
                    this._PROVTELEFONOSUCURSAL = value;
                    this.SendPropertyChanged("PROVTELEFONOSUCURSAL");
                    this.OnPROVTELEFONOSUCURSALChanged();
                }
            }
        }

    
        /// <summary>
        /// Ciudad de la sucursal
        /// </summary>
        [Column(Name = @"PROV_CIUDADSUCURSAL", Storage = "_PROVCIUDADSUCURSAL", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVCIUDADSUCURSAL
        {
            get
            {
                return this._PROVCIUDADSUCURSAL;
            }
            set
            {
                if (this._PROVCIUDADSUCURSAL != value)
                {
                    this.OnPROVCIUDADSUCURSALChanging(value);
                    this.SendPropertyChanging("PROVCIUDADSUCURSAL");
                    this._PROVCIUDADSUCURSAL = value;
                    this.SendPropertyChanged("PROVCIUDADSUCURSAL");
                    this.OnPROVCIUDADSUCURSALChanged();
                }
            }
        }

    
        /// <summary>
        /// Direccion de la sucursal
        /// </summary>
        [Column(Name = @"PROV_DIRECCIONSUCURSAL", Storage = "_PROVDIRECCIONSUCURSAL", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVDIRECCIONSUCURSAL
        {
            get
            {
                return this._PROVDIRECCIONSUCURSAL;
            }
            set
            {
                if (this._PROVDIRECCIONSUCURSAL != value)
                {
                    this.OnPROVDIRECCIONSUCURSALChanging(value);
                    this.SendPropertyChanging("PROVDIRECCIONSUCURSAL");
                    this._PROVDIRECCIONSUCURSAL = value;
                    this.SendPropertyChanged("PROVDIRECCIONSUCURSAL");
                    this.OnPROVDIRECCIONSUCURSALChanged();
                }
            }
        }

    
        /// <summary>
        /// Indica si el proveedor es una entidad sin animo de lucro
        /// </summary>
        [Column(Name = @"PROV_ENTIDADSINANILUCRO", Storage = "_PROVENTIDADSINANILUCRO", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVENTIDADSINANILUCRO
        {
            get
            {
                return this._PROVENTIDADSINANILUCRO;
            }
            set
            {
                if (this._PROVENTIDADSINANILUCRO != value)
                {
                    this.OnPROVENTIDADSINANILUCROChanging(value);
                    this.SendPropertyChanging("PROVENTIDADSINANILUCRO");
                    this._PROVENTIDADSINANILUCRO = value;
                    this.SendPropertyChanged("PROVENTIDADSINANILUCRO");
                    this.OnPROVENTIDADSINANILUCROChanged();
                }
            }
        }

    
        /// <summary>
        /// Si el proveedor es una entidad sin animo de lucro este campo debe almacenar la resolucion
        /// </summary>
        [Column(Name = @"PROV_RESOLENTSINANILUCRO", Storage = "_PROVRESOLENTSINANILUCRO", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVRESOLENTSINANILUCRO
        {
            get
            {
                return this._PROVRESOLENTSINANILUCRO;
            }
            set
            {
                if (this._PROVRESOLENTSINANILUCRO != value)
                {
                    this.OnPROVRESOLENTSINANILUCROChanging(value);
                    this.SendPropertyChanging("PROVRESOLENTSINANILUCRO");
                    this._PROVRESOLENTSINANILUCRO = value;
                    this.SendPropertyChanged("PROVRESOLENTSINANILUCRO");
                    this.OnPROVRESOLENTSINANILUCROChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha nacimiento del representante legal
        /// </summary>
        [Column(Name = @"PROV_FECHANACIMIENTOREP", Storage = "_PROVFECHANACIMIENTOREP", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? PROVFECHANACIMIENTOREP
        {
            get
            {
                return this._PROVFECHANACIMIENTOREP;
            }
            set
            {
                if (this._PROVFECHANACIMIENTOREP != value)
                {
                    this.OnPROVFECHANACIMIENTOREPChanging(value);
                    this.SendPropertyChanging("PROVFECHANACIMIENTOREP");
                    this._PROVFECHANACIMIENTOREP = value;
                    this.SendPropertyChanged("PROVFECHANACIMIENTOREP");
                    this.OnPROVFECHANACIMIENTOREPChanged();
                }
            }
        }

    
        /// <summary>
        /// Lugar Nacimiento representante legal
        /// </summary>
        [Column(Name = @"PROV_LUGARNACIMIENTOREP", Storage = "_PROVLUGARNACIMIENTOREP", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVLUGARNACIMIENTOREP
        {
            get
            {
                return this._PROVLUGARNACIMIENTOREP;
            }
            set
            {
                if (this._PROVLUGARNACIMIENTOREP != value)
                {
                    this.OnPROVLUGARNACIMIENTOREPChanging(value);
                    this.SendPropertyChanging("PROVLUGARNACIMIENTOREP");
                    this._PROVLUGARNACIMIENTOREP = value;
                    this.SendPropertyChanged("PROVLUGARNACIMIENTOREP");
                    this.OnPROVLUGARNACIMIENTOREPChanged();
                }
            }
        }

    
        /// <summary>
        /// Resolucion de gran contribuyente, si lo es
        /// </summary>
        [Column(Name = @"PROV_RESOLGRANCONTRIBUYENTE", Storage = "_PROVRESOLGRANCONTRIBUYENTE", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVRESOLGRANCONTRIBUYENTE
        {
            get
            {
                return this._PROVRESOLGRANCONTRIBUYENTE;
            }
            set
            {
                if (this._PROVRESOLGRANCONTRIBUYENTE != value)
                {
                    this.OnPROVRESOLGRANCONTRIBUYENTEChanging(value);
                    this.SendPropertyChanging("PROVRESOLGRANCONTRIBUYENTE");
                    this._PROVRESOLGRANCONTRIBUYENTE = value;
                    this.SendPropertyChanged("PROVRESOLGRANCONTRIBUYENTE");
                    this.OnPROVRESOLGRANCONTRIBUYENTEChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha ultima actualizacion
        /// </summary>
        [Column(Name = @"PROV_FECHAULTACT", Storage = "_PROVFECHAULTACT", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? PROVFECHAULTACT
        {
            get
            {
                return this._PROVFECHAULTACT;
            }
            set
            {
                if (this._PROVFECHAULTACT != value)
                {
                    this.OnPROVFECHAULTACTChanging(value);
                    this.SendPropertyChanging("PROVFECHAULTACT");
                    this._PROVFECHAULTACT = value;
                    this.SendPropertyChanged("PROVFECHAULTACT");
                    this.OnPROVFECHAULTACTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVAUTORRETENEDOR in the schema.
        /// </summary>
        [Column(Name = @"PROV_AUTORRETENEDOR", Storage = "_PROVAUTORRETENEDOR", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVAUTORRETENEDOR
        {
            get
            {
                return this._PROVAUTORRETENEDOR;
            }
            set
            {
                if (this._PROVAUTORRETENEDOR != value)
                {
                    this.OnPROVAUTORRETENEDORChanging(value);
                    this.SendPropertyChanging("PROVAUTORRETENEDOR");
                    this._PROVAUTORRETENEDOR = value;
                    this.SendPropertyChanged("PROVAUTORRETENEDOR");
                    this.OnPROVAUTORRETENEDORChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVCONTRIBUYENTERENTA in the schema.
        /// </summary>
        [Column(Name = @"PROV_CONTRIBUYENTERENTA", Storage = "_PROVCONTRIBUYENTERENTA", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVCONTRIBUYENTERENTA
        {
            get
            {
                return this._PROVCONTRIBUYENTERENTA;
            }
            set
            {
                if (this._PROVCONTRIBUYENTERENTA != value)
                {
                    this.OnPROVCONTRIBUYENTERENTAChanging(value);
                    this.SendPropertyChanging("PROVCONTRIBUYENTERENTA");
                    this._PROVCONTRIBUYENTERENTA = value;
                    this.SendPropertyChanged("PROVCONTRIBUYENTERENTA");
                    this.OnPROVCONTRIBUYENTERENTAChanged();
                }
            }
        }

    
        /// <summary>
        /// Actividad Economica Responsable Pereira
        /// </summary>
        [Column(Name = @"CLAS_ACTPEREIRA14", Storage = "_CLASACTPEREIRA14", DbType = "VARCHAR2(4 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLASACTPEREIRA14
        {
            get
            {
                return this._CLASACTPEREIRA14;
            }
            set
            {
                if (this._CLASACTPEREIRA14 != value)
                {
                    this.OnCLASACTPEREIRA14Changing(value);
                    this.SendPropertyChanging("CLASACTPEREIRA14");
                    this._CLASACTPEREIRA14 = value;
                    this.SendPropertyChanged("CLASACTPEREIRA14");
                    this.OnCLASACTPEREIRA14Changed();
                }
            }
        }

    
        /// <summary>
        /// Resolucion de agente retenedor de IVA
        /// </summary>
        [Column(Name = @"PROV_RESOLAGENTERETENEDORIVA", Storage = "_PROVRESOLAGENTERETENEDORIVA", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVRESOLAGENTERETENEDORIVA
        {
            get
            {
                return this._PROVRESOLAGENTERETENEDORIVA;
            }
            set
            {
                if (this._PROVRESOLAGENTERETENEDORIVA != value)
                {
                    this.OnPROVRESOLAGENTERETENEDORIVAChanging(value);
                    this.SendPropertyChanging("PROVRESOLAGENTERETENEDORIVA");
                    this._PROVRESOLAGENTERETENEDORIVA = value;
                    this.SendPropertyChanged("PROVRESOLAGENTERETENEDORIVA");
                    this.OnPROVRESOLAGENTERETENEDORIVAChanged();
                }
            }
        }

    
        /// <summary>
        /// Lugar de expedicion documento persona natural
        /// </summary>
        [Column(Name = @"PROV_LUGAREXPEDICION", Storage = "_PROVLUGAREXPEDICION", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVLUGAREXPEDICION
        {
            get
            {
                return this._PROVLUGAREXPEDICION;
            }
            set
            {
                if (this._PROVLUGAREXPEDICION != value)
                {
                    this.OnPROVLUGAREXPEDICIONChanging(value);
                    this.SendPropertyChanging("PROVLUGAREXPEDICION");
                    this._PROVLUGAREXPEDICION = value;
                    this.SendPropertyChanged("PROVLUGAREXPEDICION");
                    this.OnPROVLUGAREXPEDICIONChanged();
                }
            }
        }

    
        /// <summary>
        /// INFORMACIÓN CLASIFICACIÓN TAMAÑO EMPRESARIAL - DECRETO 957 DE 2019, M: MICRO, P: PEQUEÑA, E:MEDIANA, G: GRANDE							
        /// </summary>
        [Column(Name = @"PROV_CLASTAMANO", Storage = "_PROVCLASTAMANO", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVCLASTAMANO
        {
            get
            {
                return this._PROVCLASTAMANO;
            }
            set
            {
                if (this._PROVCLASTAMANO != value)
                {
                    this.OnPROVCLASTAMANOChanging(value);
                    this.SendPropertyChanging("PROVCLASTAMANO");
                    this._PROVCLASTAMANO = value;
                    this.SendPropertyChanged("PROVCLASTAMANO");
                    this.OnPROVCLASTAMANOChanged();
                }
            }
        }

    
        /// <summary>
        /// INFORMACIÓN CLASIFICACIÓN TAMAÑO EMPRESARIAL - DECRETO 957 DE 2019, M: Manufacturero, S: Servicios, C: Comercio
        /// </summary>
        [Column(Name = @"PROV_CLASSECTOR", Storage = "_PROVCLASSECTOR", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVCLASSECTOR
        {
            get
            {
                return this._PROVCLASSECTOR;
            }
            set
            {
                if (this._PROVCLASSECTOR != value)
                {
                    this.OnPROVCLASSECTORChanging(value);
                    this.SendPropertyChanging("PROVCLASSECTOR");
                    this._PROVCLASSECTOR = value;
                    this.SendPropertyChanged("PROVCLASSECTOR");
                    this.OnPROVCLASSECTORChanged();
                }
            }
        }

    
        /// <summary>
        /// INFORMACIÓN CLASIFICACIÓN TAMAÑO EMPRESARIAL - DECRETO 957 DE 2019, El Proveedor se dedica a realizar operaciones mercantiles en el marco del Sistema General de Seguridad Social en Salud. S: SI, N: NO
        /// </summary>
        [Column(Name = @"PROV_OPERMERCANTILES", Storage = "_PROVOPERMERCANTILES", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVOPERMERCANTILES
        {
            get
            {
                return this._PROVOPERMERCANTILES;
            }
            set
            {
                if (this._PROVOPERMERCANTILES != value)
                {
                    this.OnPROVOPERMERCANTILESChanging(value);
                    this.SendPropertyChanging("PROVOPERMERCANTILES");
                    this._PROVOPERMERCANTILES = value;
                    this.SendPropertyChanged("PROVOPERMERCANTILES");
                    this.OnPROVOPERMERCANTILESChanged();
                }
            }
        }

    
        /// <summary>
        /// Campo usuario para auditoria
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEPROVEEDORACTALTERNAs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEPROVEEDOR_PONEPROVEEDORACTALTERNA", Storage="_PONEPROVEEDORACTALTERNAs", ThisKey="PROVPROVEEDOR", OtherKey="PROVPROVEEDOR", DeleteRule="NO ACTION")]
        public EntitySet<PONEPROVEEDORACTALTERNA> PONEPROVEEDORACTALTERNAs
        {
            get
            {
                return this._PONEPROVEEDORACTALTERNAs;
            }
            set
            {
                this._PONEPROVEEDORACTALTERNAs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for POGEACTIVIDADECONOMICA in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGEACTIVIDADECONOMICA_PONEPROVEEDOR", Storage="_POGEACTIVIDADECONOMICA", ThisKey="ACECCODIGOACTIVIDAD", OtherKey="ACECCODIGOACTIVIDAD", IsForeignKey=true)]
        public POGEACTIVIDADECONOMICA POGEACTIVIDADECONOMICA
        {
            get
            {
                return this._POGEACTIVIDADECONOMICA.Entity;
            }
            set
            {
                POGEACTIVIDADECONOMICA previousValue = this._POGEACTIVIDADECONOMICA.Entity;
                if ((previousValue != value) || (this._POGEACTIVIDADECONOMICA.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("POGEACTIVIDADECONOMICA");
                    if (previousValue != null)
                    {
                        this._POGEACTIVIDADECONOMICA.Entity = null;
                        previousValue.PONEPROVEEDORs.Remove(this);
                    }
                    this._POGEACTIVIDADECONOMICA.Entity = value;
                    if (value != null)
                    {
                        this._ACECCODIGOACTIVIDAD = value.ACECCODIGOACTIVIDAD;
                        value.PONEPROVEEDORs.Add(this);
                    }
                    else
                    {
                        this._ACECCODIGOACTIVIDAD = default(string);
                    }
                    this.SendPropertyChanged("POGEACTIVIDADECONOMICA");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEHISTDOCPROVs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEPROVEEDOR_PONEHISTDOCPROV", Storage="_PONEHISTDOCPROVs", ThisKey="PROVPROVEEDOR", OtherKey="PROVPROVEEDOR", DeleteRule="NO ACTION")]
        public EntitySet<PONEHISTDOCPROV> PONEHISTDOCPROVs
        {
            get
            {
                return this._PONEHISTDOCPROVs;
            }
            set
            {
                this._PONEHISTDOCPROVs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEFORMATOXPROVEEDORs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEPROVEEDOR_PONEFORMATOXPROVEEDOR", Storage="_PONEFORMATOXPROVEEDORs", ThisKey="PROVPROVEEDOR", OtherKey="PROVPROVEEDOR", DeleteRule="NO ACTION")]
        public EntitySet<PONEFORMATOXPROVEEDOR> PONEFORMATOXPROVEEDORs
        {
            get
            {
                return this._PONEFORMATOXPROVEEDORs;
            }
            set
            {
                this._PONEFORMATOXPROVEEDORs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEESPECIALIDADPROVEEDORs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEPROVEEDOR_PONEESPECIALIDADPROVEEDOR", Storage="_PONEESPECIALIDADPROVEEDORs", ThisKey="PROVPROVEEDOR", OtherKey="PROVPROVEEDOR", DeleteRule="NO ACTION")]
        public EntitySet<PONEESPECIALIDADPROVEEDOR> PONEESPECIALIDADPROVEEDORs
        {
            get
            {
                return this._PONEESPECIALIDADPROVEEDORs;
            }
            set
            {
                this._PONEESPECIALIDADPROVEEDORs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDETALLEACCIONISTAs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEPROVEEDOR_PONEDETALLEACCIONISTA", Storage="_PONEDETALLEACCIONISTAs", ThisKey="PROVPROVEEDOR", OtherKey="PROVPROVEEDOR", DeleteRule="NO ACTION")]
        public EntitySet<PONEDETALLEACCIONISTA> PONEDETALLEACCIONISTAs
        {
            get
            {
                return this._PONEDETALLEACCIONISTAs;
            }
            set
            {
                this._PONEDETALLEACCIONISTAs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONECOTIZACIONs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEPROVEEDOR_PONECOTIZACION", Storage="_PONECOTIZACIONs", ThisKey="PROVPROVEEDOR", OtherKey="PROVPROVEEDOR", DeleteRule="NO ACTION")]
        public EntitySet<PONECOTIZACION> PONECOTIZACIONs
        {
            get
            {
                return this._PONECOTIZACIONs;
            }
            set
            {
                this._PONECOTIZACIONs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEACTUALIZACIONPROVEEDORs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEPROVEEDOR_PONEACTUALIZACIONPROVEEDOR", Storage="_PONEACTUALIZACIONPROVEEDORs", ThisKey="PROVPROVEEDOR", OtherKey="PROVPROVEEDOR", DeleteRule="NO ACTION")]
        public EntitySet<PONEACTUALIZACIONPROVEEDOR> PONEACTUALIZACIONPROVEEDORs
        {
            get
            {
                return this._PONEACTUALIZACIONPROVEEDORs;
            }
            set
            {
                this._PONEACTUALIZACIONPROVEEDORs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for POGEUSUARIOs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEPROVEEDOR_POGEUSUARIO", Storage="_POGEUSUARIOs", ThisKey="PROVPROVEEDOR", OtherKey="PROVPROVEEDOR", DeleteRule="NO ACTION")]
        public EntitySet<POGEUSUARIO> POGEUSUARIOs
        {
            get
            {
                return this._POGEUSUARIOs;
            }
            set
            {
                this._POGEUSUARIOs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDOCUMENTOs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEDOCUMENTO_PONEPROVEEDOR", Storage="_PONEDOCUMENTOs", ThisKey="PROVPROVEEDOR", OtherKey="DOCUDOCUMENTO", LinkTableName=@"PORTAL_NEGOCIOS.PONE_DOCUMENTOPROVEEDOR", LinkThisKey=@"PROV_PROVEEDOR", LinkOtherKey=@"DOCU_DOCUMENTO")]
        public EntitySet<PONEDOCUMENTO> PONEDOCUMENTOs
        {
            get
            {
                return this._PONEDOCUMENTOs;
            }
            set
            {
                this._PONEDOCUMENTOs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_PONEPROVEEDORACTALTERNAs(PONEPROVEEDORACTALTERNA entity)
        {
            this.SendPropertyChanging("PONEPROVEEDORACTALTERNAs");
            entity.PONEPROVEEDOR = this;
        }
    
        private void detach_PONEPROVEEDORACTALTERNAs(PONEPROVEEDORACTALTERNA entity)
        {
            this.SendPropertyChanging("PONEPROVEEDORACTALTERNAs");
            entity.PONEPROVEEDOR = null;
        }

        private void attach_PONEHISTDOCPROVs(PONEHISTDOCPROV entity)
        {
            this.SendPropertyChanging("PONEHISTDOCPROVs");
            entity.PONEPROVEEDOR = this;
        }
    
        private void detach_PONEHISTDOCPROVs(PONEHISTDOCPROV entity)
        {
            this.SendPropertyChanging("PONEHISTDOCPROVs");
            entity.PONEPROVEEDOR = null;
        }

        private void attach_PONEFORMATOXPROVEEDORs(PONEFORMATOXPROVEEDOR entity)
        {
            this.SendPropertyChanging("PONEFORMATOXPROVEEDORs");
            entity.PONEPROVEEDOR = this;
        }
    
        private void detach_PONEFORMATOXPROVEEDORs(PONEFORMATOXPROVEEDOR entity)
        {
            this.SendPropertyChanging("PONEFORMATOXPROVEEDORs");
            entity.PONEPROVEEDOR = null;
        }

        private void attach_PONEESPECIALIDADPROVEEDORs(PONEESPECIALIDADPROVEEDOR entity)
        {
            this.SendPropertyChanging("PONEESPECIALIDADPROVEEDORs");
            entity.PONEPROVEEDOR = this;
        }
    
        private void detach_PONEESPECIALIDADPROVEEDORs(PONEESPECIALIDADPROVEEDOR entity)
        {
            this.SendPropertyChanging("PONEESPECIALIDADPROVEEDORs");
            entity.PONEPROVEEDOR = null;
        }

        private void attach_PONEDETALLEACCIONISTAs(PONEDETALLEACCIONISTA entity)
        {
            this.SendPropertyChanging("PONEDETALLEACCIONISTAs");
            entity.PONEPROVEEDOR = this;
        }
    
        private void detach_PONEDETALLEACCIONISTAs(PONEDETALLEACCIONISTA entity)
        {
            this.SendPropertyChanging("PONEDETALLEACCIONISTAs");
            entity.PONEPROVEEDOR = null;
        }

        private void attach_PONECOTIZACIONs(PONECOTIZACION entity)
        {
            this.SendPropertyChanging("PONECOTIZACIONs");
            entity.PONEPROVEEDOR = this;
        }
    
        private void detach_PONECOTIZACIONs(PONECOTIZACION entity)
        {
            this.SendPropertyChanging("PONECOTIZACIONs");
            entity.PONEPROVEEDOR = null;
        }

        private void attach_PONEACTUALIZACIONPROVEEDORs(PONEACTUALIZACIONPROVEEDOR entity)
        {
            this.SendPropertyChanging("PONEACTUALIZACIONPROVEEDORs");
            entity.PONEPROVEEDOR = this;
        }
    
        private void detach_PONEACTUALIZACIONPROVEEDORs(PONEACTUALIZACIONPROVEEDOR entity)
        {
            this.SendPropertyChanging("PONEACTUALIZACIONPROVEEDORs");
            entity.PONEPROVEEDOR = null;
        }

        private void attach_POGEUSUARIOs(POGEUSUARIO entity)
        {
            this.SendPropertyChanging("POGEUSUARIOs");
            entity.PONEPROVEEDOR = this;
        }
    
        private void detach_POGEUSUARIOs(POGEUSUARIO entity)
        {
            this.SendPropertyChanging("POGEUSUARIOs");
            entity.PONEPROVEEDOR = null;
        }

        private void attach_PONEDOCUMENTOs(PONEDOCUMENTO entity)
        {
            this.SendPropertyChanging("PONEDOCUMENTOs");
            entity.PONEPROVEEDORs.Add(this);
        }
    
        private void detach_PONEDOCUMENTOs(PONEDOCUMENTO entity)
        {
            this.SendPropertyChanging("PONEDOCUMENTOs");
            entity.PONEPROVEEDORs.Remove(this);
        }
    }

    /// <summary>
    /// Tabla donde se almacenan la relacion de preguntas y respuestas de las solicitudes de compra
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_PREGUNTASOLICITUD")]
    public partial class PONEPREGUNTASOLICITUD : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _PRSOPREGUNTA;

        private System.DateTime _PRSOFECHAPREGUNTA;

        private string _PRSODESCRIPCION;

        private System.DateTime? _PRSOFECHARESPUESTA;

        private string _PRSORESPUESTA;

        private decimal _SOCOSOLICITUD;

        private decimal _PROVPROVEEDOR;

        private decimal? _PRSOUSUARIORESPUESTA;
        #pragma warning restore 0649

        private EntityRef<PONESOLICITUDCOMPRA> _PONESOLICITUDCOMPRA;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnPRSOPREGUNTAChanging(decimal value);
        partial void OnPRSOPREGUNTAChanged();
        partial void OnPRSOFECHAPREGUNTAChanging(System.DateTime value);
        partial void OnPRSOFECHAPREGUNTAChanged();
        partial void OnPRSODESCRIPCIONChanging(string value);
        partial void OnPRSODESCRIPCIONChanged();
        partial void OnPRSOFECHARESPUESTAChanging(System.DateTime? value);
        partial void OnPRSOFECHARESPUESTAChanged();
        partial void OnPRSORESPUESTAChanging(string value);
        partial void OnPRSORESPUESTAChanged();
        partial void OnSOCOSOLICITUDChanging(decimal value);
        partial void OnSOCOSOLICITUDChanged();
        partial void OnPROVPROVEEDORChanging(decimal value);
        partial void OnPROVPROVEEDORChanged();
        partial void OnPRSOUSUARIORESPUESTAChanging(decimal? value);
        partial void OnPRSOUSUARIORESPUESTAChanged();
        #endregion

        public PONEPREGUNTASOLICITUD()
        {
            this._PONESOLICITUDCOMPRA  = default(EntityRef<PONESOLICITUDCOMPRA>);
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"PRSO_PREGUNTA", Storage = "_PRSOPREGUNTA", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal PRSOPREGUNTA
        {
            get
            {
                return this._PRSOPREGUNTA;
            }
            set
            {
                if (this._PRSOPREGUNTA != value)
                {
                    this.OnPRSOPREGUNTAChanging(value);
                    this.SendPropertyChanging("PRSOPREGUNTA");
                    this._PRSOPREGUNTA = value;
                    this.SendPropertyChanged("PRSOPREGUNTA");
                    this.OnPRSOPREGUNTAChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha registro de pregunta
        /// </summary>
        [Column(Name = @"PRSO_FECHAPREGUNTA", Storage = "_PRSOFECHAPREGUNTA", CanBeNull = false, DbType = "TIMESTAMP(6) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime PRSOFECHAPREGUNTA
        {
            get
            {
                return this._PRSOFECHAPREGUNTA;
            }
            set
            {
                if (this._PRSOFECHAPREGUNTA != value)
                {
                    this.OnPRSOFECHAPREGUNTAChanging(value);
                    this.SendPropertyChanging("PRSOFECHAPREGUNTA");
                    this._PRSOFECHAPREGUNTA = value;
                    this.SendPropertyChanged("PRSOFECHAPREGUNTA");
                    this.OnPRSOFECHAPREGUNTAChanged();
                }
            }
        }

    
        /// <summary>
        /// Pregunta
        /// </summary>
        [Column(Name = @"PRSO_DESCRIPCION", Storage = "_PRSODESCRIPCION", CanBeNull = false, DbType = "VARCHAR2(3000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PRSODESCRIPCION
        {
            get
            {
                return this._PRSODESCRIPCION;
            }
            set
            {
                if (this._PRSODESCRIPCION != value)
                {
                    this.OnPRSODESCRIPCIONChanging(value);
                    this.SendPropertyChanging("PRSODESCRIPCION");
                    this._PRSODESCRIPCION = value;
                    this.SendPropertyChanged("PRSODESCRIPCION");
                    this.OnPRSODESCRIPCIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha de respuesta
        /// </summary>
        [Column(Name = @"PRSO_FECHARESPUESTA", Storage = "_PRSOFECHARESPUESTA", DbType = "TIMESTAMP(6) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? PRSOFECHARESPUESTA
        {
            get
            {
                return this._PRSOFECHARESPUESTA;
            }
            set
            {
                if (this._PRSOFECHARESPUESTA != value)
                {
                    this.OnPRSOFECHARESPUESTAChanging(value);
                    this.SendPropertyChanging("PRSOFECHARESPUESTA");
                    this._PRSOFECHARESPUESTA = value;
                    this.SendPropertyChanged("PRSOFECHARESPUESTA");
                    this.OnPRSOFECHARESPUESTAChanged();
                }
            }
        }

    
        /// <summary>
        /// Respuesta
        /// </summary>
        [Column(Name = @"PRSO_RESPUESTA", Storage = "_PRSORESPUESTA", DbType = "VARCHAR2(3000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PRSORESPUESTA
        {
            get
            {
                return this._PRSORESPUESTA;
            }
            set
            {
                if (this._PRSORESPUESTA != value)
                {
                    this.OnPRSORESPUESTAChanging(value);
                    this.SendPropertyChanging("PRSORESPUESTA");
                    this._PRSORESPUESTA = value;
                    this.SendPropertyChanged("PRSORESPUESTA");
                    this.OnPRSORESPUESTAChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de solicitud
        /// </summary>
        [Column(Name = @"SOCO_SOLICITUD", Storage = "_SOCOSOLICITUD", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal SOCOSOLICITUD
        {
            get
            {
                return this._SOCOSOLICITUD;
            }
            set
            {
                if (this._SOCOSOLICITUD != value)
                {
                    if (this._PONESOLICITUDCOMPRA.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnSOCOSOLICITUDChanging(value);
                    this.SendPropertyChanging("SOCOSOLICITUD");
                    this._SOCOSOLICITUD = value;
                    this.SendPropertyChanged("SOCOSOLICITUD");
                    this.OnSOCOSOLICITUDChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de proveedor hace la pregunta
        /// </summary>
        [Column(Name = @"PROV_PROVEEDOR", Storage = "_PROVPROVEEDOR", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal PROVPROVEEDOR
        {
            get
            {
                return this._PROVPROVEEDOR;
            }
            set
            {
                if (this._PROVPROVEEDOR != value)
                {
                    this.OnPROVPROVEEDORChanging(value);
                    this.SendPropertyChanging("PROVPROVEEDOR");
                    this._PROVPROVEEDOR = value;
                    this.SendPropertyChanged("PROVPROVEEDOR");
                    this.OnPROVPROVEEDORChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo usuario realiza la respuesta
        /// </summary>
        [Column(Name = @"PRSO_USUARIORESPUESTA", Storage = "_PRSOUSUARIORESPUESTA", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PRSOUSUARIORESPUESTA
        {
            get
            {
                return this._PRSOUSUARIORESPUESTA;
            }
            set
            {
                if (this._PRSOUSUARIORESPUESTA != value)
                {
                    this.OnPRSOUSUARIORESPUESTAChanging(value);
                    this.SendPropertyChanging("PRSOUSUARIORESPUESTA");
                    this._PRSOUSUARIORESPUESTA = value;
                    this.SendPropertyChanged("PRSOUSUARIORESPUESTA");
                    this.OnPRSOUSUARIORESPUESTAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONESOLICITUDCOMPRA in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONESOLICITUDCOMPRA_PONEPREGUNTASOLICITUD", Storage="_PONESOLICITUDCOMPRA", ThisKey="SOCOSOLICITUD", OtherKey="SOCOSOLICITUD", IsForeignKey=true)]
        public PONESOLICITUDCOMPRA PONESOLICITUDCOMPRA
        {
            get
            {
                return this._PONESOLICITUDCOMPRA.Entity;
            }
            set
            {
                PONESOLICITUDCOMPRA previousValue = this._PONESOLICITUDCOMPRA.Entity;
                if ((previousValue != value) || (this._PONESOLICITUDCOMPRA.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONESOLICITUDCOMPRA");
                    if (previousValue != null)
                    {
                        this._PONESOLICITUDCOMPRA.Entity = null;
                        previousValue.PONEPREGUNTASOLICITUDs.Remove(this);
                    }
                    this._PONESOLICITUDCOMPRA.Entity = value;
                    if (value != null)
                    {
                        this._SOCOSOLICITUD = value.SOCOSOLICITUD;
                        value.PONEPREGUNTASOLICITUDs.Add(this);
                    }
                    else
                    {
                        this._SOCOSOLICITUD = default(decimal);
                    }
                    this.SendPropertyChanged("PONESOLICITUDCOMPRA");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Almacena la parametrizacion de los archivos en Excel de la evaluacion financiera de los proveedores
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_PARAMETRIZACIONEVALFINAN")]
    public partial class PONEPARAMETRIZACIONEVALFINAN : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _PREFCODIGO;

        private string _PREFITEM;

        private string _PREFCELDAITEM;

        private string _PREFCELDAVALORVIGANT;

        private string _PREFCELDAVALORVIGACT;

        private decimal _PREFVERSION;

        private decimal _CLASTIPODOCU16;
        #pragma warning restore 0649

        private EntitySet<PONEDETAEVALUACIONFINANCIERA> _PONEDETAEVALUACIONFINANCIERAs;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnPREFCODIGOChanging(decimal value);
        partial void OnPREFCODIGOChanged();
        partial void OnPREFITEMChanging(string value);
        partial void OnPREFITEMChanged();
        partial void OnPREFCELDAITEMChanging(string value);
        partial void OnPREFCELDAITEMChanged();
        partial void OnPREFCELDAVALORVIGANTChanging(string value);
        partial void OnPREFCELDAVALORVIGANTChanged();
        partial void OnPREFCELDAVALORVIGACTChanging(string value);
        partial void OnPREFCELDAVALORVIGACTChanged();
        partial void OnPREFVERSIONChanging(decimal value);
        partial void OnPREFVERSIONChanged();
        partial void OnCLASTIPODOCU16Changing(decimal value);
        partial void OnCLASTIPODOCU16Changed();
        #endregion

        public PONEPARAMETRIZACIONEVALFINAN()
        {
            this._PONEDETAEVALUACIONFINANCIERAs = new EntitySet<PONEDETAEVALUACIONFINANCIERA>(new Action<PONEDETAEVALUACIONFINANCIERA>(this.attach_PONEDETAEVALUACIONFINANCIERAs), new Action<PONEDETAEVALUACIONFINANCIERA>(this.detach_PONEDETAEVALUACIONFINANCIERAs));
            OnCreated();
        }

    
        /// <summary>
        /// Llave de la tabla (secuencia)
        /// </summary>
        [Column(Name = @"PREF_CODIGO", Storage = "_PREFCODIGO", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal PREFCODIGO
        {
            get
            {
                return this._PREFCODIGO;
            }
            set
            {
                if (this._PREFCODIGO != value)
                {
                    this.OnPREFCODIGOChanging(value);
                    this.SendPropertyChanging("PREFCODIGO");
                    this._PREFCODIGO = value;
                    this.SendPropertyChanged("PREFCODIGO");
                    this.OnPREFCODIGOChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre o descripcion del concepto
        /// </summary>
        [Column(Name = @"PREF_ITEM", Storage = "_PREFITEM", CanBeNull = false, DbType = "VARCHAR2(60 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PREFITEM
        {
            get
            {
                return this._PREFITEM;
            }
            set
            {
                if (this._PREFITEM != value)
                {
                    this.OnPREFITEMChanging(value);
                    this.SendPropertyChanging("PREFITEM");
                    this._PREFITEM = value;
                    this.SendPropertyChanged("PREFITEM");
                    this.OnPREFITEMChanged();
                }
            }
        }

    
        /// <summary>
        /// Celda Excel que contiene el item
        /// </summary>
        [Column(Name = @"PREF_CELDAITEM", Storage = "_PREFCELDAITEM", CanBeNull = false, DbType = "VARCHAR2(4 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PREFCELDAITEM
        {
            get
            {
                return this._PREFCELDAITEM;
            }
            set
            {
                if (this._PREFCELDAITEM != value)
                {
                    this.OnPREFCELDAITEMChanging(value);
                    this.SendPropertyChanging("PREFCELDAITEM");
                    this._PREFCELDAITEM = value;
                    this.SendPropertyChanged("PREFCELDAITEM");
                    this.OnPREFCELDAITEMChanged();
                }
            }
        }

    
        /// <summary>
        /// Celda Excel que contiene el valor de la vigencia anteior
        /// </summary>
        [Column(Name = @"PREF_CELDAVALORVIGANT", Storage = "_PREFCELDAVALORVIGANT", CanBeNull = false, DbType = "VARCHAR2(4 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PREFCELDAVALORVIGANT
        {
            get
            {
                return this._PREFCELDAVALORVIGANT;
            }
            set
            {
                if (this._PREFCELDAVALORVIGANT != value)
                {
                    this.OnPREFCELDAVALORVIGANTChanging(value);
                    this.SendPropertyChanging("PREFCELDAVALORVIGANT");
                    this._PREFCELDAVALORVIGANT = value;
                    this.SendPropertyChanged("PREFCELDAVALORVIGANT");
                    this.OnPREFCELDAVALORVIGANTChanged();
                }
            }
        }

    
        /// <summary>
        /// Celda Excel que contiene el valor de la vigencia actal
        /// </summary>
        [Column(Name = @"PREF_CELDAVALORVIGACT", Storage = "_PREFCELDAVALORVIGACT", CanBeNull = false, DbType = "VARCHAR2(4 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PREFCELDAVALORVIGACT
        {
            get
            {
                return this._PREFCELDAVALORVIGACT;
            }
            set
            {
                if (this._PREFCELDAVALORVIGACT != value)
                {
                    this.OnPREFCELDAVALORVIGACTChanging(value);
                    this.SendPropertyChanging("PREFCELDAVALORVIGACT");
                    this._PREFCELDAVALORVIGACT = value;
                    this.SendPropertyChanged("PREFCELDAVALORVIGACT");
                    this.OnPREFCELDAVALORVIGACTChanged();
                }
            }
        }

    
        /// <summary>
        /// Version de la parametrizacion
        /// </summary>
        [Column(Name = @"PREF_VERSION", Storage = "_PREFVERSION", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal PREFVERSION
        {
            get
            {
                return this._PREFVERSION;
            }
            set
            {
                if (this._PREFVERSION != value)
                {
                    this.OnPREFVERSIONChanging(value);
                    this.SendPropertyChanging("PREFVERSION");
                    this._PREFVERSION = value;
                    this.SendPropertyChanged("PREFVERSION");
                    this.OnPREFVERSIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Clase de documento de evaluacion financiera
        /// </summary>
        [Column(Name = @"CLAS_TIPODOCU16", Storage = "_CLASTIPODOCU16", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CLASTIPODOCU16
        {
            get
            {
                return this._CLASTIPODOCU16;
            }
            set
            {
                if (this._CLASTIPODOCU16 != value)
                {
                    this.OnCLASTIPODOCU16Changing(value);
                    this.SendPropertyChanging("CLASTIPODOCU16");
                    this._CLASTIPODOCU16 = value;
                    this.SendPropertyChanged("CLASTIPODOCU16");
                    this.OnCLASTIPODOCU16Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDETAEVALUACIONFINANCIERAs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEPARAMETRIZACIONEVALFINAN_PONEDETAEVALUACIONFINANCIERA", Storage="_PONEDETAEVALUACIONFINANCIERAs", ThisKey="PREFCODIGO", OtherKey="PREFCODIGO", DeleteRule="NO ACTION")]
        public EntitySet<PONEDETAEVALUACIONFINANCIERA> PONEDETAEVALUACIONFINANCIERAs
        {
            get
            {
                return this._PONEDETAEVALUACIONFINANCIERAs;
            }
            set
            {
                this._PONEDETAEVALUACIONFINANCIERAs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_PONEDETAEVALUACIONFINANCIERAs(PONEDETAEVALUACIONFINANCIERA entity)
        {
            this.SendPropertyChanging("PONEDETAEVALUACIONFINANCIERAs");
            entity.PONEPARAMETRIZACIONEVALFINAN = this;
        }
    
        private void detach_PONEDETAEVALUACIONFINANCIERAs(PONEDETAEVALUACIONFINANCIERA entity)
        {
            this.SendPropertyChanging("PONEDETAEVALUACIONFINANCIERAs");
            entity.PONEPARAMETRIZACIONEVALFINAN = null;
        }
    }

    /// <summary>
    /// Tabla donde se almacenan las noticias que se presenta en el frontend
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_NOTICIAS")]
    public partial class PONENOTICIA : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _NOTINOTICIA;

        private System.DateTime _NOTIFECHA;

        private string _NOTITITULO;

        private string _NOTICONTENIDO;

        private string _NOTIESTADO;

        private string _NOTIURL;

        private decimal? _BLOBBLOB;
        #pragma warning restore 0649

        private EntityRef<PONEBLOB> _PONEBLOB;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNOTINOTICIAChanging(decimal value);
        partial void OnNOTINOTICIAChanged();
        partial void OnNOTIFECHAChanging(System.DateTime value);
        partial void OnNOTIFECHAChanged();
        partial void OnNOTITITULOChanging(string value);
        partial void OnNOTITITULOChanged();
        partial void OnNOTICONTENIDOChanging(string value);
        partial void OnNOTICONTENIDOChanged();
        partial void OnNOTIESTADOChanging(string value);
        partial void OnNOTIESTADOChanged();
        partial void OnNOTIURLChanging(string value);
        partial void OnNOTIURLChanged();
        partial void OnBLOBBLOBChanging(decimal? value);
        partial void OnBLOBBLOBChanged();
        #endregion

        public PONENOTICIA()
        {
            this._PONEBLOB  = default(EntityRef<PONEBLOB>);
            OnCreated();
        }

    
        /// <summary>
        /// Codigo de la noticia
        /// </summary>
        [Column(Name = @"NOTI_NOTICIA", Storage = "_NOTINOTICIA", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal NOTINOTICIA
        {
            get
            {
                return this._NOTINOTICIA;
            }
            set
            {
                if (this._NOTINOTICIA != value)
                {
                    this.OnNOTINOTICIAChanging(value);
                    this.SendPropertyChanging("NOTINOTICIA");
                    this._NOTINOTICIA = value;
                    this.SendPropertyChanged("NOTINOTICIA");
                    this.OnNOTINOTICIAChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha de publicacion
        /// </summary>
        [Column(Name = @"NOTI_FECHA", Storage = "_NOTIFECHA", CanBeNull = false, DbType = "TIMESTAMP(6) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime NOTIFECHA
        {
            get
            {
                return this._NOTIFECHA;
            }
            set
            {
                if (this._NOTIFECHA != value)
                {
                    this.OnNOTIFECHAChanging(value);
                    this.SendPropertyChanging("NOTIFECHA");
                    this._NOTIFECHA = value;
                    this.SendPropertyChanged("NOTIFECHA");
                    this.OnNOTIFECHAChanged();
                }
            }
        }

    
        /// <summary>
        /// Titulo de la noticia
        /// </summary>
        [Column(Name = @"NOTI_TITULO", Storage = "_NOTITITULO", CanBeNull = false, DbType = "VARCHAR2(200 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOTITITULO
        {
            get
            {
                return this._NOTITITULO;
            }
            set
            {
                if (this._NOTITITULO != value)
                {
                    this.OnNOTITITULOChanging(value);
                    this.SendPropertyChanging("NOTITITULO");
                    this._NOTITITULO = value;
                    this.SendPropertyChanged("NOTITITULO");
                    this.OnNOTITITULOChanged();
                }
            }
        }

    
        /// <summary>
        /// Contenido de la noticia que se muestra
        /// </summary>
        [Column(Name = @"NOTI_CONTENIDO", Storage = "_NOTICONTENIDO", CanBeNull = false, DbType = "CLOB NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOTICONTENIDO
        {
            get
            {
                return this._NOTICONTENIDO;
            }
            set
            {
                if (this._NOTICONTENIDO != value)
                {
                    this.OnNOTICONTENIDOChanging(value);
                    this.SendPropertyChanging("NOTICONTENIDO");
                    this._NOTICONTENIDO = value;
                    this.SendPropertyChanged("NOTICONTENIDO");
                    this.OnNOTICONTENIDOChanged();
                }
            }
        }

    
        /// <summary>
        /// Estado de la noticia
        /// </summary>
        [Column(Name = @"NOTI_ESTADO", Storage = "_NOTIESTADO", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOTIESTADO
        {
            get
            {
                return this._NOTIESTADO;
            }
            set
            {
                if (this._NOTIESTADO != value)
                {
                    this.OnNOTIESTADOChanging(value);
                    this.SendPropertyChanging("NOTIESTADO");
                    this._NOTIESTADO = value;
                    this.SendPropertyChanged("NOTIESTADO");
                    this.OnNOTIESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// URL a la que navegara la noticia
        /// </summary>
        [Column(Name = @"NOTI_URL", Storage = "_NOTIURL", DbType = "VARCHAR2(200 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOTIURL
        {
            get
            {
                return this._NOTIURL;
            }
            set
            {
                if (this._NOTIURL != value)
                {
                    this.OnNOTIURLChanging(value);
                    this.SendPropertyChanging("NOTIURL");
                    this._NOTIURL = value;
                    this.SendPropertyChanged("NOTIURL");
                    this.OnNOTIURLChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo del blob donde se guarda la imagen relacionada a la noticia
        /// </summary>
        [Column(Name = @"BLOB_BLOB", Storage = "_BLOBBLOB", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? BLOBBLOB
        {
            get
            {
                return this._BLOBBLOB;
            }
            set
            {
                if (this._BLOBBLOB != value)
                {
                    if (this._PONEBLOB.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnBLOBBLOBChanging(value);
                    this.SendPropertyChanging("BLOBBLOB");
                    this._BLOBBLOB = value;
                    this.SendPropertyChanged("BLOBBLOB");
                    this.OnBLOBBLOBChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEBLOB in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEBLOB_PONENOTICIA", Storage="_PONEBLOB", ThisKey="BLOBBLOB", OtherKey="BLOBBLOB", IsForeignKey=true)]
        public PONEBLOB PONEBLOB
        {
            get
            {
                return this._PONEBLOB.Entity;
            }
            set
            {
                PONEBLOB previousValue = this._PONEBLOB.Entity;
                if ((previousValue != value) || (this._PONEBLOB.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONEBLOB");
                    if (previousValue != null)
                    {
                        this._PONEBLOB.Entity = null;
                        previousValue.PONENOTICIAs.Remove(this);
                    }
                    this._PONEBLOB.Entity = value;
                    if (value != null)
                    {
                        this._BLOBBLOB = value.BLOBBLOB;
                        value.PONENOTICIAs.Add(this);
                    }
                    else
                    {
                        this._BLOBBLOB = default(decimal?);
                    }
                    this.SendPropertyChanged("PONEBLOB");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Tabla donde se almacena el historico de los cambios de estados por los que pasa el proceso de la solicitud
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_HISTORICOESTADOSOLICITUD")]
    public partial class PONEHISTORICOESTADOSOLICITUD : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _HISSHISTORICO;

        private System.DateTime? _HISSFECHAESTADO;

        private string _HISSOBSERVACION;

        private string _ESSOESTADO;

        private decimal? _LOGSUSUARIO;

        private decimal? _SOCOSOLICITUD;
        #pragma warning restore 0649

        private EntityRef<PONESOLICITUDCOMPRA> _PONESOLICITUDCOMPRA;

        private EntityRef<PONEESTADOSOLICITUD> _PONEESTADOSOLICITUD;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnHISSHISTORICOChanging(decimal value);
        partial void OnHISSHISTORICOChanged();
        partial void OnHISSFECHAESTADOChanging(System.DateTime? value);
        partial void OnHISSFECHAESTADOChanged();
        partial void OnHISSOBSERVACIONChanging(string value);
        partial void OnHISSOBSERVACIONChanged();
        partial void OnESSOESTADOChanging(string value);
        partial void OnESSOESTADOChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        partial void OnSOCOSOLICITUDChanging(decimal? value);
        partial void OnSOCOSOLICITUDChanged();
        #endregion

        public PONEHISTORICOESTADOSOLICITUD()
        {
            this._PONESOLICITUDCOMPRA  = default(EntityRef<PONESOLICITUDCOMPRA>);
            this._PONEESTADOSOLICITUD  = default(EntityRef<PONEESTADOSOLICITUD>);
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"HISS_HISTORICO", Storage = "_HISSHISTORICO", CanBeNull = false, DbType = "NUMBER NULL", IsPrimaryKey = true)]
        public decimal HISSHISTORICO
        {
            get
            {
                return this._HISSHISTORICO;
            }
            set
            {
                if (this._HISSHISTORICO != value)
                {
                    this.OnHISSHISTORICOChanging(value);
                    this.SendPropertyChanging("HISSHISTORICO");
                    this._HISSHISTORICO = value;
                    this.SendPropertyChanged("HISSHISTORICO");
                    this.OnHISSHISTORICOChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha en que se realizo el cambio de estado
        /// </summary>
        [Column(Name = @"HISS_FECHAESTADO", Storage = "_HISSFECHAESTADO", DbType = "TIMESTAMP(6) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? HISSFECHAESTADO
        {
            get
            {
                return this._HISSFECHAESTADO;
            }
            set
            {
                if (this._HISSFECHAESTADO != value)
                {
                    this.OnHISSFECHAESTADOChanging(value);
                    this.SendPropertyChanging("HISSFECHAESTADO");
                    this._HISSFECHAESTADO = value;
                    this.SendPropertyChanged("HISSFECHAESTADO");
                    this.OnHISSFECHAESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// Observacion del cambio
        /// </summary>
        [Column(Name = @"HISS_OBSERVACION", Storage = "_HISSOBSERVACION", DbType = "VARCHAR2(500 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string HISSOBSERVACION
        {
            get
            {
                return this._HISSOBSERVACION;
            }
            set
            {
                if (this._HISSOBSERVACION != value)
                {
                    this.OnHISSOBSERVACIONChanging(value);
                    this.SendPropertyChanging("HISSOBSERVACION");
                    this._HISSOBSERVACION = value;
                    this.SendPropertyChanged("HISSOBSERVACION");
                    this.OnHISSOBSERVACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Estado
        /// </summary>
        [Column(Name = @"ESSO_ESTADO", Storage = "_ESSOESTADO", DbType = "VARCHAR2(2 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESSOESTADO
        {
            get
            {
                return this._ESSOESTADO;
            }
            set
            {
                if (this._ESSOESTADO != value)
                {
                    if (this._PONEESTADOSOLICITUD.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnESSOESTADOChanging(value);
                    this.SendPropertyChanging("ESSOESTADO");
                    this._ESSOESTADO = value;
                    this.SendPropertyChanged("ESSOESTADO");
                    this.OnESSOESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario realiza el cambio de estado
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de solicitud
        /// </summary>
        [Column(Name = @"SOCO_SOLICITUD", Storage = "_SOCOSOLICITUD", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? SOCOSOLICITUD
        {
            get
            {
                return this._SOCOSOLICITUD;
            }
            set
            {
                if (this._SOCOSOLICITUD != value)
                {
                    if (this._PONESOLICITUDCOMPRA.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnSOCOSOLICITUDChanging(value);
                    this.SendPropertyChanging("SOCOSOLICITUD");
                    this._SOCOSOLICITUD = value;
                    this.SendPropertyChanged("SOCOSOLICITUD");
                    this.OnSOCOSOLICITUDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONESOLICITUDCOMPRA in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONESOLICITUDCOMPRA_PONEHISTORICOESTADOSOLICITUD", Storage="_PONESOLICITUDCOMPRA", ThisKey="SOCOSOLICITUD", OtherKey="SOCOSOLICITUD", IsForeignKey=true)]
        public PONESOLICITUDCOMPRA PONESOLICITUDCOMPRA
        {
            get
            {
                return this._PONESOLICITUDCOMPRA.Entity;
            }
            set
            {
                PONESOLICITUDCOMPRA previousValue = this._PONESOLICITUDCOMPRA.Entity;
                if ((previousValue != value) || (this._PONESOLICITUDCOMPRA.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONESOLICITUDCOMPRA");
                    if (previousValue != null)
                    {
                        this._PONESOLICITUDCOMPRA.Entity = null;
                        previousValue.PONEHISTORICOESTADOSOLICITUDs.Remove(this);
                    }
                    this._PONESOLICITUDCOMPRA.Entity = value;
                    if (value != null)
                    {
                        this._SOCOSOLICITUD = value.SOCOSOLICITUD;
                        value.PONEHISTORICOESTADOSOLICITUDs.Add(this);
                    }
                    else
                    {
                        this._SOCOSOLICITUD = default(decimal?);
                    }
                    this.SendPropertyChanged("PONESOLICITUDCOMPRA");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEESTADOSOLICITUD in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEESTADOSOLICITUD_PONEHISTORICOESTADOSOLICITUD", Storage="_PONEESTADOSOLICITUD", ThisKey="ESSOESTADO", OtherKey="ESSOESTADO", IsForeignKey=true)]
        public PONEESTADOSOLICITUD PONEESTADOSOLICITUD
        {
            get
            {
                return this._PONEESTADOSOLICITUD.Entity;
            }
            set
            {
                PONEESTADOSOLICITUD previousValue = this._PONEESTADOSOLICITUD.Entity;
                if ((previousValue != value) || (this._PONEESTADOSOLICITUD.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONEESTADOSOLICITUD");
                    if (previousValue != null)
                    {
                        this._PONEESTADOSOLICITUD.Entity = null;
                        previousValue.PONEHISTORICOESTADOSOLICITUDs.Remove(this);
                    }
                    this._PONEESTADOSOLICITUD.Entity = value;
                    if (value != null)
                    {
                        this._ESSOESTADO = value.ESSOESTADO;
                        value.PONEHISTORICOESTADOSOLICITUDs.Add(this);
                    }
                    else
                    {
                        this._ESSOESTADO = default(string);
                    }
                    this.SendPropertyChanged("PONEESTADOSOLICITUD");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Tabla guarda el historico de documentos por proveedor
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_HISTDOCPROV")]
    public partial class PONEHISTDOCPROV : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _HIDOHIDO;

        private decimal? _DOCUDOCUMENTO;

        private decimal? _PROVPROVEEDOR;

        private System.DateTime? _HIDOFECHA;

        private decimal? _LOGSUSUARIO;
        #pragma warning restore 0649

        private EntityRef<PONEPROVEEDOR> _PONEPROVEEDOR;

        private EntityRef<PONEDOCUMENTO> _PONEDOCUMENTO;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnHIDOHIDOChanging(decimal value);
        partial void OnHIDOHIDOChanged();
        partial void OnDOCUDOCUMENTOChanging(decimal? value);
        partial void OnDOCUDOCUMENTOChanged();
        partial void OnPROVPROVEEDORChanging(decimal? value);
        partial void OnPROVPROVEEDORChanged();
        partial void OnHIDOFECHAChanging(System.DateTime? value);
        partial void OnHIDOFECHAChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        #endregion

        public PONEHISTDOCPROV()
        {
            this._PONEPROVEEDOR  = default(EntityRef<PONEPROVEEDOR>);
            this._PONEDOCUMENTO  = default(EntityRef<PONEDOCUMENTO>);
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"HIDO_HIDO", Storage = "_HIDOHIDO", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal HIDOHIDO
        {
            get
            {
                return this._HIDOHIDO;
            }
            set
            {
                if (this._HIDOHIDO != value)
                {
                    this.OnHIDOHIDOChanging(value);
                    this.SendPropertyChanging("HIDOHIDO");
                    this._HIDOHIDO = value;
                    this.SendPropertyChanged("HIDOHIDO");
                    this.OnHIDOHIDOChanged();
                }
            }
        }

    
        /// <summary>
        /// Documento actualizado
        /// </summary>
        [Column(Name = @"DOCU_DOCUMENTO", Storage = "_DOCUDOCUMENTO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? DOCUDOCUMENTO
        {
            get
            {
                return this._DOCUDOCUMENTO;
            }
            set
            {
                if (this._DOCUDOCUMENTO != value)
                {
                    if (this._PONEDOCUMENTO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnDOCUDOCUMENTOChanging(value);
                    this.SendPropertyChanging("DOCUDOCUMENTO");
                    this._DOCUDOCUMENTO = value;
                    this.SendPropertyChanged("DOCUDOCUMENTO");
                    this.OnDOCUDOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de proveedor
        /// </summary>
        [Column(Name = @"PROV_PROVEEDOR", Storage = "_PROVPROVEEDOR", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVPROVEEDOR
        {
            get
            {
                return this._PROVPROVEEDOR;
            }
            set
            {
                if (this._PROVPROVEEDOR != value)
                {
                    if (this._PONEPROVEEDOR.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnPROVPROVEEDORChanging(value);
                    this.SendPropertyChanging("PROVPROVEEDOR");
                    this._PROVPROVEEDOR = value;
                    this.SendPropertyChanged("PROVPROVEEDOR");
                    this.OnPROVPROVEEDORChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha de actualizacion
        /// </summary>
        [Column(Name = @"HIDO_FECHA", Storage = "_HIDOFECHA", DbType = "TIMESTAMP(6) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? HIDOFECHA
        {
            get
            {
                return this._HIDOFECHA;
            }
            set
            {
                if (this._HIDOFECHA != value)
                {
                    this.OnHIDOFECHAChanging(value);
                    this.SendPropertyChanging("HIDOFECHA");
                    this._HIDOFECHA = value;
                    this.SendPropertyChanged("HIDOFECHA");
                    this.OnHIDOFECHAChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario campo para auditoria
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEPROVEEDOR in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEPROVEEDOR_PONEHISTDOCPROV", Storage="_PONEPROVEEDOR", ThisKey="PROVPROVEEDOR", OtherKey="PROVPROVEEDOR", IsForeignKey=true)]
        public PONEPROVEEDOR PONEPROVEEDOR
        {
            get
            {
                return this._PONEPROVEEDOR.Entity;
            }
            set
            {
                PONEPROVEEDOR previousValue = this._PONEPROVEEDOR.Entity;
                if ((previousValue != value) || (this._PONEPROVEEDOR.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONEPROVEEDOR");
                    if (previousValue != null)
                    {
                        this._PONEPROVEEDOR.Entity = null;
                        previousValue.PONEHISTDOCPROVs.Remove(this);
                    }
                    this._PONEPROVEEDOR.Entity = value;
                    if (value != null)
                    {
                        this._PROVPROVEEDOR = value.PROVPROVEEDOR;
                        value.PONEHISTDOCPROVs.Add(this);
                    }
                    else
                    {
                        this._PROVPROVEEDOR = default(decimal?);
                    }
                    this.SendPropertyChanged("PONEPROVEEDOR");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDOCUMENTO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEDOCUMENTO_PONEHISTDOCPROV", Storage="_PONEDOCUMENTO", ThisKey="DOCUDOCUMENTO", OtherKey="DOCUDOCUMENTO", IsForeignKey=true)]
        public PONEDOCUMENTO PONEDOCUMENTO
        {
            get
            {
                return this._PONEDOCUMENTO.Entity;
            }
            set
            {
                PONEDOCUMENTO previousValue = this._PONEDOCUMENTO.Entity;
                if ((previousValue != value) || (this._PONEDOCUMENTO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONEDOCUMENTO");
                    if (previousValue != null)
                    {
                        this._PONEDOCUMENTO.Entity = null;
                        previousValue.PONEHISTDOCPROVs.Remove(this);
                    }
                    this._PONEDOCUMENTO.Entity = value;
                    if (value != null)
                    {
                        this._DOCUDOCUMENTO = value.DOCUDOCUMENTO;
                        value.PONEHISTDOCPROVs.Add(this);
                    }
                    else
                    {
                        this._DOCUDOCUMENTO = default(decimal?);
                    }
                    this.SendPropertyChanged("PONEDOCUMENTO");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for Negocio.Data.PONEFORMATOXPROVEEDOR in the schema.
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_FORMATOXPROVEEDOR")]
    public partial class PONEFORMATOXPROVEEDOR : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _FOPRFOPR;

        private string _FOPRNOMBREARCHIVO;

        private decimal? _FOPRVIGENCIA;

        private decimal? _FOPRTAMANIO;

        private string _FOPRAPROBADO;

        private decimal? _PROVPROVEEDOR;

        private decimal? _BLOBBLOB;

        private decimal? _CONFCONF;

        private decimal? _FOPRVERSION;
        #pragma warning restore 0649

        private EntityRef<PONEPROVEEDOR> _PONEPROVEEDOR;

        private EntityRef<PONECONFARCHIVO> _PONECONFARCHIVO;

        private EntitySet<PONEDETAFORMATOXPROVEEDOR> _PONEDETAFORMATOXPROVEEDORs;

        private EntityRef<PONEBLOB> _PONEBLOB;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnFOPRFOPRChanging(decimal value);
        partial void OnFOPRFOPRChanged();
        partial void OnFOPRNOMBREARCHIVOChanging(string value);
        partial void OnFOPRNOMBREARCHIVOChanged();
        partial void OnFOPRVIGENCIAChanging(decimal? value);
        partial void OnFOPRVIGENCIAChanged();
        partial void OnFOPRTAMANIOChanging(decimal? value);
        partial void OnFOPRTAMANIOChanged();
        partial void OnFOPRAPROBADOChanging(string value);
        partial void OnFOPRAPROBADOChanged();
        partial void OnPROVPROVEEDORChanging(decimal? value);
        partial void OnPROVPROVEEDORChanged();
        partial void OnBLOBBLOBChanging(decimal? value);
        partial void OnBLOBBLOBChanged();
        partial void OnCONFCONFChanging(decimal? value);
        partial void OnCONFCONFChanged();
        partial void OnFOPRVERSIONChanging(decimal? value);
        partial void OnFOPRVERSIONChanged();
        #endregion

        public PONEFORMATOXPROVEEDOR()
        {
            this._PONEPROVEEDOR  = default(EntityRef<PONEPROVEEDOR>);
            this._PONECONFARCHIVO  = default(EntityRef<PONECONFARCHIVO>);
            this._PONEDETAFORMATOXPROVEEDORs = new EntitySet<PONEDETAFORMATOXPROVEEDOR>(new Action<PONEDETAFORMATOXPROVEEDOR>(this.attach_PONEDETAFORMATOXPROVEEDORs), new Action<PONEDETAFORMATOXPROVEEDOR>(this.detach_PONEDETAFORMATOXPROVEEDORs));
            this._PONEBLOB  = default(EntityRef<PONEBLOB>);
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de tabla
        /// </summary>
        [Column(Name = @"FOPR_FOPR", Storage = "_FOPRFOPR", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal FOPRFOPR
        {
            get
            {
                return this._FOPRFOPR;
            }
            set
            {
                if (this._FOPRFOPR != value)
                {
                    this.OnFOPRFOPRChanging(value);
                    this.SendPropertyChanging("FOPRFOPR");
                    this._FOPRFOPR = value;
                    this.SendPropertyChanged("FOPRFOPR");
                    this.OnFOPRFOPRChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre del archivo
        /// </summary>
        [Column(Name = @"FOPR_NOMBREARCHIVO", Storage = "_FOPRNOMBREARCHIVO", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string FOPRNOMBREARCHIVO
        {
            get
            {
                return this._FOPRNOMBREARCHIVO;
            }
            set
            {
                if (this._FOPRNOMBREARCHIVO != value)
                {
                    this.OnFOPRNOMBREARCHIVOChanging(value);
                    this.SendPropertyChanging("FOPRNOMBREARCHIVO");
                    this._FOPRNOMBREARCHIVO = value;
                    this.SendPropertyChanged("FOPRNOMBREARCHIVO");
                    this.OnFOPRNOMBREARCHIVOChanged();
                }
            }
        }

    
        /// <summary>
        /// Vigencia del archivo
        /// </summary>
        [Column(Name = @"FOPR_VIGENCIA", Storage = "_FOPRVIGENCIA", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? FOPRVIGENCIA
        {
            get
            {
                return this._FOPRVIGENCIA;
            }
            set
            {
                if (this._FOPRVIGENCIA != value)
                {
                    this.OnFOPRVIGENCIAChanging(value);
                    this.SendPropertyChanging("FOPRVIGENCIA");
                    this._FOPRVIGENCIA = value;
                    this.SendPropertyChanged("FOPRVIGENCIA");
                    this.OnFOPRVIGENCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// Tamaño del archivo
        /// </summary>
        [Column(Name = @"FOPR_TAMANIO", Storage = "_FOPRTAMANIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? FOPRTAMANIO
        {
            get
            {
                return this._FOPRTAMANIO;
            }
            set
            {
                if (this._FOPRTAMANIO != value)
                {
                    this.OnFOPRTAMANIOChanging(value);
                    this.SendPropertyChanging("FOPRTAMANIO");
                    this._FOPRTAMANIO = value;
                    this.SendPropertyChanged("FOPRTAMANIO");
                    this.OnFOPRTAMANIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Aprobado S o N
        /// </summary>
        [Column(Name = @"FOPR_APROBADO", Storage = "_FOPRAPROBADO", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string FOPRAPROBADO
        {
            get
            {
                return this._FOPRAPROBADO;
            }
            set
            {
                if (this._FOPRAPROBADO != value)
                {
                    this.OnFOPRAPROBADOChanging(value);
                    this.SendPropertyChanging("FOPRAPROBADO");
                    this._FOPRAPROBADO = value;
                    this.SendPropertyChanged("FOPRAPROBADO");
                    this.OnFOPRAPROBADOChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de Proveedor
        /// </summary>
        [Column(Name = @"PROV_PROVEEDOR", Storage = "_PROVPROVEEDOR", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVPROVEEDOR
        {
            get
            {
                return this._PROVPROVEEDOR;
            }
            set
            {
                if (this._PROVPROVEEDOR != value)
                {
                    if (this._PONEPROVEEDOR.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnPROVPROVEEDORChanging(value);
                    this.SendPropertyChanging("PROVPROVEEDOR");
                    this._PROVPROVEEDOR = value;
                    this.SendPropertyChanged("PROVPROVEEDOR");
                    this.OnPROVPROVEEDORChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo del Blob
        /// </summary>
        [Column(Name = @"BLOB_BLOB", Storage = "_BLOBBLOB", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? BLOBBLOB
        {
            get
            {
                return this._BLOBBLOB;
            }
            set
            {
                if (this._BLOBBLOB != value)
                {
                    if (this._PONEBLOB.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnBLOBBLOBChanging(value);
                    this.SendPropertyChanging("BLOBBLOB");
                    this._BLOBBLOB = value;
                    this.SendPropertyChanged("BLOBBLOB");
                    this.OnBLOBBLOBChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo del Archivo
        /// </summary>
        [Column(Name = @"CONF_CONF", Storage = "_CONFCONF", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? CONFCONF
        {
            get
            {
                return this._CONFCONF;
            }
            set
            {
                if (this._CONFCONF != value)
                {
                    if (this._PONECONFARCHIVO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCONFCONFChanging(value);
                    this.SendPropertyChanging("CONFCONF");
                    this._CONFCONF = value;
                    this.SendPropertyChanged("CONFCONF");
                    this.OnCONFCONFChanged();
                }
            }
        }

    
        /// <summary>
        /// Version del documento
        /// </summary>
        [Column(Name = @"FOPR_VERSION", Storage = "_FOPRVERSION", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? FOPRVERSION
        {
            get
            {
                return this._FOPRVERSION;
            }
            set
            {
                if (this._FOPRVERSION != value)
                {
                    this.OnFOPRVERSIONChanging(value);
                    this.SendPropertyChanging("FOPRVERSION");
                    this._FOPRVERSION = value;
                    this.SendPropertyChanged("FOPRVERSION");
                    this.OnFOPRVERSIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEPROVEEDOR in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEPROVEEDOR_PONEFORMATOXPROVEEDOR", Storage="_PONEPROVEEDOR", ThisKey="PROVPROVEEDOR", OtherKey="PROVPROVEEDOR", IsForeignKey=true)]
        public PONEPROVEEDOR PONEPROVEEDOR
        {
            get
            {
                return this._PONEPROVEEDOR.Entity;
            }
            set
            {
                PONEPROVEEDOR previousValue = this._PONEPROVEEDOR.Entity;
                if ((previousValue != value) || (this._PONEPROVEEDOR.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONEPROVEEDOR");
                    if (previousValue != null)
                    {
                        this._PONEPROVEEDOR.Entity = null;
                        previousValue.PONEFORMATOXPROVEEDORs.Remove(this);
                    }
                    this._PONEPROVEEDOR.Entity = value;
                    if (value != null)
                    {
                        this._PROVPROVEEDOR = value.PROVPROVEEDOR;
                        value.PONEFORMATOXPROVEEDORs.Add(this);
                    }
                    else
                    {
                        this._PROVPROVEEDOR = default(decimal?);
                    }
                    this.SendPropertyChanged("PONEPROVEEDOR");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONECONFARCHIVO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONECONFARCHIVO_PONEFORMATOXPROVEEDOR", Storage="_PONECONFARCHIVO", ThisKey="CONFCONF", OtherKey="CONFCONF", IsForeignKey=true)]
        public PONECONFARCHIVO PONECONFARCHIVO
        {
            get
            {
                return this._PONECONFARCHIVO.Entity;
            }
            set
            {
                PONECONFARCHIVO previousValue = this._PONECONFARCHIVO.Entity;
                if ((previousValue != value) || (this._PONECONFARCHIVO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONECONFARCHIVO");
                    if (previousValue != null)
                    {
                        this._PONECONFARCHIVO.Entity = null;
                        previousValue.PONEFORMATOXPROVEEDORs.Remove(this);
                    }
                    this._PONECONFARCHIVO.Entity = value;
                    if (value != null)
                    {
                        this._CONFCONF = value.CONFCONF;
                        value.PONEFORMATOXPROVEEDORs.Add(this);
                    }
                    else
                    {
                        this._CONFCONF = default(decimal?);
                    }
                    this.SendPropertyChanged("PONECONFARCHIVO");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDETAFORMATOXPROVEEDORs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEFORMATOXPROVEEDOR_PONEDETAFORMATOXPROVEEDOR", Storage="_PONEDETAFORMATOXPROVEEDORs", ThisKey="FOPRFOPR", OtherKey="FOPRFOPR", DeleteRule="NO ACTION")]
        public EntitySet<PONEDETAFORMATOXPROVEEDOR> PONEDETAFORMATOXPROVEEDORs
        {
            get
            {
                return this._PONEDETAFORMATOXPROVEEDORs;
            }
            set
            {
                this._PONEDETAFORMATOXPROVEEDORs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEBLOB in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEBLOB_PONEFORMATOXPROVEEDOR", Storage="_PONEBLOB", ThisKey="BLOBBLOB", OtherKey="BLOBBLOB", IsForeignKey=true)]
        public PONEBLOB PONEBLOB
        {
            get
            {
                return this._PONEBLOB.Entity;
            }
            set
            {
                PONEBLOB previousValue = this._PONEBLOB.Entity;
                if ((previousValue != value) || (this._PONEBLOB.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONEBLOB");
                    if (previousValue != null)
                    {
                        this._PONEBLOB.Entity = null;
                        previousValue.PONEFORMATOXPROVEEDORs.Remove(this);
                    }
                    this._PONEBLOB.Entity = value;
                    if (value != null)
                    {
                        this._BLOBBLOB = value.BLOBBLOB;
                        value.PONEFORMATOXPROVEEDORs.Add(this);
                    }
                    else
                    {
                        this._BLOBBLOB = default(decimal?);
                    }
                    this.SendPropertyChanged("PONEBLOB");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_PONEDETAFORMATOXPROVEEDORs(PONEDETAFORMATOXPROVEEDOR entity)
        {
            this.SendPropertyChanging("PONEDETAFORMATOXPROVEEDORs");
            entity.PONEFORMATOXPROVEEDOR = this;
        }
    
        private void detach_PONEDETAFORMATOXPROVEEDORs(PONEDETAFORMATOXPROVEEDOR entity)
        {
            this.SendPropertyChanging("PONEDETAFORMATOXPROVEEDORs");
            entity.PONEFORMATOXPROVEEDOR = null;
        }
    }

    /// <summary>
    /// Encabezado para guardar los registros de los documentos de la evaluacion finanaciera
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_EVALUACIONFINANCIERA")]
    public partial class PONEEVALUACIONFINANCIERA : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _EVFICODIGO;

        private decimal _CLASTIPODOCU16;

        private decimal _EVFIVIGENCIA;

        private decimal _LOGSUSUARIO;

        private decimal _EVFIVERSION;

        private System.DateTime _LOGSFECHA;
        #pragma warning restore 0649

        private EntitySet<PONEDETAEVALUACIONFINANCIERA> _PONEDETAEVALUACIONFINANCIERAs;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnEVFICODIGOChanging(decimal value);
        partial void OnEVFICODIGOChanged();
        partial void OnCLASTIPODOCU16Changing(decimal value);
        partial void OnCLASTIPODOCU16Changed();
        partial void OnEVFIVIGENCIAChanging(decimal value);
        partial void OnEVFIVIGENCIAChanged();
        partial void OnLOGSUSUARIOChanging(decimal value);
        partial void OnLOGSUSUARIOChanged();
        partial void OnEVFIVERSIONChanging(decimal value);
        partial void OnEVFIVERSIONChanged();
        partial void OnLOGSFECHAChanging(System.DateTime value);
        partial void OnLOGSFECHAChanged();
        #endregion

        public PONEEVALUACIONFINANCIERA()
        {
            this._PONEDETAEVALUACIONFINANCIERAs = new EntitySet<PONEDETAEVALUACIONFINANCIERA>(new Action<PONEDETAEVALUACIONFINANCIERA>(this.attach_PONEDETAEVALUACIONFINANCIERAs), new Action<PONEDETAEVALUACIONFINANCIERA>(this.detach_PONEDETAEVALUACIONFINANCIERAs));
            OnCreated();
        }

    
        /// <summary>
        /// Llave de la tabla
        /// </summary>
        [Column(Name = @"EVFI_CODIGO", Storage = "_EVFICODIGO", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal EVFICODIGO
        {
            get
            {
                return this._EVFICODIGO;
            }
            set
            {
                if (this._EVFICODIGO != value)
                {
                    this.OnEVFICODIGOChanging(value);
                    this.SendPropertyChanging("EVFICODIGO");
                    this._EVFICODIGO = value;
                    this.SendPropertyChanged("EVFICODIGO");
                    this.OnEVFICODIGOChanged();
                }
            }
        }

    
        /// <summary>
        /// Tipo de documento
        /// </summary>
        [Column(Name = @"CLAS_TIPODOCU16", Storage = "_CLASTIPODOCU16", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CLASTIPODOCU16
        {
            get
            {
                return this._CLASTIPODOCU16;
            }
            set
            {
                if (this._CLASTIPODOCU16 != value)
                {
                    this.OnCLASTIPODOCU16Changing(value);
                    this.SendPropertyChanging("CLASTIPODOCU16");
                    this._CLASTIPODOCU16 = value;
                    this.SendPropertyChanged("CLASTIPODOCU16");
                    this.OnCLASTIPODOCU16Changed();
                }
            }
        }

    
        /// <summary>
        /// Vigencia
        /// </summary>
        [Column(Name = @"EVFI_VIGENCIA", Storage = "_EVFIVIGENCIA", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal EVFIVIGENCIA
        {
            get
            {
                return this._EVFIVIGENCIA;
            }
            set
            {
                if (this._EVFIVIGENCIA != value)
                {
                    this.OnEVFIVIGENCIAChanging(value);
                    this.SendPropertyChanging("EVFIVIGENCIA");
                    this._EVFIVIGENCIA = value;
                    this.SendPropertyChanged("EVFIVIGENCIA");
                    this.OnEVFIVIGENCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario creo
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Version
        /// </summary>
        [Column(Name = @"EVFI_VERSION", Storage = "_EVFIVERSION", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal EVFIVERSION
        {
            get
            {
                return this._EVFIVERSION;
            }
            set
            {
                if (this._EVFIVERSION != value)
                {
                    this.OnEVFIVERSIONChanging(value);
                    this.SendPropertyChanging("EVFIVERSION");
                    this._EVFIVERSION = value;
                    this.SendPropertyChanged("EVFIVERSION");
                    this.OnEVFIVERSIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha y hora creacion
        /// </summary>
        [Column(Name = @"LOGS_FECHA", Storage = "_LOGSFECHA", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime LOGSFECHA
        {
            get
            {
                return this._LOGSFECHA;
            }
            set
            {
                if (this._LOGSFECHA != value)
                {
                    this.OnLOGSFECHAChanging(value);
                    this.SendPropertyChanging("LOGSFECHA");
                    this._LOGSFECHA = value;
                    this.SendPropertyChanged("LOGSFECHA");
                    this.OnLOGSFECHAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDETAEVALUACIONFINANCIERAs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEEVALUACIONFINANCIERA_PONEDETAEVALUACIONFINANCIERA", Storage="_PONEDETAEVALUACIONFINANCIERAs", ThisKey="EVFICODIGO", OtherKey="EVFICODIGO", DeleteRule="NO ACTION")]
        public EntitySet<PONEDETAEVALUACIONFINANCIERA> PONEDETAEVALUACIONFINANCIERAs
        {
            get
            {
                return this._PONEDETAEVALUACIONFINANCIERAs;
            }
            set
            {
                this._PONEDETAEVALUACIONFINANCIERAs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_PONEDETAEVALUACIONFINANCIERAs(PONEDETAEVALUACIONFINANCIERA entity)
        {
            this.SendPropertyChanging("PONEDETAEVALUACIONFINANCIERAs");
            entity.PONEEVALUACIONFINANCIERA = this;
        }
    
        private void detach_PONEDETAEVALUACIONFINANCIERAs(PONEDETAEVALUACIONFINANCIERA entity)
        {
            this.SendPropertyChanging("PONEDETAEVALUACIONFINANCIERAs");
            entity.PONEEVALUACIONFINANCIERA = null;
        }
    }

    /// <summary>
    /// Tabla para configurar los posibles estados de una solicitud
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_ESTADOSOLICITUD")]
    public partial class PONEESTADOSOLICITUD : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _ESSOESTADO;

        private string _ESSONOMBRE;

        private string _ESSOESTADOANTERIOR;

        private string _ESSOESTADOSIGUIENTE;

        private string _ESSOESTADOREGISTRO;

        private string _ESSOALIAS;

        private string _ESSOTIPO;
        #pragma warning restore 0649

        private EntitySet<PONEHISTORICOESTADOSOLICITUD> _PONEHISTORICOESTADOSOLICITUDs;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnESSOESTADOChanging(string value);
        partial void OnESSOESTADOChanged();
        partial void OnESSONOMBREChanging(string value);
        partial void OnESSONOMBREChanged();
        partial void OnESSOESTADOANTERIORChanging(string value);
        partial void OnESSOESTADOANTERIORChanged();
        partial void OnESSOESTADOSIGUIENTEChanging(string value);
        partial void OnESSOESTADOSIGUIENTEChanged();
        partial void OnESSOESTADOREGISTROChanging(string value);
        partial void OnESSOESTADOREGISTROChanged();
        partial void OnESSOALIASChanging(string value);
        partial void OnESSOALIASChanged();
        partial void OnESSOTIPOChanging(string value);
        partial void OnESSOTIPOChanged();
        #endregion

        public PONEESTADOSOLICITUD()
        {
            this._PONEHISTORICOESTADOSOLICITUDs = new EntitySet<PONEHISTORICOESTADOSOLICITUD>(new Action<PONEHISTORICOESTADOSOLICITUD>(this.attach_PONEHISTORICOESTADOSOLICITUDs), new Action<PONEHISTORICOESTADOSOLICITUD>(this.detach_PONEHISTORICOESTADOSOLICITUDs));
            OnCreated();
        }

    
        /// <summary>
        /// Estado
        /// </summary>
        [Column(Name = @"ESSO_ESTADO", Storage = "_ESSOESTADO", CanBeNull = false, DbType = "VARCHAR2(2 CHAR) NOT NULL", IsPrimaryKey = true)]
        public string ESSOESTADO
        {
            get
            {
                return this._ESSOESTADO;
            }
            set
            {
                if (this._ESSOESTADO != value)
                {
                    this.OnESSOESTADOChanging(value);
                    this.SendPropertyChanging("ESSOESTADO");
                    this._ESSOESTADO = value;
                    this.SendPropertyChanged("ESSOESTADO");
                    this.OnESSOESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre del estado
        /// </summary>
        [Column(Name = @"ESSO_NOMBRE", Storage = "_ESSONOMBRE", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESSONOMBRE
        {
            get
            {
                return this._ESSONOMBRE;
            }
            set
            {
                if (this._ESSONOMBRE != value)
                {
                    this.OnESSONOMBREChanging(value);
                    this.SendPropertyChanging("ESSONOMBRE");
                    this._ESSONOMBRE = value;
                    this.SendPropertyChanged("ESSONOMBRE");
                    this.OnESSONOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// Estado anterior o previo al estado
        /// </summary>
        [Column(Name = @"ESSO_ESTADOANTERIOR", Storage = "_ESSOESTADOANTERIOR", DbType = "VARCHAR2(2 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESSOESTADOANTERIOR
        {
            get
            {
                return this._ESSOESTADOANTERIOR;
            }
            set
            {
                if (this._ESSOESTADOANTERIOR != value)
                {
                    this.OnESSOESTADOANTERIORChanging(value);
                    this.SendPropertyChanging("ESSOESTADOANTERIOR");
                    this._ESSOESTADOANTERIOR = value;
                    this.SendPropertyChanged("ESSOESTADOANTERIOR");
                    this.OnESSOESTADOANTERIORChanged();
                }
            }
        }

    
        /// <summary>
        /// Siguiente estado 
        /// </summary>
        [Column(Name = @"ESSO_ESTADOSIGUIENTE", Storage = "_ESSOESTADOSIGUIENTE", DbType = "VARCHAR2(2 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESSOESTADOSIGUIENTE
        {
            get
            {
                return this._ESSOESTADOSIGUIENTE;
            }
            set
            {
                if (this._ESSOESTADOSIGUIENTE != value)
                {
                    this.OnESSOESTADOSIGUIENTEChanging(value);
                    this.SendPropertyChanging("ESSOESTADOSIGUIENTE");
                    this._ESSOESTADOSIGUIENTE = value;
                    this.SendPropertyChanged("ESSOESTADOSIGUIENTE");
                    this.OnESSOESTADOSIGUIENTEChanged();
                }
            }
        }

    
        /// <summary>
        /// Estado del registro
        /// </summary>
        [Column(Name = @"ESSO_ESTADOREGISTRO", Storage = "_ESSOESTADOREGISTRO", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESSOESTADOREGISTRO
        {
            get
            {
                return this._ESSOESTADOREGISTRO;
            }
            set
            {
                if (this._ESSOESTADOREGISTRO != value)
                {
                    this.OnESSOESTADOREGISTROChanging(value);
                    this.SendPropertyChanging("ESSOESTADOREGISTRO");
                    this._ESSOESTADOREGISTRO = value;
                    this.SendPropertyChanged("ESSOESTADOREGISTRO");
                    this.OnESSOESTADOREGISTROChanged();
                }
            }
        }

    
        /// <summary>
        /// Alias del estado
        /// </summary>
        [Column(Name = @"ESSO_ALIAS", Storage = "_ESSOALIAS", DbType = "VARCHAR2(20 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESSOALIAS
        {
            get
            {
                return this._ESSOALIAS;
            }
            set
            {
                if (this._ESSOALIAS != value)
                {
                    this.OnESSOALIASChanging(value);
                    this.SendPropertyChanging("ESSOALIAS");
                    this._ESSOALIAS = value;
                    this.SendPropertyChanged("ESSOALIAS");
                    this.OnESSOALIASChanged();
                }
            }
        }

    
        /// <summary>
        /// L: Solo Lectura E: Edicion Total  F:Solo Fechas
        /// </summary>
        [Column(Name = @"ESSO_TIPO", Storage = "_ESSOTIPO", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESSOTIPO
        {
            get
            {
                return this._ESSOTIPO;
            }
            set
            {
                if (this._ESSOTIPO != value)
                {
                    this.OnESSOTIPOChanging(value);
                    this.SendPropertyChanging("ESSOTIPO");
                    this._ESSOTIPO = value;
                    this.SendPropertyChanged("ESSOTIPO");
                    this.OnESSOTIPOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEHISTORICOESTADOSOLICITUDs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEESTADOSOLICITUD_PONEHISTORICOESTADOSOLICITUD", Storage="_PONEHISTORICOESTADOSOLICITUDs", ThisKey="ESSOESTADO", OtherKey="ESSOESTADO", DeleteRule="NO ACTION")]
        public EntitySet<PONEHISTORICOESTADOSOLICITUD> PONEHISTORICOESTADOSOLICITUDs
        {
            get
            {
                return this._PONEHISTORICOESTADOSOLICITUDs;
            }
            set
            {
                this._PONEHISTORICOESTADOSOLICITUDs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_PONEHISTORICOESTADOSOLICITUDs(PONEHISTORICOESTADOSOLICITUD entity)
        {
            this.SendPropertyChanging("PONEHISTORICOESTADOSOLICITUDs");
            entity.PONEESTADOSOLICITUD = this;
        }
    
        private void detach_PONEHISTORICOESTADOSOLICITUDs(PONEHISTORICOESTADOSOLICITUD entity)
        {
            this.SendPropertyChanging("PONEHISTORICOESTADOSOLICITUDs");
            entity.PONEESTADOSOLICITUD = null;
        }
    }

    /// <summary>
    /// Lista de especializades de l proveedor, detalle de la tabla pone_proveedor
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_ESPECIALIDADPROVEEDOR")]
    public partial class PONEESPECIALIDADPROVEEDOR : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _LIESSECUENCIA;

        private decimal _PROVPROVEEDOR;

        private string _LIESBIENESOSERVICIOS;

        private string _LIESCOMERCIO;

        private string _LIESSERVICIOS;

        private string _LIESMANUFACTURA;

        private string _LIESGRAVADA;

        private decimal? _LOGSUSUARIO;
        #pragma warning restore 0649

        private EntityRef<PONEPROVEEDOR> _PONEPROVEEDOR;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnLIESSECUENCIAChanging(decimal value);
        partial void OnLIESSECUENCIAChanged();
        partial void OnPROVPROVEEDORChanging(decimal value);
        partial void OnPROVPROVEEDORChanged();
        partial void OnLIESBIENESOSERVICIOSChanging(string value);
        partial void OnLIESBIENESOSERVICIOSChanged();
        partial void OnLIESCOMERCIOChanging(string value);
        partial void OnLIESCOMERCIOChanged();
        partial void OnLIESSERVICIOSChanging(string value);
        partial void OnLIESSERVICIOSChanged();
        partial void OnLIESMANUFACTURAChanging(string value);
        partial void OnLIESMANUFACTURAChanged();
        partial void OnLIESGRAVADAChanging(string value);
        partial void OnLIESGRAVADAChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        #endregion

        public PONEESPECIALIDADPROVEEDOR()
        {
            this._PONEPROVEEDOR  = default(EntityRef<PONEPROVEEDOR>);
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"LIES_SECUENCIA", Storage = "_LIESSECUENCIA", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal LIESSECUENCIA
        {
            get
            {
                return this._LIESSECUENCIA;
            }
            set
            {
                if (this._LIESSECUENCIA != value)
                {
                    this.OnLIESSECUENCIAChanging(value);
                    this.SendPropertyChanging("LIESSECUENCIA");
                    this._LIESSECUENCIA = value;
                    this.SendPropertyChanged("LIESSECUENCIA");
                    this.OnLIESSECUENCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de proveedor
        /// </summary>
        [Column(Name = @"PROV_PROVEEDOR", Storage = "_PROVPROVEEDOR", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal PROVPROVEEDOR
        {
            get
            {
                return this._PROVPROVEEDOR;
            }
            set
            {
                if (this._PROVPROVEEDOR != value)
                {
                    if (this._PONEPROVEEDOR.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnPROVPROVEEDORChanging(value);
                    this.SendPropertyChanging("PROVPROVEEDOR");
                    this._PROVPROVEEDOR = value;
                    this.SendPropertyChanged("PROVPROVEEDOR");
                    this.OnPROVPROVEEDORChanged();
                }
            }
        }

    
        /// <summary>
        /// Descripcion de los bienes o servicios ofrecidos
        /// </summary>
        [Column(Name = @"LIES_BIENESOSERVICIOS", Storage = "_LIESBIENESOSERVICIOS", DbType = "VARCHAR2(2500 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string LIESBIENESOSERVICIOS
        {
            get
            {
                return this._LIESBIENESOSERVICIOS;
            }
            set
            {
                if (this._LIESBIENESOSERVICIOS != value)
                {
                    this.OnLIESBIENESOSERVICIOSChanging(value);
                    this.SendPropertyChanging("LIESBIENESOSERVICIOS");
                    this._LIESBIENESOSERVICIOS = value;
                    this.SendPropertyChanged("LIESBIENESOSERVICIOS");
                    this.OnLIESBIENESOSERVICIOSChanged();
                }
            }
        }

    
        /// <summary>
        /// Indica si la actividad comercial del proveedor para el bien o servicio ofrecido es importador, S, N
        /// </summary>
        [Column(Name = @"LIES_COMERCIO", Storage = "_LIESCOMERCIO", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string LIESCOMERCIO
        {
            get
            {
                return this._LIESCOMERCIO;
            }
            set
            {
                if (this._LIESCOMERCIO != value)
                {
                    this.OnLIESCOMERCIOChanging(value);
                    this.SendPropertyChanging("LIESCOMERCIO");
                    this._LIESCOMERCIO = value;
                    this.SendPropertyChanged("LIESCOMERCIO");
                    this.OnLIESCOMERCIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Indica si la actividad comercial del proveedor para el bien o servicio ofrecido es fabricante, S, N
        /// </summary>
        [Column(Name = @"LIES_SERVICIOS", Storage = "_LIESSERVICIOS", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string LIESSERVICIOS
        {
            get
            {
                return this._LIESSERVICIOS;
            }
            set
            {
                if (this._LIESSERVICIOS != value)
                {
                    this.OnLIESSERVICIOSChanging(value);
                    this.SendPropertyChanging("LIESSERVICIOS");
                    this._LIESSERVICIOS = value;
                    this.SendPropertyChanged("LIESSERVICIOS");
                    this.OnLIESSERVICIOSChanged();
                }
            }
        }

    
        /// <summary>
        /// Indica si la actividad comercial del proveedor para el bien o servicio ofrecido es destribuidor exclusivo, S, N
        /// </summary>
        [Column(Name = @"LIES_MANUFACTURA", Storage = "_LIESMANUFACTURA", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string LIESMANUFACTURA
        {
            get
            {
                return this._LIESMANUFACTURA;
            }
            set
            {
                if (this._LIESMANUFACTURA != value)
                {
                    this.OnLIESMANUFACTURAChanging(value);
                    this.SendPropertyChanging("LIESMANUFACTURA");
                    this._LIESMANUFACTURA = value;
                    this.SendPropertyChanged("LIESMANUFACTURA");
                    this.OnLIESMANUFACTURAChanged();
                }
            }
        }

    
        /// <summary>
        /// Indica si la actividad comercial del proveedor para el bien o servicio ofrecido es grabada o excluida (Impuestos), S, N
        /// </summary>
        [Column(Name = @"LIES_GRAVADA", Storage = "_LIESGRAVADA", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string LIESGRAVADA
        {
            get
            {
                return this._LIESGRAVADA;
            }
            set
            {
                if (this._LIESGRAVADA != value)
                {
                    this.OnLIESGRAVADAChanging(value);
                    this.SendPropertyChanging("LIESGRAVADA");
                    this._LIESGRAVADA = value;
                    this.SendPropertyChanged("LIESGRAVADA");
                    this.OnLIESGRAVADAChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario campo para auditoria
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEPROVEEDOR in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEPROVEEDOR_PONEESPECIALIDADPROVEEDOR", Storage="_PONEPROVEEDOR", ThisKey="PROVPROVEEDOR", OtherKey="PROVPROVEEDOR", IsForeignKey=true)]
        public PONEPROVEEDOR PONEPROVEEDOR
        {
            get
            {
                return this._PONEPROVEEDOR.Entity;
            }
            set
            {
                PONEPROVEEDOR previousValue = this._PONEPROVEEDOR.Entity;
                if ((previousValue != value) || (this._PONEPROVEEDOR.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONEPROVEEDOR");
                    if (previousValue != null)
                    {
                        this._PONEPROVEEDOR.Entity = null;
                        previousValue.PONEESPECIALIDADPROVEEDORs.Remove(this);
                    }
                    this._PONEPROVEEDOR.Entity = value;
                    if (value != null)
                    {
                        this._PROVPROVEEDOR = value.PROVPROVEEDOR;
                        value.PONEESPECIALIDADPROVEEDORs.Add(this);
                    }
                    else
                    {
                        this._PROVPROVEEDOR = default(decimal);
                    }
                    this.SendPropertyChanged("PONEPROVEEDOR");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Tabla para parametrizar los posibles tipos de documento para el registro de proveedor segun el tipo
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_DOCUMENTOXPERSONA")]
    public partial class PONEDOCUMENTOXPERSONA : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _DOPESECUENCIA;

        private decimal _CLASTIPOPERSONA1;

        private decimal _CLASTIPODOCUMENTO8;

        private string _DOPEOBLIGATORIO;
        #pragma warning restore 0649

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnDOPESECUENCIAChanging(int value);
        partial void OnDOPESECUENCIAChanged();
        partial void OnCLASTIPOPERSONA1Changing(decimal value);
        partial void OnCLASTIPOPERSONA1Changed();
        partial void OnCLASTIPODOCUMENTO8Changing(decimal value);
        partial void OnCLASTIPODOCUMENTO8Changed();
        partial void OnDOPEOBLIGATORIOChanging(string value);
        partial void OnDOPEOBLIGATORIOChanged();
        #endregion

        public PONEDOCUMENTOXPERSONA()
        {
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia llave primaria
        /// </summary>
        [Column(Name = @"DOPE_SECUENCIA", Storage = "_DOPESECUENCIA", CanBeNull = false, DbType = "NUMBER(5) NOT NULL", IsPrimaryKey = true)]
        public int DOPESECUENCIA
        {
            get
            {
                return this._DOPESECUENCIA;
            }
            set
            {
                if (this._DOPESECUENCIA != value)
                {
                    this.OnDOPESECUENCIAChanging(value);
                    this.SendPropertyChanging("DOPESECUENCIA");
                    this._DOPESECUENCIA = value;
                    this.SendPropertyChanged("DOPESECUENCIA");
                    this.OnDOPESECUENCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// Tipo de Persona
        /// </summary>
        [Column(Name = @"CLAS_TIPOPERSONA1", Storage = "_CLASTIPOPERSONA1", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CLASTIPOPERSONA1
        {
            get
            {
                return this._CLASTIPOPERSONA1;
            }
            set
            {
                if (this._CLASTIPOPERSONA1 != value)
                {
                    this.OnCLASTIPOPERSONA1Changing(value);
                    this.SendPropertyChanging("CLASTIPOPERSONA1");
                    this._CLASTIPOPERSONA1 = value;
                    this.SendPropertyChanged("CLASTIPOPERSONA1");
                    this.OnCLASTIPOPERSONA1Changed();
                }
            }
        }

    
        /// <summary>
        /// Tipo de Documento
        /// </summary>
        [Column(Name = @"CLAS_TIPODOCUMENTO8", Storage = "_CLASTIPODOCUMENTO8", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CLASTIPODOCUMENTO8
        {
            get
            {
                return this._CLASTIPODOCUMENTO8;
            }
            set
            {
                if (this._CLASTIPODOCUMENTO8 != value)
                {
                    this.OnCLASTIPODOCUMENTO8Changing(value);
                    this.SendPropertyChanging("CLASTIPODOCUMENTO8");
                    this._CLASTIPODOCUMENTO8 = value;
                    this.SendPropertyChanged("CLASTIPODOCUMENTO8");
                    this.OnCLASTIPODOCUMENTO8Changed();
                }
            }
        }

    
        /// <summary>
        /// Indica si el documento es obligatorio o no para el registro
        /// </summary>
        [Column(Name = @"DOPE_OBLIGATORIO", Storage = "_DOPEOBLIGATORIO", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DOPEOBLIGATORIO
        {
            get
            {
                return this._DOPEOBLIGATORIO;
            }
            set
            {
                if (this._DOPEOBLIGATORIO != value)
                {
                    this.OnDOPEOBLIGATORIOChanging(value);
                    this.SendPropertyChanging("DOPEOBLIGATORIO");
                    this._DOPEOBLIGATORIO = value;
                    this.SendPropertyChanged("DOPEOBLIGATORIO");
                    this.OnDOPEOBLIGATORIOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Lista de documentos adjuntados en la solicitud, detalle de la tabla pone_solicitud
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_DOCUMENTOSOLICITUD")]
    public partial class PONEDOCUMENTOSOLICITUD : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _SOCOSOLICITUD;

        private decimal _DOCUDOCUMENTO;

        private decimal _DOSOSECUENCIA;

        private decimal? _LOGSUSUARIO;
        #pragma warning restore 0649

        private EntityRef<PONESOLICITUDCOMPRA> _PONESOLICITUDCOMPRA;

        private EntityRef<PONEDOCUMENTO> _PONEDOCUMENTO;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnSOCOSOLICITUDChanging(decimal value);
        partial void OnSOCOSOLICITUDChanged();
        partial void OnDOCUDOCUMENTOChanging(decimal value);
        partial void OnDOCUDOCUMENTOChanged();
        partial void OnDOSOSECUENCIAChanging(decimal value);
        partial void OnDOSOSECUENCIAChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        #endregion

        public PONEDOCUMENTOSOLICITUD()
        {
            this._PONESOLICITUDCOMPRA  = default(EntityRef<PONESOLICITUDCOMPRA>);
            this._PONEDOCUMENTO  = default(EntityRef<PONEDOCUMENTO>);
            OnCreated();
        }

    
        /// <summary>
        /// Codigo Solicitud
        /// </summary>
        [Column(Name = @"SOCO_SOLICITUD", Storage = "_SOCOSOLICITUD", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal SOCOSOLICITUD
        {
            get
            {
                return this._SOCOSOLICITUD;
            }
            set
            {
                if (this._SOCOSOLICITUD != value)
                {
                    if (this._PONESOLICITUDCOMPRA.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnSOCOSOLICITUDChanging(value);
                    this.SendPropertyChanging("SOCOSOLICITUD");
                    this._SOCOSOLICITUD = value;
                    this.SendPropertyChanged("SOCOSOLICITUD");
                    this.OnSOCOSOLICITUDChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de documento
        /// </summary>
        [Column(Name = @"DOCU_DOCUMENTO", Storage = "_DOCUDOCUMENTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal DOCUDOCUMENTO
        {
            get
            {
                return this._DOCUDOCUMENTO;
            }
            set
            {
                if (this._DOCUDOCUMENTO != value)
                {
                    if (this._PONEDOCUMENTO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnDOCUDOCUMENTOChanging(value);
                    this.SendPropertyChanging("DOCUDOCUMENTO");
                    this._DOCUDOCUMENTO = value;
                    this.SendPropertyChanged("DOCUDOCUMENTO");
                    this.OnDOCUDOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"DOSO_SECUENCIA", Storage = "_DOSOSECUENCIA", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal DOSOSECUENCIA
        {
            get
            {
                return this._DOSOSECUENCIA;
            }
            set
            {
                if (this._DOSOSECUENCIA != value)
                {
                    this.OnDOSOSECUENCIAChanging(value);
                    this.SendPropertyChanging("DOSOSECUENCIA");
                    this._DOSOSECUENCIA = value;
                    this.SendPropertyChanged("DOSOSECUENCIA");
                    this.OnDOSOSECUENCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario para auditoria
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONESOLICITUDCOMPRA in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONESOLICITUDCOMPRA_PONEDOCUMENTOSOLICITUD", Storage="_PONESOLICITUDCOMPRA", ThisKey="SOCOSOLICITUD", OtherKey="SOCOSOLICITUD", IsForeignKey=true)]
        public PONESOLICITUDCOMPRA PONESOLICITUDCOMPRA
        {
            get
            {
                return this._PONESOLICITUDCOMPRA.Entity;
            }
            set
            {
                PONESOLICITUDCOMPRA previousValue = this._PONESOLICITUDCOMPRA.Entity;
                if ((previousValue != value) || (this._PONESOLICITUDCOMPRA.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONESOLICITUDCOMPRA");
                    if (previousValue != null)
                    {
                        this._PONESOLICITUDCOMPRA.Entity = null;
                        previousValue.PONEDOCUMENTOSOLICITUDs.Remove(this);
                    }
                    this._PONESOLICITUDCOMPRA.Entity = value;
                    if (value != null)
                    {
                        this._SOCOSOLICITUD = value.SOCOSOLICITUD;
                        value.PONEDOCUMENTOSOLICITUDs.Add(this);
                    }
                    else
                    {
                        this._SOCOSOLICITUD = default(decimal);
                    }
                    this.SendPropertyChanged("PONESOLICITUDCOMPRA");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDOCUMENTO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEDOCUMENTO_PONEDOCUMENTOSOLICITUD", Storage="_PONEDOCUMENTO", ThisKey="DOCUDOCUMENTO", OtherKey="DOCUDOCUMENTO", IsForeignKey=true)]
        public PONEDOCUMENTO PONEDOCUMENTO
        {
            get
            {
                return this._PONEDOCUMENTO.Entity;
            }
            set
            {
                PONEDOCUMENTO previousValue = this._PONEDOCUMENTO.Entity;
                if ((previousValue != value) || (this._PONEDOCUMENTO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONEDOCUMENTO");
                    if (previousValue != null)
                    {
                        this._PONEDOCUMENTO.Entity = null;
                        previousValue.PONEDOCUMENTOSOLICITUDs.Remove(this);
                    }
                    this._PONEDOCUMENTO.Entity = value;
                    if (value != null)
                    {
                        this._DOCUDOCUMENTO = value.DOCUDOCUMENTO;
                        value.PONEDOCUMENTOSOLICITUDs.Add(this);
                    }
                    else
                    {
                        this._DOCUDOCUMENTO = default(decimal);
                    }
                    this.SendPropertyChanged("PONEDOCUMENTO");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Tabla para almacenar la relacion de documento de un elemento cotizado - Ficha Tecnica
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_DOCUMENTODETALLECOT")]
    public partial class PONEDOCUMENTODETALLECOT : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _DECODETALLE;

        private decimal _DOCUDOCUMENTO;

        private decimal _DODESECUENCIA;
        #pragma warning restore 0649

        private EntityRef<PONEDOCUMENTO> _PONEDOCUMENTO;

        private EntityRef<PONEDETALLECOTIZACION> _PONEDETALLECOTIZACION;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnDECODETALLEChanging(decimal value);
        partial void OnDECODETALLEChanged();
        partial void OnDOCUDOCUMENTOChanging(decimal value);
        partial void OnDOCUDOCUMENTOChanged();
        partial void OnDODESECUENCIAChanging(decimal value);
        partial void OnDODESECUENCIAChanged();
        #endregion

        public PONEDOCUMENTODETALLECOT()
        {
            this._PONEDOCUMENTO  = default(EntityRef<PONEDOCUMENTO>);
            this._PONEDETALLECOTIZACION  = default(EntityRef<PONEDETALLECOTIZACION>);
            OnCreated();
        }

    
        /// <summary>
        /// Codigo del detalle de cotizacion asociado al documento
        /// </summary>
        [Column(Name = @"DECO_DETALLE", Storage = "_DECODETALLE", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal DECODETALLE
        {
            get
            {
                return this._DECODETALLE;
            }
            set
            {
                if (this._DECODETALLE != value)
                {
                    if (this._PONEDETALLECOTIZACION.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnDECODETALLEChanging(value);
                    this.SendPropertyChanging("DECODETALLE");
                    this._DECODETALLE = value;
                    this.SendPropertyChanged("DECODETALLE");
                    this.OnDECODETALLEChanged();
                }
            }
        }

    
        /// <summary>
        /// Tipo de documento
        /// </summary>
        [Column(Name = @"DOCU_DOCUMENTO", Storage = "_DOCUDOCUMENTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal DOCUDOCUMENTO
        {
            get
            {
                return this._DOCUDOCUMENTO;
            }
            set
            {
                if (this._DOCUDOCUMENTO != value)
                {
                    if (this._PONEDOCUMENTO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnDOCUDOCUMENTOChanging(value);
                    this.SendPropertyChanging("DOCUDOCUMENTO");
                    this._DOCUDOCUMENTO = value;
                    this.SendPropertyChanged("DOCUDOCUMENTO");
                    this.OnDOCUDOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"DODE_SECUENCIA", Storage = "_DODESECUENCIA", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal DODESECUENCIA
        {
            get
            {
                return this._DODESECUENCIA;
            }
            set
            {
                if (this._DODESECUENCIA != value)
                {
                    this.OnDODESECUENCIAChanging(value);
                    this.SendPropertyChanging("DODESECUENCIA");
                    this._DODESECUENCIA = value;
                    this.SendPropertyChanged("DODESECUENCIA");
                    this.OnDODESECUENCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDOCUMENTO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEDOCUMENTO_PONEDOCUMENTODETALLECOT", Storage="_PONEDOCUMENTO", ThisKey="DOCUDOCUMENTO", OtherKey="DOCUDOCUMENTO", IsForeignKey=true)]
        public PONEDOCUMENTO PONEDOCUMENTO
        {
            get
            {
                return this._PONEDOCUMENTO.Entity;
            }
            set
            {
                PONEDOCUMENTO previousValue = this._PONEDOCUMENTO.Entity;
                if ((previousValue != value) || (this._PONEDOCUMENTO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONEDOCUMENTO");
                    if (previousValue != null)
                    {
                        this._PONEDOCUMENTO.Entity = null;
                        previousValue.PONEDOCUMENTODETALLECOTs.Remove(this);
                    }
                    this._PONEDOCUMENTO.Entity = value;
                    if (value != null)
                    {
                        this._DOCUDOCUMENTO = value.DOCUDOCUMENTO;
                        value.PONEDOCUMENTODETALLECOTs.Add(this);
                    }
                    else
                    {
                        this._DOCUDOCUMENTO = default(decimal);
                    }
                    this.SendPropertyChanged("PONEDOCUMENTO");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDETALLECOTIZACION in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEDETALLECOTIZACION_PONEDOCUMENTODETALLECOT", Storage="_PONEDETALLECOTIZACION", ThisKey="DECODETALLE", OtherKey="DECODETALLE", IsForeignKey=true)]
        public PONEDETALLECOTIZACION PONEDETALLECOTIZACION
        {
            get
            {
                return this._PONEDETALLECOTIZACION.Entity;
            }
            set
            {
                PONEDETALLECOTIZACION previousValue = this._PONEDETALLECOTIZACION.Entity;
                if ((previousValue != value) || (this._PONEDETALLECOTIZACION.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONEDETALLECOTIZACION");
                    if (previousValue != null)
                    {
                        this._PONEDETALLECOTIZACION.Entity = null;
                        previousValue.PONEDOCUMENTODETALLECOTs.Remove(this);
                    }
                    this._PONEDETALLECOTIZACION.Entity = value;
                    if (value != null)
                    {
                        this._DECODETALLE = value.DECODETALLE;
                        value.PONEDOCUMENTODETALLECOTs.Add(this);
                    }
                    else
                    {
                        this._DECODETALLE = default(decimal);
                    }
                    this.SendPropertyChanged("PONEDETALLECOTIZACION");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Tabla para relacionar los documentos adjuntados en la cotizacion.
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_DOCUMENTOCOTIZACION")]
    public partial class PONEDOCUMENTOCOTIZACION : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _COTICOTIZACION;

        private decimal _DOCUDOCUMENTO;

        private decimal _DOCOSECUENCIA;

        private decimal? _LOGSUSUARIO;
        #pragma warning restore 0649

        private EntityRef<PONEDOCUMENTO> _PONEDOCUMENTO;

        private EntityRef<PONECOTIZACION> _PONECOTIZACION;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCOTICOTIZACIONChanging(decimal value);
        partial void OnCOTICOTIZACIONChanged();
        partial void OnDOCUDOCUMENTOChanging(decimal value);
        partial void OnDOCUDOCUMENTOChanged();
        partial void OnDOCOSECUENCIAChanging(decimal value);
        partial void OnDOCOSECUENCIAChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        #endregion

        public PONEDOCUMENTOCOTIZACION()
        {
            this._PONEDOCUMENTO  = default(EntityRef<PONEDOCUMENTO>);
            this._PONECOTIZACION  = default(EntityRef<PONECOTIZACION>);
            OnCreated();
        }

    
        /// <summary>
        /// Codigo de cotizacoin
        /// </summary>
        [Column(Name = @"COTI_COTIZACION", Storage = "_COTICOTIZACION", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal COTICOTIZACION
        {
            get
            {
                return this._COTICOTIZACION;
            }
            set
            {
                if (this._COTICOTIZACION != value)
                {
                    if (this._PONECOTIZACION.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCOTICOTIZACIONChanging(value);
                    this.SendPropertyChanging("COTICOTIZACION");
                    this._COTICOTIZACION = value;
                    this.SendPropertyChanged("COTICOTIZACION");
                    this.OnCOTICOTIZACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Documento adjuntado en la cotizacion
        /// </summary>
        [Column(Name = @"DOCU_DOCUMENTO", Storage = "_DOCUDOCUMENTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal DOCUDOCUMENTO
        {
            get
            {
                return this._DOCUDOCUMENTO;
            }
            set
            {
                if (this._DOCUDOCUMENTO != value)
                {
                    if (this._PONEDOCUMENTO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnDOCUDOCUMENTOChanging(value);
                    this.SendPropertyChanging("DOCUDOCUMENTO");
                    this._DOCUDOCUMENTO = value;
                    this.SendPropertyChanged("DOCUDOCUMENTO");
                    this.OnDOCUDOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// Secuencia de tabla
        /// </summary>
        [Column(Name = @"DOCO_SECUENCIA", Storage = "_DOCOSECUENCIA", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal DOCOSECUENCIA
        {
            get
            {
                return this._DOCOSECUENCIA;
            }
            set
            {
                if (this._DOCOSECUENCIA != value)
                {
                    this.OnDOCOSECUENCIAChanging(value);
                    this.SendPropertyChanging("DOCOSECUENCIA");
                    this._DOCOSECUENCIA = value;
                    this.SendPropertyChanged("DOCOSECUENCIA");
                    this.OnDOCOSECUENCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario campo para auditoria
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDOCUMENTO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEDOCUMENTO_PONEDOCUMENTOCOTIZACION", Storage="_PONEDOCUMENTO", ThisKey="DOCUDOCUMENTO", OtherKey="DOCUDOCUMENTO", IsForeignKey=true)]
        public PONEDOCUMENTO PONEDOCUMENTO
        {
            get
            {
                return this._PONEDOCUMENTO.Entity;
            }
            set
            {
                PONEDOCUMENTO previousValue = this._PONEDOCUMENTO.Entity;
                if ((previousValue != value) || (this._PONEDOCUMENTO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONEDOCUMENTO");
                    if (previousValue != null)
                    {
                        this._PONEDOCUMENTO.Entity = null;
                        previousValue.PONEDOCUMENTOCOTIZACIONs.Remove(this);
                    }
                    this._PONEDOCUMENTO.Entity = value;
                    if (value != null)
                    {
                        this._DOCUDOCUMENTO = value.DOCUDOCUMENTO;
                        value.PONEDOCUMENTOCOTIZACIONs.Add(this);
                    }
                    else
                    {
                        this._DOCUDOCUMENTO = default(decimal);
                    }
                    this.SendPropertyChanged("PONEDOCUMENTO");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONECOTIZACION in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONECOTIZACION_PONEDOCUMENTOCOTIZACION", Storage="_PONECOTIZACION", ThisKey="COTICOTIZACION", OtherKey="COTICOTIZACION", IsForeignKey=true)]
        public PONECOTIZACION PONECOTIZACION
        {
            get
            {
                return this._PONECOTIZACION.Entity;
            }
            set
            {
                PONECOTIZACION previousValue = this._PONECOTIZACION.Entity;
                if ((previousValue != value) || (this._PONECOTIZACION.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONECOTIZACION");
                    if (previousValue != null)
                    {
                        this._PONECOTIZACION.Entity = null;
                        previousValue.PONEDOCUMENTOCOTIZACIONs.Remove(this);
                    }
                    this._PONECOTIZACION.Entity = value;
                    if (value != null)
                    {
                        this._COTICOTIZACION = value.COTICOTIZACION;
                        value.PONEDOCUMENTOCOTIZACIONs.Add(this);
                    }
                    else
                    {
                        this._COTICOTIZACION = default(decimal);
                    }
                    this.SendPropertyChanged("PONECOTIZACION");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Almacena el registro de documentos que se cargan en el portal, esta relacionado 1 a 1 con la tabla blob
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_DOCUMENTO")]
    public partial class PONEDOCUMENTO : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _DOCUDOCUMENTO;

        private string _DOCUNOMBRE;

        private System.DateTime _DOCUFECHACREACION;

        private decimal _CLASTIPODOCUMENTO8;

        private decimal _LOGSUSUARIO;

        private System.DateTime _LOGSFECHA;

        private string _DOCURUTA;

        private string _DOCUCONTENTTYPE;
        #pragma warning restore 0649

        private EntitySet<PONEPROVEEDOR> _PONEPROVEEDORs;

        private EntitySet<PONEHISTDOCPROV> _PONEHISTDOCPROVs;

        private EntitySet<PONEDOCUMENTOSOLICITUD> _PONEDOCUMENTOSOLICITUDs;

        private EntitySet<PONEDOCUMENTODETALLECOT> _PONEDOCUMENTODETALLECOTs;

        private EntitySet<PONEDOCUMENTOCOTIZACION> _PONEDOCUMENTOCOTIZACIONs;

        private EntityRef<POGECLASEVALOR> _POGECLASEVALOR;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnDOCUDOCUMENTOChanging(decimal value);
        partial void OnDOCUDOCUMENTOChanged();
        partial void OnDOCUNOMBREChanging(string value);
        partial void OnDOCUNOMBREChanged();
        partial void OnDOCUFECHACREACIONChanging(System.DateTime value);
        partial void OnDOCUFECHACREACIONChanged();
        partial void OnCLASTIPODOCUMENTO8Changing(decimal value);
        partial void OnCLASTIPODOCUMENTO8Changed();
        partial void OnLOGSUSUARIOChanging(decimal value);
        partial void OnLOGSUSUARIOChanged();
        partial void OnLOGSFECHAChanging(System.DateTime value);
        partial void OnLOGSFECHAChanged();
        partial void OnDOCURUTAChanging(string value);
        partial void OnDOCURUTAChanged();
        partial void OnDOCUCONTENTTYPEChanging(string value);
        partial void OnDOCUCONTENTTYPEChanged();
        #endregion

        public PONEDOCUMENTO()
        {
            this._PONEPROVEEDORs = new EntitySet<PONEPROVEEDOR>(new Action<PONEPROVEEDOR>(this.attach_PONEPROVEEDORs), new Action<PONEPROVEEDOR>(this.detach_PONEPROVEEDORs));
            this._PONEHISTDOCPROVs = new EntitySet<PONEHISTDOCPROV>(new Action<PONEHISTDOCPROV>(this.attach_PONEHISTDOCPROVs), new Action<PONEHISTDOCPROV>(this.detach_PONEHISTDOCPROVs));
            this._PONEDOCUMENTOSOLICITUDs = new EntitySet<PONEDOCUMENTOSOLICITUD>(new Action<PONEDOCUMENTOSOLICITUD>(this.attach_PONEDOCUMENTOSOLICITUDs), new Action<PONEDOCUMENTOSOLICITUD>(this.detach_PONEDOCUMENTOSOLICITUDs));
            this._PONEDOCUMENTODETALLECOTs = new EntitySet<PONEDOCUMENTODETALLECOT>(new Action<PONEDOCUMENTODETALLECOT>(this.attach_PONEDOCUMENTODETALLECOTs), new Action<PONEDOCUMENTODETALLECOT>(this.detach_PONEDOCUMENTODETALLECOTs));
            this._PONEDOCUMENTOCOTIZACIONs = new EntitySet<PONEDOCUMENTOCOTIZACION>(new Action<PONEDOCUMENTOCOTIZACION>(this.attach_PONEDOCUMENTOCOTIZACIONs), new Action<PONEDOCUMENTOCOTIZACION>(this.detach_PONEDOCUMENTOCOTIZACIONs));
            this._POGECLASEVALOR  = default(EntityRef<POGECLASEVALOR>);
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"DOCU_DOCUMENTO", Storage = "_DOCUDOCUMENTO", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal DOCUDOCUMENTO
        {
            get
            {
                return this._DOCUDOCUMENTO;
            }
            set
            {
                if (this._DOCUDOCUMENTO != value)
                {
                    this.OnDOCUDOCUMENTOChanging(value);
                    this.SendPropertyChanging("DOCUDOCUMENTO");
                    this._DOCUDOCUMENTO = value;
                    this.SendPropertyChanged("DOCUDOCUMENTO");
                    this.OnDOCUDOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre del documento (archivo)
        /// </summary>
        [Column(Name = @"DOCU_NOMBRE", Storage = "_DOCUNOMBRE", CanBeNull = false, DbType = "VARCHAR2(150 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DOCUNOMBRE
        {
            get
            {
                return this._DOCUNOMBRE;
            }
            set
            {
                if (this._DOCUNOMBRE != value)
                {
                    this.OnDOCUNOMBREChanging(value);
                    this.SendPropertyChanging("DOCUNOMBRE");
                    this._DOCUNOMBRE = value;
                    this.SendPropertyChanged("DOCUNOMBRE");
                    this.OnDOCUNOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha en que se carga
        /// </summary>
        [Column(Name = @"DOCU_FECHACREACION", Storage = "_DOCUFECHACREACION", CanBeNull = false, DbType = "TIMESTAMP(6) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime DOCUFECHACREACION
        {
            get
            {
                return this._DOCUFECHACREACION;
            }
            set
            {
                if (this._DOCUFECHACREACION != value)
                {
                    this.OnDOCUFECHACREACIONChanging(value);
                    this.SendPropertyChanging("DOCUFECHACREACION");
                    this._DOCUFECHACREACION = value;
                    this.SendPropertyChanged("DOCUFECHACREACION");
                    this.OnDOCUFECHACREACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Tipo de documento (relacion con clasevalor)
        /// </summary>
        [Column(Name = @"CLAS_TIPODOCUMENTO8", Storage = "_CLASTIPODOCUMENTO8", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CLASTIPODOCUMENTO8
        {
            get
            {
                return this._CLASTIPODOCUMENTO8;
            }
            set
            {
                if (this._CLASTIPODOCUMENTO8 != value)
                {
                    if (this._POGECLASEVALOR.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCLASTIPODOCUMENTO8Changing(value);
                    this.SendPropertyChanging("CLASTIPODOCUMENTO8");
                    this._CLASTIPODOCUMENTO8 = value;
                    this.SendPropertyChanged("CLASTIPODOCUMENTO8");
                    this.OnCLASTIPODOCUMENTO8Changed();
                }
            }
        }

    
        /// <summary>
        /// Usuario carga
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha creacion del registro
        /// </summary>
        [Column(Name = @"LOGS_FECHA", Storage = "_LOGSFECHA", CanBeNull = false, DbType = "TIMESTAMP(6) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime LOGSFECHA
        {
            get
            {
                return this._LOGSFECHA;
            }
            set
            {
                if (this._LOGSFECHA != value)
                {
                    this.OnLOGSFECHAChanging(value);
                    this.SendPropertyChanging("LOGSFECHA");
                    this._LOGSFECHA = value;
                    this.SendPropertyChanged("LOGSFECHA");
                    this.OnLOGSFECHAChanged();
                }
            }
        }

    
        /// <summary>
        /// Ruta donde se almacena el documento
        /// </summary>
        [Column(Name = @"DOCU_RUTA", Storage = "_DOCURUTA", CanBeNull = false, DbType = "VARCHAR2(300 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DOCURUTA
        {
            get
            {
                return this._DOCURUTA;
            }
            set
            {
                if (this._DOCURUTA != value)
                {
                    this.OnDOCURUTAChanging(value);
                    this.SendPropertyChanging("DOCURUTA");
                    this._DOCURUTA = value;
                    this.SendPropertyChanged("DOCURUTA");
                    this.OnDOCURUTAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DOCUCONTENTTYPE in the schema.
        /// </summary>
        [Column(Name = @"DOCU_CONTENTTYPE", Storage = "_DOCUCONTENTTYPE", CanBeNull = false, DbType = "VARCHAR2(100 CHAR)", UpdateCheck = UpdateCheck.Never)]
        public string DOCUCONTENTTYPE
        {
            get
            {
                return this._DOCUCONTENTTYPE;
            }
            set
            {
                if (this._DOCUCONTENTTYPE != value)
                {
                    this.OnDOCUCONTENTTYPEChanging(value);
                    this.SendPropertyChanging("DOCUCONTENTTYPE");
                    this._DOCUCONTENTTYPE = value;
                    this.SendPropertyChanged("DOCUCONTENTTYPE");
                    this.OnDOCUCONTENTTYPEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEPROVEEDORs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEDOCUMENTO_PONEPROVEEDOR", Storage="_PONEPROVEEDORs", ThisKey="DOCUDOCUMENTO", OtherKey="PROVPROVEEDOR", LinkTableName=@"PORTAL_NEGOCIOS.PONE_DOCUMENTOPROVEEDOR", LinkThisKey=@"DOCU_DOCUMENTO", LinkOtherKey=@"PROV_PROVEEDOR")]
        public EntitySet<PONEPROVEEDOR> PONEPROVEEDORs
        {
            get
            {
                return this._PONEPROVEEDORs;
            }
            set
            {
                this._PONEPROVEEDORs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEHISTDOCPROVs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEDOCUMENTO_PONEHISTDOCPROV", Storage="_PONEHISTDOCPROVs", ThisKey="DOCUDOCUMENTO", OtherKey="DOCUDOCUMENTO", DeleteRule="NO ACTION")]
        public EntitySet<PONEHISTDOCPROV> PONEHISTDOCPROVs
        {
            get
            {
                return this._PONEHISTDOCPROVs;
            }
            set
            {
                this._PONEHISTDOCPROVs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDOCUMENTOSOLICITUDs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEDOCUMENTO_PONEDOCUMENTOSOLICITUD", Storage="_PONEDOCUMENTOSOLICITUDs", ThisKey="DOCUDOCUMENTO", OtherKey="DOCUDOCUMENTO", DeleteRule="NO ACTION")]
        public EntitySet<PONEDOCUMENTOSOLICITUD> PONEDOCUMENTOSOLICITUDs
        {
            get
            {
                return this._PONEDOCUMENTOSOLICITUDs;
            }
            set
            {
                this._PONEDOCUMENTOSOLICITUDs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDOCUMENTODETALLECOTs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEDOCUMENTO_PONEDOCUMENTODETALLECOT", Storage="_PONEDOCUMENTODETALLECOTs", ThisKey="DOCUDOCUMENTO", OtherKey="DOCUDOCUMENTO", DeleteRule="NO ACTION")]
        public EntitySet<PONEDOCUMENTODETALLECOT> PONEDOCUMENTODETALLECOTs
        {
            get
            {
                return this._PONEDOCUMENTODETALLECOTs;
            }
            set
            {
                this._PONEDOCUMENTODETALLECOTs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDOCUMENTOCOTIZACIONs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEDOCUMENTO_PONEDOCUMENTOCOTIZACION", Storage="_PONEDOCUMENTOCOTIZACIONs", ThisKey="DOCUDOCUMENTO", OtherKey="DOCUDOCUMENTO", DeleteRule="NO ACTION")]
        public EntitySet<PONEDOCUMENTOCOTIZACION> PONEDOCUMENTOCOTIZACIONs
        {
            get
            {
                return this._PONEDOCUMENTOCOTIZACIONs;
            }
            set
            {
                this._PONEDOCUMENTOCOTIZACIONs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for POGECLASEVALOR in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGECLASEVALOR_PONEDOCUMENTO", Storage="_POGECLASEVALOR", ThisKey="CLASTIPODOCUMENTO8", OtherKey="CLVACLASEVALOR", IsForeignKey=true)]
        public POGECLASEVALOR POGECLASEVALOR
        {
            get
            {
                return this._POGECLASEVALOR.Entity;
            }
            set
            {
                POGECLASEVALOR previousValue = this._POGECLASEVALOR.Entity;
                if ((previousValue != value) || (this._POGECLASEVALOR.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("POGECLASEVALOR");
                    if (previousValue != null)
                    {
                        this._POGECLASEVALOR.Entity = null;
                        previousValue.PONEDOCUMENTOs.Remove(this);
                    }
                    this._POGECLASEVALOR.Entity = value;
                    if (value != null)
                    {
                        this._CLASTIPODOCUMENTO8 = value.CLVACLASEVALOR;
                        value.PONEDOCUMENTOs.Add(this);
                    }
                    else
                    {
                        this._CLASTIPODOCUMENTO8 = default(decimal);
                    }
                    this.SendPropertyChanged("POGECLASEVALOR");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_PONEPROVEEDORs(PONEPROVEEDOR entity)
        {
            this.SendPropertyChanging("PONEPROVEEDORs");
            entity.PONEDOCUMENTOs.Add(this);
        }
    
        private void detach_PONEPROVEEDORs(PONEPROVEEDOR entity)
        {
            this.SendPropertyChanging("PONEPROVEEDORs");
            entity.PONEDOCUMENTOs.Remove(this);
        }

        private void attach_PONEHISTDOCPROVs(PONEHISTDOCPROV entity)
        {
            this.SendPropertyChanging("PONEHISTDOCPROVs");
            entity.PONEDOCUMENTO = this;
        }
    
        private void detach_PONEHISTDOCPROVs(PONEHISTDOCPROV entity)
        {
            this.SendPropertyChanging("PONEHISTDOCPROVs");
            entity.PONEDOCUMENTO = null;
        }

        private void attach_PONEDOCUMENTOSOLICITUDs(PONEDOCUMENTOSOLICITUD entity)
        {
            this.SendPropertyChanging("PONEDOCUMENTOSOLICITUDs");
            entity.PONEDOCUMENTO = this;
        }
    
        private void detach_PONEDOCUMENTOSOLICITUDs(PONEDOCUMENTOSOLICITUD entity)
        {
            this.SendPropertyChanging("PONEDOCUMENTOSOLICITUDs");
            entity.PONEDOCUMENTO = null;
        }

        private void attach_PONEDOCUMENTODETALLECOTs(PONEDOCUMENTODETALLECOT entity)
        {
            this.SendPropertyChanging("PONEDOCUMENTODETALLECOTs");
            entity.PONEDOCUMENTO = this;
        }
    
        private void detach_PONEDOCUMENTODETALLECOTs(PONEDOCUMENTODETALLECOT entity)
        {
            this.SendPropertyChanging("PONEDOCUMENTODETALLECOTs");
            entity.PONEDOCUMENTO = null;
        }

        private void attach_PONEDOCUMENTOCOTIZACIONs(PONEDOCUMENTOCOTIZACION entity)
        {
            this.SendPropertyChanging("PONEDOCUMENTOCOTIZACIONs");
            entity.PONEDOCUMENTO = this;
        }
    
        private void detach_PONEDOCUMENTOCOTIZACIONs(PONEDOCUMENTOCOTIZACION entity)
        {
            this.SendPropertyChanging("PONEDOCUMENTOCOTIZACIONs");
            entity.PONEDOCUMENTO = null;
        }
    }

    /// <summary>
    /// Detalle de la tabla pone_solicitud, indica los documentos que deben ser presentados por los proveedores al cotizar.
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_DOCSINVITACION")]
    public partial class PONEDOCSINVITACION : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _SOCOSOLICITUD;

        private decimal _DOCIDOCUMENTO18;

        private decimal _DOCISECUENCIA;

        private decimal? _LOGSUSUARIO;
        #pragma warning restore 0649

        private EntityRef<PONESOLICITUDCOMPRA> _PONESOLICITUDCOMPRA;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnSOCOSOLICITUDChanging(decimal value);
        partial void OnSOCOSOLICITUDChanged();
        partial void OnDOCIDOCUMENTO18Changing(decimal value);
        partial void OnDOCIDOCUMENTO18Changed();
        partial void OnDOCISECUENCIAChanging(decimal value);
        partial void OnDOCISECUENCIAChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        #endregion

        public PONEDOCSINVITACION()
        {
            this._PONESOLICITUDCOMPRA  = default(EntityRef<PONESOLICITUDCOMPRA>);
            OnCreated();
        }

    
        /// <summary>
        /// Codigo de solicitud
        /// </summary>
        [Column(Name = @"SOCO_SOLICITUD", Storage = "_SOCOSOLICITUD", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal SOCOSOLICITUD
        {
            get
            {
                return this._SOCOSOLICITUD;
            }
            set
            {
                if (this._SOCOSOLICITUD != value)
                {
                    if (this._PONESOLICITUDCOMPRA.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnSOCOSOLICITUDChanging(value);
                    this.SendPropertyChanging("SOCOSOLICITUD");
                    this._SOCOSOLICITUD = value;
                    this.SendPropertyChanged("SOCOSOLICITUD");
                    this.OnSOCOSOLICITUDChanged();
                }
            }
        }

    
        /// <summary>
        /// Tipo de documento, valores de la clase 18
        /// </summary>
        [Column(Name = @"DOCI_DOCUMENTO18", Storage = "_DOCIDOCUMENTO18", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal DOCIDOCUMENTO18
        {
            get
            {
                return this._DOCIDOCUMENTO18;
            }
            set
            {
                if (this._DOCIDOCUMENTO18 != value)
                {
                    this.OnDOCIDOCUMENTO18Changing(value);
                    this.SendPropertyChanging("DOCIDOCUMENTO18");
                    this._DOCIDOCUMENTO18 = value;
                    this.SendPropertyChanged("DOCIDOCUMENTO18");
                    this.OnDOCIDOCUMENTO18Changed();
                }
            }
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"DOCI_SECUENCIA", Storage = "_DOCISECUENCIA", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal DOCISECUENCIA
        {
            get
            {
                return this._DOCISECUENCIA;
            }
            set
            {
                if (this._DOCISECUENCIA != value)
                {
                    this.OnDOCISECUENCIAChanging(value);
                    this.SendPropertyChanging("DOCISECUENCIA");
                    this._DOCISECUENCIA = value;
                    this.SendPropertyChanged("DOCISECUENCIA");
                    this.OnDOCISECUENCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario campo de auditoria
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONESOLICITUDCOMPRA in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONESOLICITUDCOMPRA_PONEDOCSINVITACION", Storage="_PONESOLICITUDCOMPRA", ThisKey="SOCOSOLICITUD", OtherKey="SOCOSOLICITUD", IsForeignKey=true)]
        public PONESOLICITUDCOMPRA PONESOLICITUDCOMPRA
        {
            get
            {
                return this._PONESOLICITUDCOMPRA.Entity;
            }
            set
            {
                PONESOLICITUDCOMPRA previousValue = this._PONESOLICITUDCOMPRA.Entity;
                if ((previousValue != value) || (this._PONESOLICITUDCOMPRA.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONESOLICITUDCOMPRA");
                    if (previousValue != null)
                    {
                        this._PONESOLICITUDCOMPRA.Entity = null;
                        previousValue.PONEDOCSINVITACIONs.Remove(this);
                    }
                    this._PONESOLICITUDCOMPRA.Entity = value;
                    if (value != null)
                    {
                        this._SOCOSOLICITUD = value.SOCOSOLICITUD;
                        value.PONEDOCSINVITACIONs.Add(this);
                    }
                    else
                    {
                        this._SOCOSOLICITUD = default(decimal);
                    }
                    this.SendPropertyChanged("PONESOLICITUDCOMPRA");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Detalle de la solicitud, contiene la lista de elementos solicitados, detalle de la tabla pone_solicitud
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_DETALLESOLICITUD")]
    public partial class PONEDETALLESOLICITUD : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _DESODETALLESOLICITUD;

        private double? _DESOCANTIDAD;

        private string _DESOCARACTERISTICAS;

        private decimal _SOCOSOLICITUD;

        private decimal _CATACATALOGO;

        private decimal? _LOGSUSUARIO;
        #pragma warning restore 0649

        private EntityRef<PONESOLICITUDCOMPRA> _PONESOLICITUDCOMPRA;

        private EntityRef<PONECATALOGO> _PONECATALOGO;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnDESODETALLESOLICITUDChanging(decimal value);
        partial void OnDESODETALLESOLICITUDChanged();
        partial void OnDESOCANTIDADChanging(double? value);
        partial void OnDESOCANTIDADChanged();
        partial void OnDESOCARACTERISTICASChanging(string value);
        partial void OnDESOCARACTERISTICASChanged();
        partial void OnSOCOSOLICITUDChanging(decimal value);
        partial void OnSOCOSOLICITUDChanged();
        partial void OnCATACATALOGOChanging(decimal value);
        partial void OnCATACATALOGOChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        #endregion

        public PONEDETALLESOLICITUD()
        {
            this._PONESOLICITUDCOMPRA  = default(EntityRef<PONESOLICITUDCOMPRA>);
            this._PONECATALOGO  = default(EntityRef<PONECATALOGO>);
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia detalle solicitud
        /// </summary>
        [Column(Name = @"DESO_DETALLESOLICITUD", Storage = "_DESODETALLESOLICITUD", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal DESODETALLESOLICITUD
        {
            get
            {
                return this._DESODETALLESOLICITUD;
            }
            set
            {
                if (this._DESODETALLESOLICITUD != value)
                {
                    this.OnDESODETALLESOLICITUDChanging(value);
                    this.SendPropertyChanging("DESODETALLESOLICITUD");
                    this._DESODETALLESOLICITUD = value;
                    this.SendPropertyChanged("DESODETALLESOLICITUD");
                    this.OnDESODETALLESOLICITUDChanged();
                }
            }
        }

    
        /// <summary>
        /// Cantidad del elementos solicitados
        /// </summary>
        [Column(Name = @"DESO_CANTIDAD", Storage = "_DESOCANTIDAD", DbType = "NUMBER(12,2) NULL", UpdateCheck = UpdateCheck.Never)]
        public double? DESOCANTIDAD
        {
            get
            {
                return this._DESOCANTIDAD;
            }
            set
            {
                if (this._DESOCANTIDAD != value)
                {
                    this.OnDESOCANTIDADChanging(value);
                    this.SendPropertyChanging("DESOCANTIDAD");
                    this._DESOCANTIDAD = value;
                    this.SendPropertyChanged("DESOCANTIDAD");
                    this.OnDESOCANTIDADChanged();
                }
            }
        }

    
        /// <summary>
        /// Caracteristicas del elemento solicitado
        /// </summary>
        [Column(Name = @"DESO_CARACTERISTICAS", Storage = "_DESOCARACTERISTICAS", DbType = "VARCHAR2(2000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESOCARACTERISTICAS
        {
            get
            {
                return this._DESOCARACTERISTICAS;
            }
            set
            {
                if (this._DESOCARACTERISTICAS != value)
                {
                    this.OnDESOCARACTERISTICASChanging(value);
                    this.SendPropertyChanging("DESOCARACTERISTICAS");
                    this._DESOCARACTERISTICAS = value;
                    this.SendPropertyChanged("DESOCARACTERISTICAS");
                    this.OnDESOCARACTERISTICASChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de la solciitud
        /// </summary>
        [Column(Name = @"SOCO_SOLICITUD", Storage = "_SOCOSOLICITUD", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal SOCOSOLICITUD
        {
            get
            {
                return this._SOCOSOLICITUD;
            }
            set
            {
                if (this._SOCOSOLICITUD != value)
                {
                    if (this._PONESOLICITUDCOMPRA.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnSOCOSOLICITUDChanging(value);
                    this.SendPropertyChanging("SOCOSOLICITUD");
                    this._SOCOSOLICITUD = value;
                    this.SendPropertyChanged("SOCOSOLICITUD");
                    this.OnSOCOSOLICITUDChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de catalogo
        /// </summary>
        [Column(Name = @"CATA_CATALOGO", Storage = "_CATACATALOGO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CATACATALOGO
        {
            get
            {
                return this._CATACATALOGO;
            }
            set
            {
                if (this._CATACATALOGO != value)
                {
                    if (this._PONECATALOGO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCATACATALOGOChanging(value);
                    this.SendPropertyChanging("CATACATALOGO");
                    this._CATACATALOGO = value;
                    this.SendPropertyChanged("CATACATALOGO");
                    this.OnCATACATALOGOChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario campo para auditoria
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONESOLICITUDCOMPRA in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONESOLICITUDCOMPRA_PONEDETALLESOLICITUD", Storage="_PONESOLICITUDCOMPRA", ThisKey="SOCOSOLICITUD", OtherKey="SOCOSOLICITUD", IsForeignKey=true)]
        public PONESOLICITUDCOMPRA PONESOLICITUDCOMPRA
        {
            get
            {
                return this._PONESOLICITUDCOMPRA.Entity;
            }
            set
            {
                PONESOLICITUDCOMPRA previousValue = this._PONESOLICITUDCOMPRA.Entity;
                if ((previousValue != value) || (this._PONESOLICITUDCOMPRA.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONESOLICITUDCOMPRA");
                    if (previousValue != null)
                    {
                        this._PONESOLICITUDCOMPRA.Entity = null;
                        previousValue.PONEDETALLESOLICITUDs.Remove(this);
                    }
                    this._PONESOLICITUDCOMPRA.Entity = value;
                    if (value != null)
                    {
                        this._SOCOSOLICITUD = value.SOCOSOLICITUD;
                        value.PONEDETALLESOLICITUDs.Add(this);
                    }
                    else
                    {
                        this._SOCOSOLICITUD = default(decimal);
                    }
                    this.SendPropertyChanged("PONESOLICITUDCOMPRA");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONECATALOGO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONECATALOGO_PONEDETALLESOLICITUD", Storage="_PONECATALOGO", ThisKey="CATACATALOGO", OtherKey="CATACATALOGO", IsForeignKey=true)]
        public PONECATALOGO PONECATALOGO
        {
            get
            {
                return this._PONECATALOGO.Entity;
            }
            set
            {
                PONECATALOGO previousValue = this._PONECATALOGO.Entity;
                if ((previousValue != value) || (this._PONECATALOGO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONECATALOGO");
                    if (previousValue != null)
                    {
                        this._PONECATALOGO.Entity = null;
                        previousValue.PONEDETALLESOLICITUDs.Remove(this);
                    }
                    this._PONECATALOGO.Entity = value;
                    if (value != null)
                    {
                        this._CATACATALOGO = value.CATACATALOGO;
                        value.PONEDETALLESOLICITUDs.Add(this);
                    }
                    else
                    {
                        this._CATACATALOGO = default(decimal);
                    }
                    this.SendPropertyChanged("PONECATALOGO");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Detalle de los elementos o servicios cotizados, detalle de la tabla pone_cotizacion
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_DETALLECOTIZACION")]
    public partial class PONEDETALLECOTIZACION : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _DECODETALLE;

        private decimal? _DECOCANTIDAD;

        private long? _DECOVALORIVA;

        private long? _DECOVALORUNITARIO;

        private decimal _CATACATALOGO;

        private decimal _COTICOTIZACION;

        private double? _DECOPORCIVA;

        private decimal? _LOGSUSUARIO;
        #pragma warning restore 0649

        private EntitySet<PONEDOCUMENTODETALLECOT> _PONEDOCUMENTODETALLECOTs;

        private EntityRef<PONECATALOGO> _PONECATALOGO;

        private EntityRef<PONECOTIZACION> _PONECOTIZACION;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnDECODETALLEChanging(decimal value);
        partial void OnDECODETALLEChanged();
        partial void OnDECOCANTIDADChanging(decimal? value);
        partial void OnDECOCANTIDADChanged();
        partial void OnDECOVALORIVAChanging(long? value);
        partial void OnDECOVALORIVAChanged();
        partial void OnDECOVALORUNITARIOChanging(long? value);
        partial void OnDECOVALORUNITARIOChanged();
        partial void OnCATACATALOGOChanging(decimal value);
        partial void OnCATACATALOGOChanged();
        partial void OnCOTICOTIZACIONChanging(decimal value);
        partial void OnCOTICOTIZACIONChanged();
        partial void OnDECOPORCIVAChanging(double? value);
        partial void OnDECOPORCIVAChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        #endregion

        public PONEDETALLECOTIZACION()
        {
            this._PONEDOCUMENTODETALLECOTs = new EntitySet<PONEDOCUMENTODETALLECOT>(new Action<PONEDOCUMENTODETALLECOT>(this.attach_PONEDOCUMENTODETALLECOTs), new Action<PONEDOCUMENTODETALLECOT>(this.detach_PONEDOCUMENTODETALLECOTs));
            this._PONECATALOGO  = default(EntityRef<PONECATALOGO>);
            this._PONECOTIZACION  = default(EntityRef<PONECOTIZACION>);
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"DECO_DETALLE", Storage = "_DECODETALLE", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal DECODETALLE
        {
            get
            {
                return this._DECODETALLE;
            }
            set
            {
                if (this._DECODETALLE != value)
                {
                    this.OnDECODETALLEChanging(value);
                    this.SendPropertyChanging("DECODETALLE");
                    this._DECODETALLE = value;
                    this.SendPropertyChanged("DECODETALLE");
                    this.OnDECODETALLEChanged();
                }
            }
        }

    
        /// <summary>
        /// Cantidad del elelmento
        /// </summary>
        [Column(Name = @"DECO_CANTIDAD", Storage = "_DECOCANTIDAD", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? DECOCANTIDAD
        {
            get
            {
                return this._DECOCANTIDAD;
            }
            set
            {
                if (this._DECOCANTIDAD != value)
                {
                    this.OnDECOCANTIDADChanging(value);
                    this.SendPropertyChanging("DECOCANTIDAD");
                    this._DECOCANTIDAD = value;
                    this.SendPropertyChanged("DECOCANTIDAD");
                    this.OnDECOCANTIDADChanged();
                }
            }
        }

    
        /// <summary>
        /// Valor de iva
        /// </summary>
        [Column(Name = @"DECO_VALORIVA", Storage = "_DECOVALORIVA", DbType = "NUMBER(10) NULL", UpdateCheck = UpdateCheck.Never)]
        public long? DECOVALORIVA
        {
            get
            {
                return this._DECOVALORIVA;
            }
            set
            {
                if (this._DECOVALORIVA != value)
                {
                    this.OnDECOVALORIVAChanging(value);
                    this.SendPropertyChanging("DECOVALORIVA");
                    this._DECOVALORIVA = value;
                    this.SendPropertyChanged("DECOVALORIVA");
                    this.OnDECOVALORIVAChanged();
                }
            }
        }

    
        /// <summary>
        /// Valor unitario
        /// </summary>
        [Column(Name = @"DECO_VALORUNITARIO", Storage = "_DECOVALORUNITARIO", DbType = "NUMBER(12) NULL", UpdateCheck = UpdateCheck.Never)]
        public long? DECOVALORUNITARIO
        {
            get
            {
                return this._DECOVALORUNITARIO;
            }
            set
            {
                if (this._DECOVALORUNITARIO != value)
                {
                    this.OnDECOVALORUNITARIOChanging(value);
                    this.SendPropertyChanging("DECOVALORUNITARIO");
                    this._DECOVALORUNITARIO = value;
                    this.SendPropertyChanged("DECOVALORUNITARIO");
                    this.OnDECOVALORUNITARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de catalogo elemento o servicio
        /// </summary>
        [Column(Name = @"CATA_CATALOGO", Storage = "_CATACATALOGO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CATACATALOGO
        {
            get
            {
                return this._CATACATALOGO;
            }
            set
            {
                if (this._CATACATALOGO != value)
                {
                    if (this._PONECATALOGO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCATACATALOGOChanging(value);
                    this.SendPropertyChanging("CATACATALOGO");
                    this._CATACATALOGO = value;
                    this.SendPropertyChanged("CATACATALOGO");
                    this.OnCATACATALOGOChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de la cotizacion
        /// </summary>
        [Column(Name = @"COTI_COTIZACION", Storage = "_COTICOTIZACION", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal COTICOTIZACION
        {
            get
            {
                return this._COTICOTIZACION;
            }
            set
            {
                if (this._COTICOTIZACION != value)
                {
                    if (this._PONECOTIZACION.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCOTICOTIZACIONChanging(value);
                    this.SendPropertyChanging("COTICOTIZACION");
                    this._COTICOTIZACION = value;
                    this.SendPropertyChanged("COTICOTIZACION");
                    this.OnCOTICOTIZACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Porcentaje de IVA del articulo
        /// </summary>
        [Column(Name = @"DECO_PORCIVA", Storage = "_DECOPORCIVA", DbType = "NUMBER(4,2) NULL", UpdateCheck = UpdateCheck.Never)]
        public double? DECOPORCIVA
        {
            get
            {
                return this._DECOPORCIVA;
            }
            set
            {
                if (this._DECOPORCIVA != value)
                {
                    this.OnDECOPORCIVAChanging(value);
                    this.SendPropertyChanging("DECOPORCIVA");
                    this._DECOPORCIVA = value;
                    this.SendPropertyChanged("DECOPORCIVA");
                    this.OnDECOPORCIVAChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario campo para auditoria
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDOCUMENTODETALLECOTs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEDETALLECOTIZACION_PONEDOCUMENTODETALLECOT", Storage="_PONEDOCUMENTODETALLECOTs", ThisKey="DECODETALLE", OtherKey="DECODETALLE", DeleteRule="NO ACTION")]
        public EntitySet<PONEDOCUMENTODETALLECOT> PONEDOCUMENTODETALLECOTs
        {
            get
            {
                return this._PONEDOCUMENTODETALLECOTs;
            }
            set
            {
                this._PONEDOCUMENTODETALLECOTs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONECATALOGO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONECATALOGO_PONEDETALLECOTIZACION", Storage="_PONECATALOGO", ThisKey="CATACATALOGO", OtherKey="CATACATALOGO", IsForeignKey=true)]
        public PONECATALOGO PONECATALOGO
        {
            get
            {
                return this._PONECATALOGO.Entity;
            }
            set
            {
                PONECATALOGO previousValue = this._PONECATALOGO.Entity;
                if ((previousValue != value) || (this._PONECATALOGO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONECATALOGO");
                    if (previousValue != null)
                    {
                        this._PONECATALOGO.Entity = null;
                        previousValue.PONEDETALLECOTIZACIONs.Remove(this);
                    }
                    this._PONECATALOGO.Entity = value;
                    if (value != null)
                    {
                        this._CATACATALOGO = value.CATACATALOGO;
                        value.PONEDETALLECOTIZACIONs.Add(this);
                    }
                    else
                    {
                        this._CATACATALOGO = default(decimal);
                    }
                    this.SendPropertyChanged("PONECATALOGO");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONECOTIZACION in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONECOTIZACION_PONEDETALLECOTIZACION", Storage="_PONECOTIZACION", ThisKey="COTICOTIZACION", OtherKey="COTICOTIZACION", IsForeignKey=true)]
        public PONECOTIZACION PONECOTIZACION
        {
            get
            {
                return this._PONECOTIZACION.Entity;
            }
            set
            {
                PONECOTIZACION previousValue = this._PONECOTIZACION.Entity;
                if ((previousValue != value) || (this._PONECOTIZACION.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONECOTIZACION");
                    if (previousValue != null)
                    {
                        this._PONECOTIZACION.Entity = null;
                        previousValue.PONEDETALLECOTIZACIONs.Remove(this);
                    }
                    this._PONECOTIZACION.Entity = value;
                    if (value != null)
                    {
                        this._COTICOTIZACION = value.COTICOTIZACION;
                        value.PONEDETALLECOTIZACIONs.Add(this);
                    }
                    else
                    {
                        this._COTICOTIZACION = default(decimal);
                    }
                    this.SendPropertyChanged("PONECOTIZACION");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_PONEDOCUMENTODETALLECOTs(PONEDOCUMENTODETALLECOT entity)
        {
            this.SendPropertyChanging("PONEDOCUMENTODETALLECOTs");
            entity.PONEDETALLECOTIZACION = this;
        }
    
        private void detach_PONEDOCUMENTODETALLECOTs(PONEDOCUMENTODETALLECOT entity)
        {
            this.SendPropertyChanging("PONEDOCUMENTODETALLECOTs");
            entity.PONEDETALLECOTIZACION = null;
        }
    }

    /// <summary>
    /// Detalle de Configuracion de archivo
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_DETALLECONFARCHIVO")]
    public partial class PONEDETALLECONFARCHIVO : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _DECFDECF;

        private string _DECFCELDA;

        private string _DECFVALOR;

        private string _DECFFORMULA;

        private string _DECFESTILO;

        private string _DECFCOLOR;

        private decimal? _CONFCONF;

        private int? _DECFHOJA;

        private string _DECFERROR;

        private string _DECFVALIDAR;

        private string _DECFGUARDAR;
        #pragma warning restore 0649

        private EntityRef<PONECONFARCHIVO> _PONECONFARCHIVO;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnDECFDECFChanging(decimal value);
        partial void OnDECFDECFChanged();
        partial void OnDECFCELDAChanging(string value);
        partial void OnDECFCELDAChanged();
        partial void OnDECFVALORChanging(string value);
        partial void OnDECFVALORChanged();
        partial void OnDECFFORMULAChanging(string value);
        partial void OnDECFFORMULAChanged();
        partial void OnDECFESTILOChanging(string value);
        partial void OnDECFESTILOChanged();
        partial void OnDECFCOLORChanging(string value);
        partial void OnDECFCOLORChanged();
        partial void OnCONFCONFChanging(decimal? value);
        partial void OnCONFCONFChanged();
        partial void OnDECFHOJAChanging(int? value);
        partial void OnDECFHOJAChanged();
        partial void OnDECFERRORChanging(string value);
        partial void OnDECFERRORChanged();
        partial void OnDECFVALIDARChanging(string value);
        partial void OnDECFVALIDARChanged();
        partial void OnDECFGUARDARChanging(string value);
        partial void OnDECFGUARDARChanged();
        #endregion

        public PONEDETALLECONFARCHIVO()
        {
            this._PONECONFARCHIVO  = default(EntityRef<PONECONFARCHIVO>);
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"DECF_DECF", Storage = "_DECFDECF", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal DECFDECF
        {
            get
            {
                return this._DECFDECF;
            }
            set
            {
                if (this._DECFDECF != value)
                {
                    this.OnDECFDECFChanging(value);
                    this.SendPropertyChanging("DECFDECF");
                    this._DECFDECF = value;
                    this.SendPropertyChanged("DECFDECF");
                    this.OnDECFDECFChanged();
                }
            }
        }

    
        /// <summary>
        /// Celda del archivo
        /// </summary>
        [Column(Name = @"DECF_CELDA", Storage = "_DECFCELDA", CanBeNull = false, DbType = "VARCHAR2(10 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DECFCELDA
        {
            get
            {
                return this._DECFCELDA;
            }
            set
            {
                if (this._DECFCELDA != value)
                {
                    this.OnDECFCELDAChanging(value);
                    this.SendPropertyChanging("DECFCELDA");
                    this._DECFCELDA = value;
                    this.SendPropertyChanged("DECFCELDA");
                    this.OnDECFCELDAChanged();
                }
            }
        }

    
        /// <summary>
        /// Valor de la celda
        /// </summary>
        [Column(Name = @"DECF_VALOR", Storage = "_DECFVALOR", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DECFVALOR
        {
            get
            {
                return this._DECFVALOR;
            }
            set
            {
                if (this._DECFVALOR != value)
                {
                    this.OnDECFVALORChanging(value);
                    this.SendPropertyChanging("DECFVALOR");
                    this._DECFVALOR = value;
                    this.SendPropertyChanged("DECFVALOR");
                    this.OnDECFVALORChanged();
                }
            }
        }

    
        /// <summary>
        /// Formula de la celda
        /// </summary>
        [Column(Name = @"DECF_FORMULA", Storage = "_DECFFORMULA", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DECFFORMULA
        {
            get
            {
                return this._DECFFORMULA;
            }
            set
            {
                if (this._DECFFORMULA != value)
                {
                    this.OnDECFFORMULAChanging(value);
                    this.SendPropertyChanging("DECFFORMULA");
                    this._DECFFORMULA = value;
                    this.SendPropertyChanged("DECFFORMULA");
                    this.OnDECFFORMULAChanged();
                }
            }
        }

    
        /// <summary>
        /// Estilo de la celda
        /// </summary>
        [Column(Name = @"DECF_ESTILO", Storage = "_DECFESTILO", DbType = "VARCHAR2(200 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DECFESTILO
        {
            get
            {
                return this._DECFESTILO;
            }
            set
            {
                if (this._DECFESTILO != value)
                {
                    this.OnDECFESTILOChanging(value);
                    this.SendPropertyChanging("DECFESTILO");
                    this._DECFESTILO = value;
                    this.SendPropertyChanged("DECFESTILO");
                    this.OnDECFESTILOChanged();
                }
            }
        }

    
        /// <summary>
        /// Color de la celda
        /// </summary>
        [Column(Name = @"DECF_COLOR", Storage = "_DECFCOLOR", DbType = "VARCHAR2(20 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DECFCOLOR
        {
            get
            {
                return this._DECFCOLOR;
            }
            set
            {
                if (this._DECFCOLOR != value)
                {
                    this.OnDECFCOLORChanging(value);
                    this.SendPropertyChanging("DECFCOLOR");
                    this._DECFCOLOR = value;
                    this.SendPropertyChanged("DECFCOLOR");
                    this.OnDECFCOLORChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CONFCONF in the schema.
        /// </summary>
        [Column(Name = @"CONF_CONF", Storage = "_CONFCONF", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? CONFCONF
        {
            get
            {
                return this._CONFCONF;
            }
            set
            {
                if (this._CONFCONF != value)
                {
                    if (this._PONECONFARCHIVO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCONFCONFChanging(value);
                    this.SendPropertyChanging("CONFCONF");
                    this._CONFCONF = value;
                    this.SendPropertyChanged("CONFCONF");
                    this.OnCONFCONFChanged();
                }
            }
        }

    
        /// <summary>
        /// Numero de Hoja en Excel
        /// </summary>
        [Column(Name = @"DECF_HOJA", Storage = "_DECFHOJA", DbType = "NUMBER(2) NULL", UpdateCheck = UpdateCheck.Never)]
        public int? DECFHOJA
        {
            get
            {
                return this._DECFHOJA;
            }
            set
            {
                if (this._DECFHOJA != value)
                {
                    this.OnDECFHOJAChanging(value);
                    this.SendPropertyChanging("DECFHOJA");
                    this._DECFHOJA = value;
                    this.SendPropertyChanged("DECFHOJA");
                    this.OnDECFHOJAChanged();
                }
            }
        }

    
        /// <summary>
        /// Mensaje de Error si no pasa la validacion
        /// </summary>
        [Column(Name = @"DECF_ERROR", Storage = "_DECFERROR", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DECFERROR
        {
            get
            {
                return this._DECFERROR;
            }
            set
            {
                if (this._DECFERROR != value)
                {
                    this.OnDECFERRORChanging(value);
                    this.SendPropertyChanging("DECFERROR");
                    this._DECFERROR = value;
                    this.SendPropertyChanged("DECFERROR");
                    this.OnDECFERRORChanged();
                }
            }
        }

    
        /// <summary>
        /// Validar celda S o N
        /// </summary>
        [Column(Name = @"DECF_VALIDAR", Storage = "_DECFVALIDAR", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DECFVALIDAR
        {
            get
            {
                return this._DECFVALIDAR;
            }
            set
            {
                if (this._DECFVALIDAR != value)
                {
                    this.OnDECFVALIDARChanging(value);
                    this.SendPropertyChanging("DECFVALIDAR");
                    this._DECFVALIDAR = value;
                    this.SendPropertyChanged("DECFVALIDAR");
                    this.OnDECFVALIDARChanged();
                }
            }
        }

    
        /// <summary>
        /// Guardar el valor en BD S o N
        /// </summary>
        [Column(Name = @"DECF_GUARDAR", Storage = "_DECFGUARDAR", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DECFGUARDAR
        {
            get
            {
                return this._DECFGUARDAR;
            }
            set
            {
                if (this._DECFGUARDAR != value)
                {
                    this.OnDECFGUARDARChanging(value);
                    this.SendPropertyChanging("DECFGUARDAR");
                    this._DECFGUARDAR = value;
                    this.SendPropertyChanged("DECFGUARDAR");
                    this.OnDECFGUARDARChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONECONFARCHIVO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONECONFARCHIVO_PONEDETALLECONFARCHIVO", Storage="_PONECONFARCHIVO", ThisKey="CONFCONF", OtherKey="CONFCONF", IsForeignKey=true)]
        public PONECONFARCHIVO PONECONFARCHIVO
        {
            get
            {
                return this._PONECONFARCHIVO.Entity;
            }
            set
            {
                PONECONFARCHIVO previousValue = this._PONECONFARCHIVO.Entity;
                if ((previousValue != value) || (this._PONECONFARCHIVO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONECONFARCHIVO");
                    if (previousValue != null)
                    {
                        this._PONECONFARCHIVO.Entity = null;
                        previousValue.PONEDETALLECONFARCHIVOs.Remove(this);
                    }
                    this._PONECONFARCHIVO.Entity = value;
                    if (value != null)
                    {
                        this._CONFCONF = value.CONFCONF;
                        value.PONEDETALLECONFARCHIVOs.Add(this);
                    }
                    else
                    {
                        this._CONFCONF = default(decimal?);
                    }
                    this.SendPropertyChanged("PONECONFARCHIVO");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Identificación de los accionistas que tengan directa o indirectamente más del 5% del capital social, aporte o participación (en caso de requerirse mas espacios debe anexarse la relación)
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_DETALLEACCIONISTAS")]
    public partial class PONEDETALLEACCIONISTA : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _DEACSECUENCIA;

        private decimal _PROVPROVEEDOR;

        private string _DEACNOMBRE;

        private decimal _CLASTIPOIDENTIFICACION;

        private string _DEACIDENTIFICACION;

        private double? _DEACPORCENTAJE;

        private decimal? _LOGSUSUARIO;
        #pragma warning restore 0649

        private EntityRef<PONEPROVEEDOR> _PONEPROVEEDOR;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnDEACSECUENCIAChanging(decimal value);
        partial void OnDEACSECUENCIAChanged();
        partial void OnPROVPROVEEDORChanging(decimal value);
        partial void OnPROVPROVEEDORChanged();
        partial void OnDEACNOMBREChanging(string value);
        partial void OnDEACNOMBREChanged();
        partial void OnCLASTIPOIDENTIFICACIONChanging(decimal value);
        partial void OnCLASTIPOIDENTIFICACIONChanged();
        partial void OnDEACIDENTIFICACIONChanging(string value);
        partial void OnDEACIDENTIFICACIONChanged();
        partial void OnDEACPORCENTAJEChanging(double? value);
        partial void OnDEACPORCENTAJEChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        #endregion

        public PONEDETALLEACCIONISTA()
        {
            this._PONEPROVEEDOR  = default(EntityRef<PONEPROVEEDOR>);
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"DEAC_SECUENCIA", Storage = "_DEACSECUENCIA", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal DEACSECUENCIA
        {
            get
            {
                return this._DEACSECUENCIA;
            }
            set
            {
                if (this._DEACSECUENCIA != value)
                {
                    this.OnDEACSECUENCIAChanging(value);
                    this.SendPropertyChanging("DEACSECUENCIA");
                    this._DEACSECUENCIA = value;
                    this.SendPropertyChanged("DEACSECUENCIA");
                    this.OnDEACSECUENCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo del proveedor
        /// </summary>
        [Column(Name = @"PROV_PROVEEDOR", Storage = "_PROVPROVEEDOR", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal PROVPROVEEDOR
        {
            get
            {
                return this._PROVPROVEEDOR;
            }
            set
            {
                if (this._PROVPROVEEDOR != value)
                {
                    if (this._PONEPROVEEDOR.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnPROVPROVEEDORChanging(value);
                    this.SendPropertyChanging("PROVPROVEEDOR");
                    this._PROVPROVEEDOR = value;
                    this.SendPropertyChanged("PROVPROVEEDOR");
                    this.OnPROVPROVEEDORChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre o razon social del accionista
        /// </summary>
        [Column(Name = @"DEAC_NOMBRE", Storage = "_DEACNOMBRE", CanBeNull = false, DbType = "VARCHAR2(60 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEACNOMBRE
        {
            get
            {
                return this._DEACNOMBRE;
            }
            set
            {
                if (this._DEACNOMBRE != value)
                {
                    this.OnDEACNOMBREChanging(value);
                    this.SendPropertyChanging("DEACNOMBRE");
                    this._DEACNOMBRE = value;
                    this.SendPropertyChanged("DEACNOMBRE");
                    this.OnDEACNOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// Tipo de identificacion, origen parametros
        /// </summary>
        [Column(Name = @"CLAS_TIPOIDENTIFICACION", Storage = "_CLASTIPOIDENTIFICACION", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CLASTIPOIDENTIFICACION
        {
            get
            {
                return this._CLASTIPOIDENTIFICACION;
            }
            set
            {
                if (this._CLASTIPOIDENTIFICACION != value)
                {
                    this.OnCLASTIPOIDENTIFICACIONChanging(value);
                    this.SendPropertyChanging("CLASTIPOIDENTIFICACION");
                    this._CLASTIPOIDENTIFICACION = value;
                    this.SendPropertyChanged("CLASTIPOIDENTIFICACION");
                    this.OnCLASTIPOIDENTIFICACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Identificacion del accionista
        /// </summary>
        [Column(Name = @"DEAC_IDENTIFICACION", Storage = "_DEACIDENTIFICACION", CanBeNull = false, DbType = "VARCHAR2(12 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEACIDENTIFICACION
        {
            get
            {
                return this._DEACIDENTIFICACION;
            }
            set
            {
                if (this._DEACIDENTIFICACION != value)
                {
                    this.OnDEACIDENTIFICACIONChanging(value);
                    this.SendPropertyChanging("DEACIDENTIFICACION");
                    this._DEACIDENTIFICACION = value;
                    this.SendPropertyChanged("DEACIDENTIFICACION");
                    this.OnDEACIDENTIFICACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Porcentaje de participacion del accionista
        /// </summary>
        [Column(Name = @"DEAC_PORCENTAJE", Storage = "_DEACPORCENTAJE", DbType = "NUMBER(5,2) NULL", UpdateCheck = UpdateCheck.Never)]
        public double? DEACPORCENTAJE
        {
            get
            {
                return this._DEACPORCENTAJE;
            }
            set
            {
                if (this._DEACPORCENTAJE != value)
                {
                    this.OnDEACPORCENTAJEChanging(value);
                    this.SendPropertyChanging("DEACPORCENTAJE");
                    this._DEACPORCENTAJE = value;
                    this.SendPropertyChanged("DEACPORCENTAJE");
                    this.OnDEACPORCENTAJEChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario campo para auditoria
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEPROVEEDOR in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEPROVEEDOR_PONEDETALLEACCIONISTA", Storage="_PONEPROVEEDOR", ThisKey="PROVPROVEEDOR", OtherKey="PROVPROVEEDOR", IsForeignKey=true)]
        public PONEPROVEEDOR PONEPROVEEDOR
        {
            get
            {
                return this._PONEPROVEEDOR.Entity;
            }
            set
            {
                PONEPROVEEDOR previousValue = this._PONEPROVEEDOR.Entity;
                if ((previousValue != value) || (this._PONEPROVEEDOR.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONEPROVEEDOR");
                    if (previousValue != null)
                    {
                        this._PONEPROVEEDOR.Entity = null;
                        previousValue.PONEDETALLEACCIONISTAs.Remove(this);
                    }
                    this._PONEPROVEEDOR.Entity = value;
                    if (value != null)
                    {
                        this._PROVPROVEEDOR = value.PROVPROVEEDOR;
                        value.PONEDETALLEACCIONISTAs.Add(this);
                    }
                    else
                    {
                        this._PROVPROVEEDOR = default(decimal);
                    }
                    this.SendPropertyChanged("PONEPROVEEDOR");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for Negocio.Data.PONEDETAFORMATOXPROVEEDOR in the schema.
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_DETAFORMATOXPROVEEDOR")]
    public partial class PONEDETAFORMATOXPROVEEDOR : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _DEFODEFO;

        private decimal _DEFOHOJA;

        private string _DEFOCELDA;

        private string _DEFOVALOR;

        private decimal? _FOPRFOPR;
        #pragma warning restore 0649

        private EntityRef<PONEFORMATOXPROVEEDOR> _PONEFORMATOXPROVEEDOR;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnDEFODEFOChanging(decimal value);
        partial void OnDEFODEFOChanged();
        partial void OnDEFOHOJAChanging(decimal value);
        partial void OnDEFOHOJAChanged();
        partial void OnDEFOCELDAChanging(string value);
        partial void OnDEFOCELDAChanged();
        partial void OnDEFOVALORChanging(string value);
        partial void OnDEFOVALORChanged();
        partial void OnFOPRFOPRChanging(decimal? value);
        partial void OnFOPRFOPRChanged();
        #endregion

        public PONEDETAFORMATOXPROVEEDOR()
        {
            this._PONEFORMATOXPROVEEDOR  = default(EntityRef<PONEFORMATOXPROVEEDOR>);
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"DEFO_DEFO", Storage = "_DEFODEFO", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal DEFODEFO
        {
            get
            {
                return this._DEFODEFO;
            }
            set
            {
                if (this._DEFODEFO != value)
                {
                    this.OnDEFODEFOChanging(value);
                    this.SendPropertyChanging("DEFODEFO");
                    this._DEFODEFO = value;
                    this.SendPropertyChanged("DEFODEFO");
                    this.OnDEFODEFOChanged();
                }
            }
        }

    
        /// <summary>
        /// Numero de Hoja
        /// </summary>
        [Column(Name = @"DEFO_HOJA", Storage = "_DEFOHOJA", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal DEFOHOJA
        {
            get
            {
                return this._DEFOHOJA;
            }
            set
            {
                if (this._DEFOHOJA != value)
                {
                    this.OnDEFOHOJAChanging(value);
                    this.SendPropertyChanging("DEFOHOJA");
                    this._DEFOHOJA = value;
                    this.SendPropertyChanged("DEFOHOJA");
                    this.OnDEFOHOJAChanged();
                }
            }
        }

    
        /// <summary>
        /// Celda
        /// </summary>
        [Column(Name = @"DEFO_CELDA", Storage = "_DEFOCELDA", CanBeNull = false, DbType = "VARCHAR2(20 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEFOCELDA
        {
            get
            {
                return this._DEFOCELDA;
            }
            set
            {
                if (this._DEFOCELDA != value)
                {
                    this.OnDEFOCELDAChanging(value);
                    this.SendPropertyChanging("DEFOCELDA");
                    this._DEFOCELDA = value;
                    this.SendPropertyChanged("DEFOCELDA");
                    this.OnDEFOCELDAChanged();
                }
            }
        }

    
        /// <summary>
        /// Valor de la celda
        /// </summary>
        [Column(Name = @"DEFO_VALOR", Storage = "_DEFOVALOR", CanBeNull = false, DbType = "VARCHAR2(255 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEFOVALOR
        {
            get
            {
                return this._DEFOVALOR;
            }
            set
            {
                if (this._DEFOVALOR != value)
                {
                    this.OnDEFOVALORChanging(value);
                    this.SendPropertyChanging("DEFOVALOR");
                    this._DEFOVALOR = value;
                    this.SendPropertyChanged("DEFOVALOR");
                    this.OnDEFOVALORChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo del encabezado
        /// </summary>
        [Column(Name = @"FOPR_FOPR", Storage = "_FOPRFOPR", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? FOPRFOPR
        {
            get
            {
                return this._FOPRFOPR;
            }
            set
            {
                if (this._FOPRFOPR != value)
                {
                    if (this._PONEFORMATOXPROVEEDOR.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnFOPRFOPRChanging(value);
                    this.SendPropertyChanging("FOPRFOPR");
                    this._FOPRFOPR = value;
                    this.SendPropertyChanged("FOPRFOPR");
                    this.OnFOPRFOPRChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEFORMATOXPROVEEDOR in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEFORMATOXPROVEEDOR_PONEDETAFORMATOXPROVEEDOR", Storage="_PONEFORMATOXPROVEEDOR", ThisKey="FOPRFOPR", OtherKey="FOPRFOPR", IsForeignKey=true)]
        public PONEFORMATOXPROVEEDOR PONEFORMATOXPROVEEDOR
        {
            get
            {
                return this._PONEFORMATOXPROVEEDOR.Entity;
            }
            set
            {
                PONEFORMATOXPROVEEDOR previousValue = this._PONEFORMATOXPROVEEDOR.Entity;
                if ((previousValue != value) || (this._PONEFORMATOXPROVEEDOR.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONEFORMATOXPROVEEDOR");
                    if (previousValue != null)
                    {
                        this._PONEFORMATOXPROVEEDOR.Entity = null;
                        previousValue.PONEDETAFORMATOXPROVEEDORs.Remove(this);
                    }
                    this._PONEFORMATOXPROVEEDOR.Entity = value;
                    if (value != null)
                    {
                        this._FOPRFOPR = value.FOPRFOPR;
                        value.PONEDETAFORMATOXPROVEEDORs.Add(this);
                    }
                    else
                    {
                        this._FOPRFOPR = default(decimal?);
                    }
                    this.SendPropertyChanged("PONEFORMATOXPROVEEDOR");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for Negocio.Data.PONEDETAEVALUACIONFINANCIERA in the schema.
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_DETAEVALUACIONFINANCIERA")]
    public partial class PONEDETAEVALUACIONFINANCIERA : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _DEEFCODIGO;

        private decimal _EVFICODIGO;

        private decimal _PREFCODIGO;

        private double _DEEFVALORVIGANT;

        private double _DEFVALORVIGACT;
        #pragma warning restore 0649

        private EntityRef<PONEPARAMETRIZACIONEVALFINAN> _PONEPARAMETRIZACIONEVALFINAN;

        private EntityRef<PONEEVALUACIONFINANCIERA> _PONEEVALUACIONFINANCIERA;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnDEEFCODIGOChanging(decimal value);
        partial void OnDEEFCODIGOChanged();
        partial void OnEVFICODIGOChanging(decimal value);
        partial void OnEVFICODIGOChanged();
        partial void OnPREFCODIGOChanging(decimal value);
        partial void OnPREFCODIGOChanged();
        partial void OnDEEFVALORVIGANTChanging(double value);
        partial void OnDEEFVALORVIGANTChanged();
        partial void OnDEFVALORVIGACTChanging(double value);
        partial void OnDEFVALORVIGACTChanged();
        #endregion

        public PONEDETAEVALUACIONFINANCIERA()
        {
            this._PONEPARAMETRIZACIONEVALFINAN  = default(EntityRef<PONEPARAMETRIZACIONEVALFINAN>);
            this._PONEEVALUACIONFINANCIERA  = default(EntityRef<PONEEVALUACIONFINANCIERA>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for DEEFCODIGO in the schema.
        /// </summary>
        [Column(Name = @"DEEF_CODIGO", Storage = "_DEEFCODIGO", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal DEEFCODIGO
        {
            get
            {
                return this._DEEFCODIGO;
            }
            set
            {
                if (this._DEEFCODIGO != value)
                {
                    this.OnDEEFCODIGOChanging(value);
                    this.SendPropertyChanging("DEEFCODIGO");
                    this._DEEFCODIGO = value;
                    this.SendPropertyChanged("DEEFCODIGO");
                    this.OnDEEFCODIGOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EVFICODIGO in the schema.
        /// </summary>
        [Column(Name = @"EVFI_CODIGO", Storage = "_EVFICODIGO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal EVFICODIGO
        {
            get
            {
                return this._EVFICODIGO;
            }
            set
            {
                if (this._EVFICODIGO != value)
                {
                    if (this._PONEEVALUACIONFINANCIERA.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnEVFICODIGOChanging(value);
                    this.SendPropertyChanging("EVFICODIGO");
                    this._EVFICODIGO = value;
                    this.SendPropertyChanged("EVFICODIGO");
                    this.OnEVFICODIGOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PREFCODIGO in the schema.
        /// </summary>
        [Column(Name = @"PREF_CODIGO", Storage = "_PREFCODIGO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal PREFCODIGO
        {
            get
            {
                return this._PREFCODIGO;
            }
            set
            {
                if (this._PREFCODIGO != value)
                {
                    if (this._PONEPARAMETRIZACIONEVALFINAN.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnPREFCODIGOChanging(value);
                    this.SendPropertyChanging("PREFCODIGO");
                    this._PREFCODIGO = value;
                    this.SendPropertyChanged("PREFCODIGO");
                    this.OnPREFCODIGOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEEFVALORVIGANT in the schema.
        /// </summary>
        [Column(Name = @"DEEF_VALORVIGANT", Storage = "_DEEFVALORVIGANT", CanBeNull = false, DbType = "NUMBER(15,2) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double DEEFVALORVIGANT
        {
            get
            {
                return this._DEEFVALORVIGANT;
            }
            set
            {
                if (this._DEEFVALORVIGANT != value)
                {
                    this.OnDEEFVALORVIGANTChanging(value);
                    this.SendPropertyChanging("DEEFVALORVIGANT");
                    this._DEEFVALORVIGANT = value;
                    this.SendPropertyChanged("DEEFVALORVIGANT");
                    this.OnDEEFVALORVIGANTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEFVALORVIGACT in the schema.
        /// </summary>
        [Column(Name = @"DEF_VALORVIGACT", Storage = "_DEFVALORVIGACT", CanBeNull = false, DbType = "NUMBER(15,2) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double DEFVALORVIGACT
        {
            get
            {
                return this._DEFVALORVIGACT;
            }
            set
            {
                if (this._DEFVALORVIGACT != value)
                {
                    this.OnDEFVALORVIGACTChanging(value);
                    this.SendPropertyChanging("DEFVALORVIGACT");
                    this._DEFVALORVIGACT = value;
                    this.SendPropertyChanged("DEFVALORVIGACT");
                    this.OnDEFVALORVIGACTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEPARAMETRIZACIONEVALFINAN in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEPARAMETRIZACIONEVALFINAN_PONEDETAEVALUACIONFINANCIERA", Storage="_PONEPARAMETRIZACIONEVALFINAN", ThisKey="PREFCODIGO", OtherKey="PREFCODIGO", IsForeignKey=true)]
        public PONEPARAMETRIZACIONEVALFINAN PONEPARAMETRIZACIONEVALFINAN
        {
            get
            {
                return this._PONEPARAMETRIZACIONEVALFINAN.Entity;
            }
            set
            {
                PONEPARAMETRIZACIONEVALFINAN previousValue = this._PONEPARAMETRIZACIONEVALFINAN.Entity;
                if ((previousValue != value) || (this._PONEPARAMETRIZACIONEVALFINAN.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONEPARAMETRIZACIONEVALFINAN");
                    if (previousValue != null)
                    {
                        this._PONEPARAMETRIZACIONEVALFINAN.Entity = null;
                        previousValue.PONEDETAEVALUACIONFINANCIERAs.Remove(this);
                    }
                    this._PONEPARAMETRIZACIONEVALFINAN.Entity = value;
                    if (value != null)
                    {
                        this._PREFCODIGO = value.PREFCODIGO;
                        value.PONEDETAEVALUACIONFINANCIERAs.Add(this);
                    }
                    else
                    {
                        this._PREFCODIGO = default(decimal);
                    }
                    this.SendPropertyChanged("PONEPARAMETRIZACIONEVALFINAN");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEEVALUACIONFINANCIERA in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEEVALUACIONFINANCIERA_PONEDETAEVALUACIONFINANCIERA", Storage="_PONEEVALUACIONFINANCIERA", ThisKey="EVFICODIGO", OtherKey="EVFICODIGO", IsForeignKey=true)]
        public PONEEVALUACIONFINANCIERA PONEEVALUACIONFINANCIERA
        {
            get
            {
                return this._PONEEVALUACIONFINANCIERA.Entity;
            }
            set
            {
                PONEEVALUACIONFINANCIERA previousValue = this._PONEEVALUACIONFINANCIERA.Entity;
                if ((previousValue != value) || (this._PONEEVALUACIONFINANCIERA.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONEEVALUACIONFINANCIERA");
                    if (previousValue != null)
                    {
                        this._PONEEVALUACIONFINANCIERA.Entity = null;
                        previousValue.PONEDETAEVALUACIONFINANCIERAs.Remove(this);
                    }
                    this._PONEEVALUACIONFINANCIERA.Entity = value;
                    if (value != null)
                    {
                        this._EVFICODIGO = value.EVFICODIGO;
                        value.PONEDETAEVALUACIONFINANCIERAs.Add(this);
                    }
                    else
                    {
                        this._EVFICODIGO = default(decimal);
                    }
                    this.SendPropertyChanged("PONEEVALUACIONFINANCIERA");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Tabla almacen datos de las cotizaciones realizadas por los proveedores, es la tabla maestra.
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_COTIZACION")]
    public partial class PONECOTIZACION : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _COTICOTIZACION;

        private System.DateTime _COTIFECHA;

        private long? _COTIVALOR;

        private decimal _PROVPROVEEDOR;

        private decimal _SOCOSOLICITUD;

        private decimal? _LOGSUSUARIO;

        private string _COTIOBSERVACION;

        private int? _COTIFORMAPAGO17;

        private System.DateTime? _COTIFECHAENTREGA;
        #pragma warning restore 0649

        private EntityRef<PONESOLICITUDCOMPRA> _PONESOLICITUDCOMPRA;

        private EntityRef<PONEPROVEEDOR> _PONEPROVEEDOR;

        private EntitySet<PONEDOCUMENTOCOTIZACION> _PONEDOCUMENTOCOTIZACIONs;

        private EntitySet<PONEDETALLECOTIZACION> _PONEDETALLECOTIZACIONs;

        private EntitySet<PONEADJUDICACION> _PONEADJUDICACIONs;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCOTICOTIZACIONChanging(decimal value);
        partial void OnCOTICOTIZACIONChanged();
        partial void OnCOTIFECHAChanging(System.DateTime value);
        partial void OnCOTIFECHAChanged();
        partial void OnCOTIVALORChanging(long? value);
        partial void OnCOTIVALORChanged();
        partial void OnPROVPROVEEDORChanging(decimal value);
        partial void OnPROVPROVEEDORChanged();
        partial void OnSOCOSOLICITUDChanging(decimal value);
        partial void OnSOCOSOLICITUDChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        partial void OnCOTIOBSERVACIONChanging(string value);
        partial void OnCOTIOBSERVACIONChanged();
        partial void OnCOTIFORMAPAGO17Changing(int? value);
        partial void OnCOTIFORMAPAGO17Changed();
        partial void OnCOTIFECHAENTREGAChanging(System.DateTime? value);
        partial void OnCOTIFECHAENTREGAChanged();
        #endregion

        public PONECOTIZACION()
        {
            this._PONESOLICITUDCOMPRA  = default(EntityRef<PONESOLICITUDCOMPRA>);
            this._PONEPROVEEDOR  = default(EntityRef<PONEPROVEEDOR>);
            this._PONEDOCUMENTOCOTIZACIONs = new EntitySet<PONEDOCUMENTOCOTIZACION>(new Action<PONEDOCUMENTOCOTIZACION>(this.attach_PONEDOCUMENTOCOTIZACIONs), new Action<PONEDOCUMENTOCOTIZACION>(this.detach_PONEDOCUMENTOCOTIZACIONs));
            this._PONEDETALLECOTIZACIONs = new EntitySet<PONEDETALLECOTIZACION>(new Action<PONEDETALLECOTIZACION>(this.attach_PONEDETALLECOTIZACIONs), new Action<PONEDETALLECOTIZACION>(this.detach_PONEDETALLECOTIZACIONs));
            this._PONEADJUDICACIONs = new EntitySet<PONEADJUDICACION>(new Action<PONEADJUDICACION>(this.attach_PONEADJUDICACIONs), new Action<PONEADJUDICACION>(this.detach_PONEADJUDICACIONs));
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla, identifica numero de cotizacion realizada por los proveedores
        /// </summary>
        [Column(Name = @"COTI_COTIZACION", Storage = "_COTICOTIZACION", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal COTICOTIZACION
        {
            get
            {
                return this._COTICOTIZACION;
            }
            set
            {
                if (this._COTICOTIZACION != value)
                {
                    this.OnCOTICOTIZACIONChanging(value);
                    this.SendPropertyChanging("COTICOTIZACION");
                    this._COTICOTIZACION = value;
                    this.SendPropertyChanged("COTICOTIZACION");
                    this.OnCOTICOTIZACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha de registro de la cotizacion
        /// </summary>
        [Column(Name = @"COTI_FECHA", Storage = "_COTIFECHA", CanBeNull = false, DbType = "TIMESTAMP(6) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime COTIFECHA
        {
            get
            {
                return this._COTIFECHA;
            }
            set
            {
                if (this._COTIFECHA != value)
                {
                    this.OnCOTIFECHAChanging(value);
                    this.SendPropertyChanging("COTIFECHA");
                    this._COTIFECHA = value;
                    this.SendPropertyChanged("COTIFECHA");
                    this.OnCOTIFECHAChanged();
                }
            }
        }

    
        /// <summary>
        /// Valor total
        /// </summary>
        [Column(Name = @"COTI_VALOR", Storage = "_COTIVALOR", DbType = "NUMBER(12) NULL", UpdateCheck = UpdateCheck.Never)]
        public long? COTIVALOR
        {
            get
            {
                return this._COTIVALOR;
            }
            set
            {
                if (this._COTIVALOR != value)
                {
                    this.OnCOTIVALORChanging(value);
                    this.SendPropertyChanging("COTIVALOR");
                    this._COTIVALOR = value;
                    this.SendPropertyChanged("COTIVALOR");
                    this.OnCOTIVALORChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de proveedor que realiza la cotizacion
        /// </summary>
        [Column(Name = @"PROV_PROVEEDOR", Storage = "_PROVPROVEEDOR", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal PROVPROVEEDOR
        {
            get
            {
                return this._PROVPROVEEDOR;
            }
            set
            {
                if (this._PROVPROVEEDOR != value)
                {
                    if (this._PONEPROVEEDOR.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnPROVPROVEEDORChanging(value);
                    this.SendPropertyChanging("PROVPROVEEDOR");
                    this._PROVPROVEEDOR = value;
                    this.SendPropertyChanged("PROVPROVEEDOR");
                    this.OnPROVPROVEEDORChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de la solicitud de compra (Invitacion a cotizar)
        /// </summary>
        [Column(Name = @"SOCO_SOLICITUD", Storage = "_SOCOSOLICITUD", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal SOCOSOLICITUD
        {
            get
            {
                return this._SOCOSOLICITUD;
            }
            set
            {
                if (this._SOCOSOLICITUD != value)
                {
                    if (this._PONESOLICITUDCOMPRA.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnSOCOSOLICITUDChanging(value);
                    this.SendPropertyChanging("SOCOSOLICITUD");
                    this._SOCOSOLICITUD = value;
                    this.SendPropertyChanged("SOCOSOLICITUD");
                    this.OnSOCOSOLICITUDChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario que registro la cotizacion
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Observaciones
        /// </summary>
        [Column(Name = @"COTI_OBSERVACION", Storage = "_COTIOBSERVACION", DbType = "VARCHAR2(500 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string COTIOBSERVACION
        {
            get
            {
                return this._COTIOBSERVACION;
            }
            set
            {
                if (this._COTIOBSERVACION != value)
                {
                    this.OnCOTIOBSERVACIONChanging(value);
                    this.SendPropertyChanging("COTIOBSERVACION");
                    this._COTIOBSERVACION = value;
                    this.SendPropertyChanged("COTIOBSERVACION");
                    this.OnCOTIOBSERVACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Forma de pago, valores de la clase 17
        /// </summary>
        [Column(Name = @"COTI_FORMAPAGO17", Storage = "_COTIFORMAPAGO17", DbType = "NUMBER(5) NULL", UpdateCheck = UpdateCheck.Never)]
        public int? COTIFORMAPAGO17
        {
            get
            {
                return this._COTIFORMAPAGO17;
            }
            set
            {
                if (this._COTIFORMAPAGO17 != value)
                {
                    this.OnCOTIFORMAPAGO17Changing(value);
                    this.SendPropertyChanging("COTIFORMAPAGO17");
                    this._COTIFORMAPAGO17 = value;
                    this.SendPropertyChanged("COTIFORMAPAGO17");
                    this.OnCOTIFORMAPAGO17Changed();
                }
            }
        }

    
        /// <summary>
        /// Fecha de entrega
        /// </summary>
        [Column(Name = @"COTI_FECHAENTREGA", Storage = "_COTIFECHAENTREGA", DbType = "TIMESTAMP(6) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? COTIFECHAENTREGA
        {
            get
            {
                return this._COTIFECHAENTREGA;
            }
            set
            {
                if (this._COTIFECHAENTREGA != value)
                {
                    this.OnCOTIFECHAENTREGAChanging(value);
                    this.SendPropertyChanging("COTIFECHAENTREGA");
                    this._COTIFECHAENTREGA = value;
                    this.SendPropertyChanged("COTIFECHAENTREGA");
                    this.OnCOTIFECHAENTREGAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONESOLICITUDCOMPRA in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONESOLICITUDCOMPRA_PONECOTIZACION", Storage="_PONESOLICITUDCOMPRA", ThisKey="SOCOSOLICITUD", OtherKey="SOCOSOLICITUD", IsForeignKey=true)]
        public PONESOLICITUDCOMPRA PONESOLICITUDCOMPRA
        {
            get
            {
                return this._PONESOLICITUDCOMPRA.Entity;
            }
            set
            {
                PONESOLICITUDCOMPRA previousValue = this._PONESOLICITUDCOMPRA.Entity;
                if ((previousValue != value) || (this._PONESOLICITUDCOMPRA.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONESOLICITUDCOMPRA");
                    if (previousValue != null)
                    {
                        this._PONESOLICITUDCOMPRA.Entity = null;
                        previousValue.PONECOTIZACIONs.Remove(this);
                    }
                    this._PONESOLICITUDCOMPRA.Entity = value;
                    if (value != null)
                    {
                        this._SOCOSOLICITUD = value.SOCOSOLICITUD;
                        value.PONECOTIZACIONs.Add(this);
                    }
                    else
                    {
                        this._SOCOSOLICITUD = default(decimal);
                    }
                    this.SendPropertyChanged("PONESOLICITUDCOMPRA");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEPROVEEDOR in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEPROVEEDOR_PONECOTIZACION", Storage="_PONEPROVEEDOR", ThisKey="PROVPROVEEDOR", OtherKey="PROVPROVEEDOR", IsForeignKey=true)]
        public PONEPROVEEDOR PONEPROVEEDOR
        {
            get
            {
                return this._PONEPROVEEDOR.Entity;
            }
            set
            {
                PONEPROVEEDOR previousValue = this._PONEPROVEEDOR.Entity;
                if ((previousValue != value) || (this._PONEPROVEEDOR.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONEPROVEEDOR");
                    if (previousValue != null)
                    {
                        this._PONEPROVEEDOR.Entity = null;
                        previousValue.PONECOTIZACIONs.Remove(this);
                    }
                    this._PONEPROVEEDOR.Entity = value;
                    if (value != null)
                    {
                        this._PROVPROVEEDOR = value.PROVPROVEEDOR;
                        value.PONECOTIZACIONs.Add(this);
                    }
                    else
                    {
                        this._PROVPROVEEDOR = default(decimal);
                    }
                    this.SendPropertyChanged("PONEPROVEEDOR");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDOCUMENTOCOTIZACIONs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONECOTIZACION_PONEDOCUMENTOCOTIZACION", Storage="_PONEDOCUMENTOCOTIZACIONs", ThisKey="COTICOTIZACION", OtherKey="COTICOTIZACION", DeleteRule="NO ACTION")]
        public EntitySet<PONEDOCUMENTOCOTIZACION> PONEDOCUMENTOCOTIZACIONs
        {
            get
            {
                return this._PONEDOCUMENTOCOTIZACIONs;
            }
            set
            {
                this._PONEDOCUMENTOCOTIZACIONs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDETALLECOTIZACIONs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONECOTIZACION_PONEDETALLECOTIZACION", Storage="_PONEDETALLECOTIZACIONs", ThisKey="COTICOTIZACION", OtherKey="COTICOTIZACION", DeleteRule="NO ACTION")]
        public EntitySet<PONEDETALLECOTIZACION> PONEDETALLECOTIZACIONs
        {
            get
            {
                return this._PONEDETALLECOTIZACIONs;
            }
            set
            {
                this._PONEDETALLECOTIZACIONs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEADJUDICACIONs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONECOTIZACION_PONEADJUDICACION", Storage="_PONEADJUDICACIONs", ThisKey="COTICOTIZACION", OtherKey="COTICOTIZACION", DeleteRule="NO ACTION")]
        public EntitySet<PONEADJUDICACION> PONEADJUDICACIONs
        {
            get
            {
                return this._PONEADJUDICACIONs;
            }
            set
            {
                this._PONEADJUDICACIONs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_PONEDOCUMENTOCOTIZACIONs(PONEDOCUMENTOCOTIZACION entity)
        {
            this.SendPropertyChanging("PONEDOCUMENTOCOTIZACIONs");
            entity.PONECOTIZACION = this;
        }
    
        private void detach_PONEDOCUMENTOCOTIZACIONs(PONEDOCUMENTOCOTIZACION entity)
        {
            this.SendPropertyChanging("PONEDOCUMENTOCOTIZACIONs");
            entity.PONECOTIZACION = null;
        }

        private void attach_PONEDETALLECOTIZACIONs(PONEDETALLECOTIZACION entity)
        {
            this.SendPropertyChanging("PONEDETALLECOTIZACIONs");
            entity.PONECOTIZACION = this;
        }
    
        private void detach_PONEDETALLECOTIZACIONs(PONEDETALLECOTIZACION entity)
        {
            this.SendPropertyChanging("PONEDETALLECOTIZACIONs");
            entity.PONECOTIZACION = null;
        }

        private void attach_PONEADJUDICACIONs(PONEADJUDICACION entity)
        {
            this.SendPropertyChanging("PONEADJUDICACIONs");
            entity.PONECOTIZACION = this;
        }
    
        private void detach_PONEADJUDICACIONs(PONEADJUDICACION entity)
        {
            this.SendPropertyChanging("PONEADJUDICACIONs");
            entity.PONECOTIZACION = null;
        }
    }

    /// <summary>
    /// Configuracion de archivo en excel
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_CONFARCHIVO")]
    public partial class PONECONFARCHIVO : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CONFCONF;

        private string _CONFNOMBREARCHIVO;

        private decimal _CONFVERSION;

        private System.DateTime? _CONFFECHA;

        private string _CONFESTADO;
        #pragma warning restore 0649

        private EntitySet<PONEFORMATOXPROVEEDOR> _PONEFORMATOXPROVEEDORs;

        private EntitySet<PONEDETALLECONFARCHIVO> _PONEDETALLECONFARCHIVOs;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCONFCONFChanging(decimal value);
        partial void OnCONFCONFChanged();
        partial void OnCONFNOMBREARCHIVOChanging(string value);
        partial void OnCONFNOMBREARCHIVOChanged();
        partial void OnCONFVERSIONChanging(decimal value);
        partial void OnCONFVERSIONChanged();
        partial void OnCONFFECHAChanging(System.DateTime? value);
        partial void OnCONFFECHAChanged();
        partial void OnCONFESTADOChanging(string value);
        partial void OnCONFESTADOChanged();
        #endregion

        public PONECONFARCHIVO()
        {
            this._PONEFORMATOXPROVEEDORs = new EntitySet<PONEFORMATOXPROVEEDOR>(new Action<PONEFORMATOXPROVEEDOR>(this.attach_PONEFORMATOXPROVEEDORs), new Action<PONEFORMATOXPROVEEDOR>(this.detach_PONEFORMATOXPROVEEDORs));
            this._PONEDETALLECONFARCHIVOs = new EntitySet<PONEDETALLECONFARCHIVO>(new Action<PONEDETALLECONFARCHIVO>(this.attach_PONEDETALLECONFARCHIVOs), new Action<PONEDETALLECONFARCHIVO>(this.detach_PONEDETALLECONFARCHIVOs));
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"CONF_CONF", Storage = "_CONFCONF", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal CONFCONF
        {
            get
            {
                return this._CONFCONF;
            }
            set
            {
                if (this._CONFCONF != value)
                {
                    this.OnCONFCONFChanging(value);
                    this.SendPropertyChanging("CONFCONF");
                    this._CONFCONF = value;
                    this.SendPropertyChanged("CONFCONF");
                    this.OnCONFCONFChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre del archivo
        /// </summary>
        [Column(Name = @"CONF_NOMBREARCHIVO", Storage = "_CONFNOMBREARCHIVO", DbType = "VARCHAR2(50 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CONFNOMBREARCHIVO
        {
            get
            {
                return this._CONFNOMBREARCHIVO;
            }
            set
            {
                if (this._CONFNOMBREARCHIVO != value)
                {
                    this.OnCONFNOMBREARCHIVOChanging(value);
                    this.SendPropertyChanging("CONFNOMBREARCHIVO");
                    this._CONFNOMBREARCHIVO = value;
                    this.SendPropertyChanged("CONFNOMBREARCHIVO");
                    this.OnCONFNOMBREARCHIVOChanged();
                }
            }
        }

    
        /// <summary>
        /// version del documento
        /// </summary>
        [Column(Name = @"CONF_VERSION", Storage = "_CONFVERSION", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CONFVERSION
        {
            get
            {
                return this._CONFVERSION;
            }
            set
            {
                if (this._CONFVERSION != value)
                {
                    this.OnCONFVERSIONChanging(value);
                    this.SendPropertyChanging("CONFVERSION");
                    this._CONFVERSION = value;
                    this.SendPropertyChanged("CONFVERSION");
                    this.OnCONFVERSIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha de subida del archivo
        /// </summary>
        [Column(Name = @"CONF_FECHA", Storage = "_CONFFECHA", DbType = "TIMESTAMP(6) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? CONFFECHA
        {
            get
            {
                return this._CONFFECHA;
            }
            set
            {
                if (this._CONFFECHA != value)
                {
                    this.OnCONFFECHAChanging(value);
                    this.SendPropertyChanging("CONFFECHA");
                    this._CONFFECHA = value;
                    this.SendPropertyChanged("CONFFECHA");
                    this.OnCONFFECHAChanged();
                }
            }
        }

    
        /// <summary>
        /// Estado del Archivo A o I
        /// </summary>
        [Column(Name = @"CONF_ESTADO", Storage = "_CONFESTADO", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CONFESTADO
        {
            get
            {
                return this._CONFESTADO;
            }
            set
            {
                if (this._CONFESTADO != value)
                {
                    this.OnCONFESTADOChanging(value);
                    this.SendPropertyChanging("CONFESTADO");
                    this._CONFESTADO = value;
                    this.SendPropertyChanged("CONFESTADO");
                    this.OnCONFESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEFORMATOXPROVEEDORs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONECONFARCHIVO_PONEFORMATOXPROVEEDOR", Storage="_PONEFORMATOXPROVEEDORs", ThisKey="CONFCONF", OtherKey="CONFCONF", DeleteRule="NO ACTION")]
        public EntitySet<PONEFORMATOXPROVEEDOR> PONEFORMATOXPROVEEDORs
        {
            get
            {
                return this._PONEFORMATOXPROVEEDORs;
            }
            set
            {
                this._PONEFORMATOXPROVEEDORs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDETALLECONFARCHIVOs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONECONFARCHIVO_PONEDETALLECONFARCHIVO", Storage="_PONEDETALLECONFARCHIVOs", ThisKey="CONFCONF", OtherKey="CONFCONF", DeleteRule="NO ACTION")]
        public EntitySet<PONEDETALLECONFARCHIVO> PONEDETALLECONFARCHIVOs
        {
            get
            {
                return this._PONEDETALLECONFARCHIVOs;
            }
            set
            {
                this._PONEDETALLECONFARCHIVOs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_PONEFORMATOXPROVEEDORs(PONEFORMATOXPROVEEDOR entity)
        {
            this.SendPropertyChanging("PONEFORMATOXPROVEEDORs");
            entity.PONECONFARCHIVO = this;
        }
    
        private void detach_PONEFORMATOXPROVEEDORs(PONEFORMATOXPROVEEDOR entity)
        {
            this.SendPropertyChanging("PONEFORMATOXPROVEEDORs");
            entity.PONECONFARCHIVO = null;
        }

        private void attach_PONEDETALLECONFARCHIVOs(PONEDETALLECONFARCHIVO entity)
        {
            this.SendPropertyChanging("PONEDETALLECONFARCHIVOs");
            entity.PONECONFARCHIVO = this;
        }
    
        private void detach_PONEDETALLECONFARCHIVOs(PONEDETALLECONFARCHIVO entity)
        {
            this.SendPropertyChanging("PONEDETALLECONFARCHIVOs");
            entity.PONECONFARCHIVO = null;
        }
    }

    /// <summary>
    /// Almacena el catalogo de elementos o servicios
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_CATALOGO")]
    public partial class PONECATALOGO : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CATACATALOGO;

        private string _CATACODCATALOGO;

        private string _CATATIPO;

        private string _CATANOMBRE;

        private decimal _CLASUNIDADMEDIDA4;

        private string _CATAESTADO;

        private decimal? _LOGSUSUARIO;

        private System.DateTime? _LOGSFECHA = DateTime.Now;
        #pragma warning restore 0649

        private EntitySet<PONEDETALLESOLICITUD> _PONEDETALLESOLICITUDs;

        private EntitySet<PONEDETALLECOTIZACION> _PONEDETALLECOTIZACIONs;

        private EntityRef<POGECLASEVALOR> _POGECLASEVALOR;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCATACATALOGOChanging(decimal value);
        partial void OnCATACATALOGOChanged();
        partial void OnCATACODCATALOGOChanging(string value);
        partial void OnCATACODCATALOGOChanged();
        partial void OnCATATIPOChanging(string value);
        partial void OnCATATIPOChanged();
        partial void OnCATANOMBREChanging(string value);
        partial void OnCATANOMBREChanged();
        partial void OnCLASUNIDADMEDIDA4Changing(decimal value);
        partial void OnCLASUNIDADMEDIDA4Changed();
        partial void OnCATAESTADOChanging(string value);
        partial void OnCATAESTADOChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        partial void OnLOGSFECHAChanging(System.DateTime? value);
        partial void OnLOGSFECHAChanged();
        #endregion

        public PONECATALOGO()
        {
            this._PONEDETALLESOLICITUDs = new EntitySet<PONEDETALLESOLICITUD>(new Action<PONEDETALLESOLICITUD>(this.attach_PONEDETALLESOLICITUDs), new Action<PONEDETALLESOLICITUD>(this.detach_PONEDETALLESOLICITUDs));
            this._PONEDETALLECOTIZACIONs = new EntitySet<PONEDETALLECOTIZACION>(new Action<PONEDETALLECOTIZACION>(this.attach_PONEDETALLECOTIZACIONs), new Action<PONEDETALLECOTIZACION>(this.detach_PONEDETALLECOTIZACIONs));
            this._POGECLASEVALOR  = default(EntityRef<POGECLASEVALOR>);
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"CATA_CATALOGO", Storage = "_CATACATALOGO", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal CATACATALOGO
        {
            get
            {
                return this._CATACATALOGO;
            }
            set
            {
                if (this._CATACATALOGO != value)
                {
                    this.OnCATACATALOGOChanging(value);
                    this.SendPropertyChanging("CATACATALOGO");
                    this._CATACATALOGO = value;
                    this.SendPropertyChanged("CATACATALOGO");
                    this.OnCATACATALOGOChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo del catalogo del inventario
        /// </summary>
        [Column(Name = @"CATA_CODCATALOGO", Storage = "_CATACODCATALOGO", CanBeNull = false, DbType = "VARCHAR2(10 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CATACODCATALOGO
        {
            get
            {
                return this._CATACODCATALOGO;
            }
            set
            {
                if (this._CATACODCATALOGO != value)
                {
                    this.OnCATACODCATALOGOChanging(value);
                    this.SendPropertyChanging("CATACODCATALOGO");
                    this._CATACODCATALOGO = value;
                    this.SendPropertyChanged("CATACODCATALOGO");
                    this.OnCATACODCATALOGOChanged();
                }
            }
        }

    
        /// <summary>
        /// Indica si es un codigo de elemento o servicio E: Elmento, S: Servicio
        /// </summary>
        [Column(Name = @"CATA_TIPO", Storage = "_CATATIPO", CanBeNull = false, DbType = "VARCHAR2(1 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CATATIPO
        {
            get
            {
                return this._CATATIPO;
            }
            set
            {
                if (this._CATATIPO != value)
                {
                    this.OnCATATIPOChanging(value);
                    this.SendPropertyChanging("CATATIPO");
                    this._CATATIPO = value;
                    this.SendPropertyChanged("CATATIPO");
                    this.OnCATATIPOChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre del elemento
        /// </summary>
        [Column(Name = @"CATA_NOMBRE", Storage = "_CATANOMBRE", CanBeNull = false, DbType = "VARCHAR2(500 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CATANOMBRE
        {
            get
            {
                return this._CATANOMBRE;
            }
            set
            {
                if (this._CATANOMBRE != value)
                {
                    this.OnCATANOMBREChanging(value);
                    this.SendPropertyChanging("CATANOMBRE");
                    this._CATANOMBRE = value;
                    this.SendPropertyChanged("CATANOMBRE");
                    this.OnCATANOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de la unidad de medida traerlo de los parametros generales
        /// </summary>
        [Column(Name = @"CLAS_UNIDADMEDIDA4", Storage = "_CLASUNIDADMEDIDA4", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CLASUNIDADMEDIDA4
        {
            get
            {
                return this._CLASUNIDADMEDIDA4;
            }
            set
            {
                if (this._CLASUNIDADMEDIDA4 != value)
                {
                    if (this._POGECLASEVALOR.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCLASUNIDADMEDIDA4Changing(value);
                    this.SendPropertyChanging("CLASUNIDADMEDIDA4");
                    this._CLASUNIDADMEDIDA4 = value;
                    this.SendPropertyChanged("CLASUNIDADMEDIDA4");
                    this.OnCLASUNIDADMEDIDA4Changed();
                }
            }
        }

    
        /// <summary>
        /// Estado del registro
        /// </summary>
        [Column(Name = @"CATA_ESTADO", Storage = "_CATAESTADO", CanBeNull = false, DbType = "VARCHAR2(1 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CATAESTADO
        {
            get
            {
                return this._CATAESTADO;
            }
            set
            {
                if (this._CATAESTADO != value)
                {
                    this.OnCATAESTADOChanging(value);
                    this.SendPropertyChanging("CATAESTADO");
                    this._CATAESTADO = value;
                    this.SendPropertyChanged("CATAESTADO");
                    this.OnCATAESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario que modifico el registro
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha en que se modifico el registro
        /// </summary>
        [Column(Name = @"LOGS_FECHA", Storage = "_LOGSFECHA", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? LOGSFECHA
        {
            get
            {
                return this._LOGSFECHA;
            }
            set
            {
                if (this._LOGSFECHA != value)
                {
                    this.OnLOGSFECHAChanging(value);
                    this.SendPropertyChanging("LOGSFECHA");
                    this._LOGSFECHA = value;
                    this.SendPropertyChanged("LOGSFECHA");
                    this.OnLOGSFECHAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDETALLESOLICITUDs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONECATALOGO_PONEDETALLESOLICITUD", Storage="_PONEDETALLESOLICITUDs", ThisKey="CATACATALOGO", OtherKey="CATACATALOGO", DeleteRule="NO ACTION")]
        public EntitySet<PONEDETALLESOLICITUD> PONEDETALLESOLICITUDs
        {
            get
            {
                return this._PONEDETALLESOLICITUDs;
            }
            set
            {
                this._PONEDETALLESOLICITUDs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDETALLECOTIZACIONs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONECATALOGO_PONEDETALLECOTIZACION", Storage="_PONEDETALLECOTIZACIONs", ThisKey="CATACATALOGO", OtherKey="CATACATALOGO", DeleteRule="NO ACTION")]
        public EntitySet<PONEDETALLECOTIZACION> PONEDETALLECOTIZACIONs
        {
            get
            {
                return this._PONEDETALLECOTIZACIONs;
            }
            set
            {
                this._PONEDETALLECOTIZACIONs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for POGECLASEVALOR in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGECLASEVALOR_PONECATALOGO", Storage="_POGECLASEVALOR", ThisKey="CLASUNIDADMEDIDA4", OtherKey="CLVACLASEVALOR", IsForeignKey=true)]
        public POGECLASEVALOR POGECLASEVALOR
        {
            get
            {
                return this._POGECLASEVALOR.Entity;
            }
            set
            {
                POGECLASEVALOR previousValue = this._POGECLASEVALOR.Entity;
                if ((previousValue != value) || (this._POGECLASEVALOR.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("POGECLASEVALOR");
                    if (previousValue != null)
                    {
                        this._POGECLASEVALOR.Entity = null;
                        previousValue.PONECATALOGOs.Remove(this);
                    }
                    this._POGECLASEVALOR.Entity = value;
                    if (value != null)
                    {
                        this._CLASUNIDADMEDIDA4 = value.CLVACLASEVALOR;
                        value.PONECATALOGOs.Add(this);
                    }
                    else
                    {
                        this._CLASUNIDADMEDIDA4 = default(decimal);
                    }
                    this.SendPropertyChanged("POGECLASEVALOR");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_PONEDETALLESOLICITUDs(PONEDETALLESOLICITUD entity)
        {
            this.SendPropertyChanging("PONEDETALLESOLICITUDs");
            entity.PONECATALOGO = this;
        }
    
        private void detach_PONEDETALLESOLICITUDs(PONEDETALLESOLICITUD entity)
        {
            this.SendPropertyChanging("PONEDETALLESOLICITUDs");
            entity.PONECATALOGO = null;
        }

        private void attach_PONEDETALLECOTIZACIONs(PONEDETALLECOTIZACION entity)
        {
            this.SendPropertyChanging("PONEDETALLECOTIZACIONs");
            entity.PONECATALOGO = this;
        }
    
        private void detach_PONEDETALLECOTIZACIONs(PONEDETALLECOTIZACION entity)
        {
            this.SendPropertyChanging("PONEDETALLECOTIZACIONs");
            entity.PONECATALOGO = null;
        }
    }

    /// <summary>
    /// Tabla para almacenar archivos 
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_BLOB")]
    public partial class PONEBLOB : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _BLOBBLOB;

        private byte[] _BLOBDATO;
        #pragma warning restore 0649

        private EntitySet<PONENOTICIA> _PONENOTICIAs;

        private EntitySet<PONEFORMATOXPROVEEDOR> _PONEFORMATOXPROVEEDORs;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnBLOBBLOBChanging(decimal value);
        partial void OnBLOBBLOBChanged();
        partial void OnBLOBDATOChanging(byte[] value);
        partial void OnBLOBDATOChanged();
        #endregion

        public PONEBLOB()
        {
            this._PONENOTICIAs = new EntitySet<PONENOTICIA>(new Action<PONENOTICIA>(this.attach_PONENOTICIAs), new Action<PONENOTICIA>(this.detach_PONENOTICIAs));
            this._PONEFORMATOXPROVEEDORs = new EntitySet<PONEFORMATOXPROVEEDOR>(new Action<PONEFORMATOXPROVEEDOR>(this.attach_PONEFORMATOXPROVEEDORs), new Action<PONEFORMATOXPROVEEDOR>(this.detach_PONEFORMATOXPROVEEDORs));
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"BLOB_BLOB", Storage = "_BLOBBLOB", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal BLOBBLOB
        {
            get
            {
                return this._BLOBBLOB;
            }
            set
            {
                if (this._BLOBBLOB != value)
                {
                    this.OnBLOBBLOBChanging(value);
                    this.SendPropertyChanging("BLOBBLOB");
                    this._BLOBBLOB = value;
                    this.SendPropertyChanged("BLOBBLOB");
                    this.OnBLOBBLOBChanged();
                }
            }
        }

    
        /// <summary>
        /// Blob
        /// </summary>
        [Column(Name = @"BLOB_DATO", Storage = "_BLOBDATO", CanBeNull = false, DbType = "BLOB NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public byte[] BLOBDATO
        {
            get
            {
                return this._BLOBDATO;
            }
            set
            {
                if (this._BLOBDATO != value)
                {
                    this.OnBLOBDATOChanging(value);
                    this.SendPropertyChanging("BLOBDATO");
                    this._BLOBDATO = value;
                    this.SendPropertyChanged("BLOBDATO");
                    this.OnBLOBDATOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONENOTICIAs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEBLOB_PONENOTICIA", Storage="_PONENOTICIAs", ThisKey="BLOBBLOB", OtherKey="BLOBBLOB", DeleteRule="NO ACTION")]
        public EntitySet<PONENOTICIA> PONENOTICIAs
        {
            get
            {
                return this._PONENOTICIAs;
            }
            set
            {
                this._PONENOTICIAs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEFORMATOXPROVEEDORs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEBLOB_PONEFORMATOXPROVEEDOR", Storage="_PONEFORMATOXPROVEEDORs", ThisKey="BLOBBLOB", OtherKey="BLOBBLOB", DeleteRule="NO ACTION")]
        public EntitySet<PONEFORMATOXPROVEEDOR> PONEFORMATOXPROVEEDORs
        {
            get
            {
                return this._PONEFORMATOXPROVEEDORs;
            }
            set
            {
                this._PONEFORMATOXPROVEEDORs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_PONENOTICIAs(PONENOTICIA entity)
        {
            this.SendPropertyChanging("PONENOTICIAs");
            entity.PONEBLOB = this;
        }
    
        private void detach_PONENOTICIAs(PONENOTICIA entity)
        {
            this.SendPropertyChanging("PONENOTICIAs");
            entity.PONEBLOB = null;
        }

        private void attach_PONEFORMATOXPROVEEDORs(PONEFORMATOXPROVEEDOR entity)
        {
            this.SendPropertyChanging("PONEFORMATOXPROVEEDORs");
            entity.PONEBLOB = this;
        }
    
        private void detach_PONEFORMATOXPROVEEDORs(PONEFORMATOXPROVEEDOR entity)
        {
            this.SendPropertyChanging("PONEFORMATOXPROVEEDORs");
            entity.PONEBLOB = null;
        }
    }

    /// <summary>
    /// Almacena los registros del proveedor o proveedores adjudicados, si una solicitud de compra no es adjudicada no deben haber registros en esta tabla. Al ser adjudicado debe haber al menos un registro
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_ADJUDICACION")]
    public partial class PONEADJUDICACION : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _ADJUADJUDICACION;

        private decimal _COTICOTIZACION;

        private decimal _SOCOSOLICITUD;

        private System.DateTime _LOGSFECHA = DateTime.Now;

        private decimal _LOGSUSUARIO;
        #pragma warning restore 0649

        private EntityRef<PONESOLICITUDCOMPRA> _PONESOLICITUDCOMPRA;

        private EntityRef<PONECOTIZACION> _PONECOTIZACION;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnADJUADJUDICACIONChanging(decimal value);
        partial void OnADJUADJUDICACIONChanged();
        partial void OnCOTICOTIZACIONChanging(decimal value);
        partial void OnCOTICOTIZACIONChanged();
        partial void OnSOCOSOLICITUDChanging(decimal value);
        partial void OnSOCOSOLICITUDChanged();
        partial void OnLOGSFECHAChanging(System.DateTime value);
        partial void OnLOGSFECHAChanged();
        partial void OnLOGSUSUARIOChanging(decimal value);
        partial void OnLOGSUSUARIOChanged();
        #endregion

        public PONEADJUDICACION()
        {
            this._PONESOLICITUDCOMPRA  = default(EntityRef<PONESOLICITUDCOMPRA>);
            this._PONECOTIZACION  = default(EntityRef<PONECOTIZACION>);
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"ADJU_ADJUDICACION", Storage = "_ADJUADJUDICACION", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal ADJUADJUDICACION
        {
            get
            {
                return this._ADJUADJUDICACION;
            }
            set
            {
                if (this._ADJUADJUDICACION != value)
                {
                    this.OnADJUADJUDICACIONChanging(value);
                    this.SendPropertyChanging("ADJUADJUDICACION");
                    this._ADJUADJUDICACION = value;
                    this.SendPropertyChanged("ADJUADJUDICACION");
                    this.OnADJUADJUDICACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de cotizacion, para traer el proveedor adjudicado
        /// </summary>
        [Column(Name = @"COTI_COTIZACION", Storage = "_COTICOTIZACION", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal COTICOTIZACION
        {
            get
            {
                return this._COTICOTIZACION;
            }
            set
            {
                if (this._COTICOTIZACION != value)
                {
                    if (this._PONECOTIZACION.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCOTICOTIZACIONChanging(value);
                    this.SendPropertyChanging("COTICOTIZACION");
                    this._COTICOTIZACION = value;
                    this.SendPropertyChanged("COTICOTIZACION");
                    this.OnCOTICOTIZACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de la solicitud de compra adjudicada
        /// </summary>
        [Column(Name = @"SOCO_SOLICITUD", Storage = "_SOCOSOLICITUD", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal SOCOSOLICITUD
        {
            get
            {
                return this._SOCOSOLICITUD;
            }
            set
            {
                if (this._SOCOSOLICITUD != value)
                {
                    if (this._PONESOLICITUDCOMPRA.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnSOCOSOLICITUDChanging(value);
                    this.SendPropertyChanging("SOCOSOLICITUD");
                    this._SOCOSOLICITUD = value;
                    this.SendPropertyChanged("SOCOSOLICITUD");
                    this.OnSOCOSOLICITUDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LOGSFECHA in the schema.
        /// </summary>
        [Column(Name = @"LOGS_FECHA", Storage = "_LOGSFECHA", CanBeNull = false, DbType = "TIMESTAMP(6) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime LOGSFECHA
        {
            get
            {
                return this._LOGSFECHA;
            }
            set
            {
                if (this._LOGSFECHA != value)
                {
                    this.OnLOGSFECHAChanging(value);
                    this.SendPropertyChanging("LOGSFECHA");
                    this._LOGSFECHA = value;
                    this.SendPropertyChanged("LOGSFECHA");
                    this.OnLOGSFECHAChanged();
                }
            }
        }

    
        /// <summary>
        /// Auditoria usuario
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONESOLICITUDCOMPRA in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONESOLICITUDCOMPRA_PONEADJUDICACION", Storage="_PONESOLICITUDCOMPRA", ThisKey="SOCOSOLICITUD", OtherKey="SOCOSOLICITUD", IsForeignKey=true)]
        public PONESOLICITUDCOMPRA PONESOLICITUDCOMPRA
        {
            get
            {
                return this._PONESOLICITUDCOMPRA.Entity;
            }
            set
            {
                PONESOLICITUDCOMPRA previousValue = this._PONESOLICITUDCOMPRA.Entity;
                if ((previousValue != value) || (this._PONESOLICITUDCOMPRA.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONESOLICITUDCOMPRA");
                    if (previousValue != null)
                    {
                        this._PONESOLICITUDCOMPRA.Entity = null;
                        previousValue.PONEADJUDICACIONs.Remove(this);
                    }
                    this._PONESOLICITUDCOMPRA.Entity = value;
                    if (value != null)
                    {
                        this._SOCOSOLICITUD = value.SOCOSOLICITUD;
                        value.PONEADJUDICACIONs.Add(this);
                    }
                    else
                    {
                        this._SOCOSOLICITUD = default(decimal);
                    }
                    this.SendPropertyChanged("PONESOLICITUDCOMPRA");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONECOTIZACION in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONECOTIZACION_PONEADJUDICACION", Storage="_PONECOTIZACION", ThisKey="COTICOTIZACION", OtherKey="COTICOTIZACION", IsForeignKey=true)]
        public PONECOTIZACION PONECOTIZACION
        {
            get
            {
                return this._PONECOTIZACION.Entity;
            }
            set
            {
                PONECOTIZACION previousValue = this._PONECOTIZACION.Entity;
                if ((previousValue != value) || (this._PONECOTIZACION.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONECOTIZACION");
                    if (previousValue != null)
                    {
                        this._PONECOTIZACION.Entity = null;
                        previousValue.PONEADJUDICACIONs.Remove(this);
                    }
                    this._PONECOTIZACION.Entity = value;
                    if (value != null)
                    {
                        this._COTICOTIZACION = value.COTICOTIZACION;
                        value.PONEADJUDICACIONs.Add(this);
                    }
                    else
                    {
                        this._COTICOTIZACION = default(decimal);
                    }
                    this.SendPropertyChanged("PONECOTIZACION");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for Negocio.Data.PONEACTUALIZACIONPROVEEDOR in the schema.
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_ACTUALIZACIONPROVEEDOR")]
    public partial class PONEACTUALIZACIONPROVEEDOR : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _ACPRACTUALIZACION;

        private System.DateTime? _ACPRFECHA;

        private decimal _PROVPROVEEDOR;
        #pragma warning restore 0649

        private EntityRef<PONEPROVEEDOR> _PONEPROVEEDOR;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnACPRACTUALIZACIONChanging(decimal value);
        partial void OnACPRACTUALIZACIONChanged();
        partial void OnACPRFECHAChanging(System.DateTime? value);
        partial void OnACPRFECHAChanged();
        partial void OnPROVPROVEEDORChanging(decimal value);
        partial void OnPROVPROVEEDORChanged();
        #endregion

        public PONEACTUALIZACIONPROVEEDOR()
        {
            this._PONEPROVEEDOR  = default(EntityRef<PONEPROVEEDOR>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ACPRACTUALIZACION in the schema.
        /// </summary>
        [Column(Name = @"ACPR_ACTUALIZACION", Storage = "_ACPRACTUALIZACION", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal ACPRACTUALIZACION
        {
            get
            {
                return this._ACPRACTUALIZACION;
            }
            set
            {
                if (this._ACPRACTUALIZACION != value)
                {
                    this.OnACPRACTUALIZACIONChanging(value);
                    this.SendPropertyChanging("ACPRACTUALIZACION");
                    this._ACPRACTUALIZACION = value;
                    this.SendPropertyChanged("ACPRACTUALIZACION");
                    this.OnACPRACTUALIZACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ACPRFECHA in the schema.
        /// </summary>
        [Column(Name = @"ACPR_FECHA", Storage = "_ACPRFECHA", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? ACPRFECHA
        {
            get
            {
                return this._ACPRFECHA;
            }
            set
            {
                if (this._ACPRFECHA != value)
                {
                    this.OnACPRFECHAChanging(value);
                    this.SendPropertyChanging("ACPRFECHA");
                    this._ACPRFECHA = value;
                    this.SendPropertyChanged("ACPRFECHA");
                    this.OnACPRFECHAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVPROVEEDOR in the schema.
        /// </summary>
        [Column(Name = @"PROV_PROVEEDOR", Storage = "_PROVPROVEEDOR", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal PROVPROVEEDOR
        {
            get
            {
                return this._PROVPROVEEDOR;
            }
            set
            {
                if (this._PROVPROVEEDOR != value)
                {
                    if (this._PONEPROVEEDOR.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnPROVPROVEEDORChanging(value);
                    this.SendPropertyChanging("PROVPROVEEDOR");
                    this._PROVPROVEEDOR = value;
                    this.SendPropertyChanged("PROVPROVEEDOR");
                    this.OnPROVPROVEEDORChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEPROVEEDOR in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEPROVEEDOR_PONEACTUALIZACIONPROVEEDOR", Storage="_PONEPROVEEDOR", ThisKey="PROVPROVEEDOR", OtherKey="PROVPROVEEDOR", IsForeignKey=true)]
        public PONEPROVEEDOR PONEPROVEEDOR
        {
            get
            {
                return this._PONEPROVEEDOR.Entity;
            }
            set
            {
                PONEPROVEEDOR previousValue = this._PONEPROVEEDOR.Entity;
                if ((previousValue != value) || (this._PONEPROVEEDOR.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONEPROVEEDOR");
                    if (previousValue != null)
                    {
                        this._PONEPROVEEDOR.Entity = null;
                        previousValue.PONEACTUALIZACIONPROVEEDORs.Remove(this);
                    }
                    this._PONEPROVEEDOR.Entity = value;
                    if (value != null)
                    {
                        this._PROVPROVEEDOR = value.PROVPROVEEDOR;
                        value.PONEACTUALIZACIONPROVEEDORs.Add(this);
                    }
                    else
                    {
                        this._PROVPROVEEDOR = default(decimal);
                    }
                    this.SendPropertyChanged("PONEPROVEEDOR");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Se registran los usuarios del sistema, el campo tipo identifica si son internos o externos a la organizacion, si el usuario es de un proveedor debe tener valor en el campo prov_proveedor
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.POGE_USUARIO")]
    public partial class POGEUSUARIO : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _USUAUSUARIO;

        private string _USUAIDENTIFICADOR;

        private string _USUANOMBRE;

        private string _USUAIDENTIFICACION;

        private string _USUAESTADO;

        private string _USUACLAVE;

        private decimal? _LOGSUSUARIO;

        private System.DateTime? _LOGSFECHA;

        private string _USUACORREO;

        private string _USUATIPO;

        private string _USUAURLDEFECTO;

        private decimal? _ROLEROL;

        private decimal? _PROVPROVEEDOR;

        private decimal? _CLASAREA2;

        private string _USUAVENCECLAVE;

        private System.DateTime? _USUAFECHAVENCE;

        private string _USUACAMBIARCLAVE;
        #pragma warning restore 0649

        private EntityRef<PONEPROVEEDOR> _PONEPROVEEDOR;

        private EntitySet<POGENOTIFICACIONXUSUARIO> _POGENOTIFICACIONXUSUARIOs;

        private EntitySet<POGEAUTORIZADORGERENCIA> _POGEAUTORIZADORGERENCIAs;

        private EntityRef<POGECLASEVALOR> _POGECLASEVALOR;

        private EntityRef<POGEROL> _POGEROL;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnUSUAUSUARIOChanging(decimal value);
        partial void OnUSUAUSUARIOChanged();
        partial void OnUSUAIDENTIFICADORChanging(string value);
        partial void OnUSUAIDENTIFICADORChanged();
        partial void OnUSUANOMBREChanging(string value);
        partial void OnUSUANOMBREChanged();
        partial void OnUSUAIDENTIFICACIONChanging(string value);
        partial void OnUSUAIDENTIFICACIONChanged();
        partial void OnUSUAESTADOChanging(string value);
        partial void OnUSUAESTADOChanged();
        partial void OnUSUACLAVEChanging(string value);
        partial void OnUSUACLAVEChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        partial void OnLOGSFECHAChanging(System.DateTime? value);
        partial void OnLOGSFECHAChanged();
        partial void OnUSUACORREOChanging(string value);
        partial void OnUSUACORREOChanged();
        partial void OnUSUATIPOChanging(string value);
        partial void OnUSUATIPOChanged();
        partial void OnUSUAURLDEFECTOChanging(string value);
        partial void OnUSUAURLDEFECTOChanged();
        partial void OnROLEROLChanging(decimal? value);
        partial void OnROLEROLChanged();
        partial void OnPROVPROVEEDORChanging(decimal? value);
        partial void OnPROVPROVEEDORChanged();
        partial void OnCLASAREA2Changing(decimal? value);
        partial void OnCLASAREA2Changed();
        partial void OnUSUAVENCECLAVEChanging(string value);
        partial void OnUSUAVENCECLAVEChanged();
        partial void OnUSUAFECHAVENCEChanging(System.DateTime? value);
        partial void OnUSUAFECHAVENCEChanged();
        partial void OnUSUACAMBIARCLAVEChanging(string value);
        partial void OnUSUACAMBIARCLAVEChanged();
        #endregion

        public POGEUSUARIO()
        {
            this._PONEPROVEEDOR  = default(EntityRef<PONEPROVEEDOR>);
            this._POGENOTIFICACIONXUSUARIOs = new EntitySet<POGENOTIFICACIONXUSUARIO>(new Action<POGENOTIFICACIONXUSUARIO>(this.attach_POGENOTIFICACIONXUSUARIOs), new Action<POGENOTIFICACIONXUSUARIO>(this.detach_POGENOTIFICACIONXUSUARIOs));
            this._POGEAUTORIZADORGERENCIAs = new EntitySet<POGEAUTORIZADORGERENCIA>(new Action<POGEAUTORIZADORGERENCIA>(this.attach_POGEAUTORIZADORGERENCIAs), new Action<POGEAUTORIZADORGERENCIA>(this.detach_POGEAUTORIZADORGERENCIAs));
            this._POGECLASEVALOR  = default(EntityRef<POGECLASEVALOR>);
            this._POGEROL  = default(EntityRef<POGEROL>);
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"USUA_USUARIO", Storage = "_USUAUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal USUAUSUARIO
        {
            get
            {
                return this._USUAUSUARIO;
            }
            set
            {
                if (this._USUAUSUARIO != value)
                {
                    this.OnUSUAUSUARIOChanging(value);
                    this.SendPropertyChanging("USUAUSUARIO");
                    this._USUAUSUARIO = value;
                    this.SendPropertyChanged("USUAUSUARIO");
                    this.OnUSUAUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre de usuario
        /// </summary>
        [Column(Name = @"USUA_IDENTIFICADOR", Storage = "_USUAIDENTIFICADOR", CanBeNull = false, DbType = "VARCHAR2(20 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string USUAIDENTIFICADOR
        {
            get
            {
                return this._USUAIDENTIFICADOR;
            }
            set
            {
                if (this._USUAIDENTIFICADOR != value)
                {
                    this.OnUSUAIDENTIFICADORChanging(value);
                    this.SendPropertyChanging("USUAIDENTIFICADOR");
                    this._USUAIDENTIFICADOR = value;
                    this.SendPropertyChanged("USUAIDENTIFICADOR");
                    this.OnUSUAIDENTIFICADORChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombres
        /// </summary>
        [Column(Name = @"USUA_NOMBRE", Storage = "_USUANOMBRE", CanBeNull = false, DbType = "VARCHAR2(100 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string USUANOMBRE
        {
            get
            {
                return this._USUANOMBRE;
            }
            set
            {
                if (this._USUANOMBRE != value)
                {
                    this.OnUSUANOMBREChanging(value);
                    this.SendPropertyChanging("USUANOMBRE");
                    this._USUANOMBRE = value;
                    this.SendPropertyChanged("USUANOMBRE");
                    this.OnUSUANOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// Identificacion de usuario
        /// </summary>
        [Column(Name = @"USUA_IDENTIFICACION", Storage = "_USUAIDENTIFICACION", CanBeNull = false, DbType = "VARCHAR2(11 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string USUAIDENTIFICACION
        {
            get
            {
                return this._USUAIDENTIFICACION;
            }
            set
            {
                if (this._USUAIDENTIFICACION != value)
                {
                    this.OnUSUAIDENTIFICACIONChanging(value);
                    this.SendPropertyChanging("USUAIDENTIFICACION");
                    this._USUAIDENTIFICACION = value;
                    this.SendPropertyChanged("USUAIDENTIFICACION");
                    this.OnUSUAIDENTIFICACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Estado del registro
        /// </summary>
        [Column(Name = @"USUA_ESTADO", Storage = "_USUAESTADO", CanBeNull = false, DbType = "VARCHAR2(1 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string USUAESTADO
        {
            get
            {
                return this._USUAESTADO;
            }
            set
            {
                if (this._USUAESTADO != value)
                {
                    this.OnUSUAESTADOChanging(value);
                    this.SendPropertyChanging("USUAESTADO");
                    this._USUAESTADO = value;
                    this.SendPropertyChanged("USUAESTADO");
                    this.OnUSUAESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// Clave
        /// </summary>
        [Column(Name = @"USUA_CLAVE", Storage = "_USUACLAVE", CanBeNull = false, DbType = "VARCHAR2(256 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string USUACLAVE
        {
            get
            {
                return this._USUACLAVE;
            }
            set
            {
                if (this._USUACLAVE != value)
                {
                    this.OnUSUACLAVEChanging(value);
                    this.SendPropertyChanging("USUACLAVE");
                    this._USUACLAVE = value;
                    this.SendPropertyChanged("USUACLAVE");
                    this.OnUSUACLAVEChanged();
                }
            }
        }

    
        /// <summary>
        /// Auditoria
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Auditoria
        /// </summary>
        [Column(Name = @"LOGS_FECHA", Storage = "_LOGSFECHA", DbType = "TIMESTAMP(6) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? LOGSFECHA
        {
            get
            {
                return this._LOGSFECHA;
            }
            set
            {
                if (this._LOGSFECHA != value)
                {
                    this.OnLOGSFECHAChanging(value);
                    this.SendPropertyChanging("LOGSFECHA");
                    this._LOGSFECHA = value;
                    this.SendPropertyChanged("LOGSFECHA");
                    this.OnLOGSFECHAChanged();
                }
            }
        }

    
        /// <summary>
        /// Direccion de correo electronico
        /// </summary>
        [Column(Name = @"USUA_CORREO", Storage = "_USUACORREO", DbType = "VARCHAR2(80 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string USUACORREO
        {
            get
            {
                return this._USUACORREO;
            }
            set
            {
                if (this._USUACORREO != value)
                {
                    this.OnUSUACORREOChanging(value);
                    this.SendPropertyChanging("USUACORREO");
                    this._USUACORREO = value;
                    this.SendPropertyChanged("USUACORREO");
                    this.OnUSUACORREOChanged();
                }
            }
        }

    
        /// <summary>
        /// Tipo de usuario
        /// </summary>
        [Column(Name = @"USUA_TIPO", Storage = "_USUATIPO", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string USUATIPO
        {
            get
            {
                return this._USUATIPO;
            }
            set
            {
                if (this._USUATIPO != value)
                {
                    this.OnUSUATIPOChanging(value);
                    this.SendPropertyChanging("USUATIPO");
                    this._USUATIPO = value;
                    this.SendPropertyChanged("USUATIPO");
                    this.OnUSUATIPOChanged();
                }
            }
        }

    
        /// <summary>
        /// Pagina inicial 
        /// </summary>
        [Column(Name = @"USUA_URLDEFECTO", Storage = "_USUAURLDEFECTO", DbType = "VARCHAR2(50 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string USUAURLDEFECTO
        {
            get
            {
                return this._USUAURLDEFECTO;
            }
            set
            {
                if (this._USUAURLDEFECTO != value)
                {
                    this.OnUSUAURLDEFECTOChanging(value);
                    this.SendPropertyChanging("USUAURLDEFECTO");
                    this._USUAURLDEFECTO = value;
                    this.SendPropertyChanged("USUAURLDEFECTO");
                    this.OnUSUAURLDEFECTOChanged();
                }
            }
        }

    
        /// <summary>
        /// Rol
        /// </summary>
        [Column(Name = @"ROLE_ROL", Storage = "_ROLEROL", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? ROLEROL
        {
            get
            {
                return this._ROLEROL;
            }
            set
            {
                if (this._ROLEROL != value)
                {
                    if (this._POGEROL.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnROLEROLChanging(value);
                    this.SendPropertyChanging("ROLEROL");
                    this._ROLEROL = value;
                    this.SendPropertyChanged("ROLEROL");
                    this.OnROLEROLChanged();
                }
            }
        }

    
        /// <summary>
        /// Id de proveedor
        /// </summary>
        [Column(Name = @"PROV_PROVEEDOR", Storage = "_PROVPROVEEDOR", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVPROVEEDOR
        {
            get
            {
                return this._PROVPROVEEDOR;
            }
            set
            {
                if (this._PROVPROVEEDOR != value)
                {
                    if (this._PONEPROVEEDOR.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnPROVPROVEEDORChanging(value);
                    this.SendPropertyChanging("PROVPROVEEDOR");
                    this._PROVPROVEEDOR = value;
                    this.SendPropertyChanged("PROVPROVEEDOR");
                    this.OnPROVPROVEEDORChanged();
                }
            }
        }

    
        /// <summary>
        /// Area a la que pertenece el usuario
        /// </summary>
        [Column(Name = @"CLAS_AREA2", Storage = "_CLASAREA2", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? CLASAREA2
        {
            get
            {
                return this._CLASAREA2;
            }
            set
            {
                if (this._CLASAREA2 != value)
                {
                    if (this._POGECLASEVALOR.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCLASAREA2Changing(value);
                    this.SendPropertyChanging("CLASAREA2");
                    this._CLASAREA2 = value;
                    this.SendPropertyChanged("CLASAREA2");
                    this.OnCLASAREA2Changed();
                }
            }
        }

    
        /// <summary>
        /// Indica si la clave vence S/N
        /// </summary>
        [Column(Name = @"USUA_VENCECLAVE", Storage = "_USUAVENCECLAVE", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string USUAVENCECLAVE
        {
            get
            {
                return this._USUAVENCECLAVE;
            }
            set
            {
                if (this._USUAVENCECLAVE != value)
                {
                    this.OnUSUAVENCECLAVEChanging(value);
                    this.SendPropertyChanging("USUAVENCECLAVE");
                    this._USUAVENCECLAVE = value;
                    this.SendPropertyChanged("USUAVENCECLAVE");
                    this.OnUSUAVENCECLAVEChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha en la que vence la clave
        /// </summary>
        [Column(Name = @"USUA_FECHAVENCE", Storage = "_USUAFECHAVENCE", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? USUAFECHAVENCE
        {
            get
            {
                return this._USUAFECHAVENCE;
            }
            set
            {
                if (this._USUAFECHAVENCE != value)
                {
                    this.OnUSUAFECHAVENCEChanging(value);
                    this.SendPropertyChanging("USUAFECHAVENCE");
                    this._USUAFECHAVENCE = value;
                    this.SendPropertyChanged("USUAFECHAVENCE");
                    this.OnUSUAFECHAVENCEChanged();
                }
            }
        }

    
        /// <summary>
        /// Indica si en el proximo logueo el usuario debe cambiar la clave
        /// </summary>
        [Column(Name = @"USUA_CAMBIARCLAVE", Storage = "_USUACAMBIARCLAVE", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string USUACAMBIARCLAVE
        {
            get
            {
                return this._USUACAMBIARCLAVE;
            }
            set
            {
                if (this._USUACAMBIARCLAVE != value)
                {
                    this.OnUSUACAMBIARCLAVEChanging(value);
                    this.SendPropertyChanging("USUACAMBIARCLAVE");
                    this._USUACAMBIARCLAVE = value;
                    this.SendPropertyChanged("USUACAMBIARCLAVE");
                    this.OnUSUACAMBIARCLAVEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEPROVEEDOR in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PONEPROVEEDOR_POGEUSUARIO", Storage="_PONEPROVEEDOR", ThisKey="PROVPROVEEDOR", OtherKey="PROVPROVEEDOR", IsForeignKey=true)]
        public PONEPROVEEDOR PONEPROVEEDOR
        {
            get
            {
                return this._PONEPROVEEDOR.Entity;
            }
            set
            {
                PONEPROVEEDOR previousValue = this._PONEPROVEEDOR.Entity;
                if ((previousValue != value) || (this._PONEPROVEEDOR.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("PONEPROVEEDOR");
                    if (previousValue != null)
                    {
                        this._PONEPROVEEDOR.Entity = null;
                        previousValue.POGEUSUARIOs.Remove(this);
                    }
                    this._PONEPROVEEDOR.Entity = value;
                    if (value != null)
                    {
                        this._PROVPROVEEDOR = value.PROVPROVEEDOR;
                        value.POGEUSUARIOs.Add(this);
                    }
                    else
                    {
                        this._PROVPROVEEDOR = default(decimal?);
                    }
                    this.SendPropertyChanged("PONEPROVEEDOR");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POGENOTIFICACIONXUSUARIOs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGEUSUARIO_POGENOTIFICACIONXUSUARIO", Storage="_POGENOTIFICACIONXUSUARIOs", ThisKey="USUAUSUARIO", OtherKey="USUAUSUARIO", DeleteRule="NO ACTION")]
        public EntitySet<POGENOTIFICACIONXUSUARIO> POGENOTIFICACIONXUSUARIOs
        {
            get
            {
                return this._POGENOTIFICACIONXUSUARIOs;
            }
            set
            {
                this._POGENOTIFICACIONXUSUARIOs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for POGEAUTORIZADORGERENCIAs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGEUSUARIO_POGEAUTORIZADORGERENCIA", Storage="_POGEAUTORIZADORGERENCIAs", ThisKey="USUAUSUARIO", OtherKey="USUAUSUARIO", DeleteRule="NO ACTION")]
        public EntitySet<POGEAUTORIZADORGERENCIA> POGEAUTORIZADORGERENCIAs
        {
            get
            {
                return this._POGEAUTORIZADORGERENCIAs;
            }
            set
            {
                this._POGEAUTORIZADORGERENCIAs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for POGECLASEVALOR in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGECLASEVALOR_POGEUSUARIO", Storage="_POGECLASEVALOR", ThisKey="CLASAREA2", OtherKey="CLVACLASEVALOR", IsForeignKey=true)]
        public POGECLASEVALOR POGECLASEVALOR
        {
            get
            {
                return this._POGECLASEVALOR.Entity;
            }
            set
            {
                POGECLASEVALOR previousValue = this._POGECLASEVALOR.Entity;
                if ((previousValue != value) || (this._POGECLASEVALOR.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("POGECLASEVALOR");
                    if (previousValue != null)
                    {
                        this._POGECLASEVALOR.Entity = null;
                        previousValue.POGEUSUARIOs.Remove(this);
                    }
                    this._POGECLASEVALOR.Entity = value;
                    if (value != null)
                    {
                        this._CLASAREA2 = value.CLVACLASEVALOR;
                        value.POGEUSUARIOs.Add(this);
                    }
                    else
                    {
                        this._CLASAREA2 = default(decimal?);
                    }
                    this.SendPropertyChanged("POGECLASEVALOR");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POGEROL in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGEROL_POGEUSUARIO", Storage="_POGEROL", ThisKey="ROLEROL", OtherKey="ROLEROL", IsForeignKey=true)]
        public POGEROL POGEROL
        {
            get
            {
                return this._POGEROL.Entity;
            }
            set
            {
                POGEROL previousValue = this._POGEROL.Entity;
                if ((previousValue != value) || (this._POGEROL.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("POGEROL");
                    if (previousValue != null)
                    {
                        this._POGEROL.Entity = null;
                        previousValue.POGEUSUARIOs.Remove(this);
                    }
                    this._POGEROL.Entity = value;
                    if (value != null)
                    {
                        this._ROLEROL = value.ROLEROL;
                        value.POGEUSUARIOs.Add(this);
                    }
                    else
                    {
                        this._ROLEROL = default(decimal?);
                    }
                    this.SendPropertyChanged("POGEROL");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_POGENOTIFICACIONXUSUARIOs(POGENOTIFICACIONXUSUARIO entity)
        {
            this.SendPropertyChanging("POGENOTIFICACIONXUSUARIOs");
            entity.POGEUSUARIO = this;
        }
    
        private void detach_POGENOTIFICACIONXUSUARIOs(POGENOTIFICACIONXUSUARIO entity)
        {
            this.SendPropertyChanging("POGENOTIFICACIONXUSUARIOs");
            entity.POGEUSUARIO = null;
        }

        private void attach_POGEAUTORIZADORGERENCIAs(POGEAUTORIZADORGERENCIA entity)
        {
            this.SendPropertyChanging("POGEAUTORIZADORGERENCIAs");
            entity.POGEUSUARIO = this;
        }
    
        private void detach_POGEAUTORIZADORGERENCIAs(POGEAUTORIZADORGERENCIA entity)
        {
            this.SendPropertyChanging("POGEAUTORIZADORGERENCIAs");
            entity.POGEUSUARIO = null;
        }
    }

    /// <summary>
    /// Roles para agrupar permisos a usuarios a las opciones
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.POGE_ROL")]
    public partial class POGEROL : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _ROLEROL;

        private string _ROLENOMBRE;

        private string _ROLEESTADO;

        private decimal? _LOGSUSUARIO;

        private string _ROLEOBSERVACION;
        #pragma warning restore 0649

        private EntitySet<POGEUSUARIO> _POGEUSUARIOs;

        private EntitySet<POGEOPCIONXROL> _POGEOPCIONXROLs;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnROLEROLChanging(decimal value);
        partial void OnROLEROLChanged();
        partial void OnROLENOMBREChanging(string value);
        partial void OnROLENOMBREChanged();
        partial void OnROLEESTADOChanging(string value);
        partial void OnROLEESTADOChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        partial void OnROLEOBSERVACIONChanging(string value);
        partial void OnROLEOBSERVACIONChanged();
        #endregion

        public POGEROL()
        {
            this._POGEUSUARIOs = new EntitySet<POGEUSUARIO>(new Action<POGEUSUARIO>(this.attach_POGEUSUARIOs), new Action<POGEUSUARIO>(this.detach_POGEUSUARIOs));
            this._POGEOPCIONXROLs = new EntitySet<POGEOPCIONXROL>(new Action<POGEOPCIONXROL>(this.attach_POGEOPCIONXROLs), new Action<POGEOPCIONXROL>(this.detach_POGEOPCIONXROLs));
            OnCreated();
        }

    
        /// <summary>
        /// Codigo Rol
        /// </summary>
        [Column(Name = @"ROLE_ROL", Storage = "_ROLEROL", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal ROLEROL
        {
            get
            {
                return this._ROLEROL;
            }
            set
            {
                if (this._ROLEROL != value)
                {
                    this.OnROLEROLChanging(value);
                    this.SendPropertyChanging("ROLEROL");
                    this._ROLEROL = value;
                    this.SendPropertyChanged("ROLEROL");
                    this.OnROLEROLChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre
        /// </summary>
        [Column(Name = @"ROLE_NOMBRE", Storage = "_ROLENOMBRE", DbType = "VARCHAR2(50 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ROLENOMBRE
        {
            get
            {
                return this._ROLENOMBRE;
            }
            set
            {
                if (this._ROLENOMBRE != value)
                {
                    this.OnROLENOMBREChanging(value);
                    this.SendPropertyChanging("ROLENOMBRE");
                    this._ROLENOMBRE = value;
                    this.SendPropertyChanged("ROLENOMBRE");
                    this.OnROLENOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// Estado del registro
        /// </summary>
        [Column(Name = @"ROLE_ESTADO", Storage = "_ROLEESTADO", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ROLEESTADO
        {
            get
            {
                return this._ROLEESTADO;
            }
            set
            {
                if (this._ROLEESTADO != value)
                {
                    this.OnROLEESTADOChanging(value);
                    this.SendPropertyChanging("ROLEESTADO");
                    this._ROLEESTADO = value;
                    this.SendPropertyChanged("ROLEESTADO");
                    this.OnROLEESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario campo para auditoria
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Observacion del rol
        /// </summary>
        [Column(Name = @"ROLE_OBSERVACION", Storage = "_ROLEOBSERVACION", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ROLEOBSERVACION
        {
            get
            {
                return this._ROLEOBSERVACION;
            }
            set
            {
                if (this._ROLEOBSERVACION != value)
                {
                    this.OnROLEOBSERVACIONChanging(value);
                    this.SendPropertyChanging("ROLEOBSERVACION");
                    this._ROLEOBSERVACION = value;
                    this.SendPropertyChanged("ROLEOBSERVACION");
                    this.OnROLEOBSERVACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POGEUSUARIOs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGEROL_POGEUSUARIO", Storage="_POGEUSUARIOs", ThisKey="ROLEROL", OtherKey="ROLEROL", DeleteRule="NO ACTION")]
        public EntitySet<POGEUSUARIO> POGEUSUARIOs
        {
            get
            {
                return this._POGEUSUARIOs;
            }
            set
            {
                this._POGEUSUARIOs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for POGEOPCIONXROLs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGEROL_POGEOPCIONXROL", Storage="_POGEOPCIONXROLs", ThisKey="ROLEROL", OtherKey="ROLEROL", DeleteRule="NO ACTION")]
        public EntitySet<POGEOPCIONXROL> POGEOPCIONXROLs
        {
            get
            {
                return this._POGEOPCIONXROLs;
            }
            set
            {
                this._POGEOPCIONXROLs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_POGEUSUARIOs(POGEUSUARIO entity)
        {
            this.SendPropertyChanging("POGEUSUARIOs");
            entity.POGEROL = this;
        }
    
        private void detach_POGEUSUARIOs(POGEUSUARIO entity)
        {
            this.SendPropertyChanging("POGEUSUARIOs");
            entity.POGEROL = null;
        }

        private void attach_POGEOPCIONXROLs(POGEOPCIONXROL entity)
        {
            this.SendPropertyChanging("POGEOPCIONXROLs");
            entity.POGEROL = this;
        }
    
        private void detach_POGEOPCIONXROLs(POGEOPCIONXROL entity)
        {
            this.SendPropertyChanging("POGEOPCIONXROLs");
            entity.POGEROL = null;
        }
    }

    /// <summary>
    /// Almacena la informacion de los paises de los proveedores
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.POGE_PAIS")]
    public partial class POGEPAI : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _PAISCODIGO;

        private string _PAISCODPAIS;

        private string _PAISNOMBRE;

        private string _PAISESTADO;
        #pragma warning restore 0649

        private EntitySet<POGEDEPARTAMENTO> _POGEDEPARTAMENTOs;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnPAISCODIGOChanging(decimal value);
        partial void OnPAISCODIGOChanged();
        partial void OnPAISCODPAISChanging(string value);
        partial void OnPAISCODPAISChanged();
        partial void OnPAISNOMBREChanging(string value);
        partial void OnPAISNOMBREChanged();
        partial void OnPAISESTADOChanging(string value);
        partial void OnPAISESTADOChanged();
        #endregion

        public POGEPAI()
        {
            this._POGEDEPARTAMENTOs = new EntitySet<POGEDEPARTAMENTO>(new Action<POGEDEPARTAMENTO>(this.attach_POGEDEPARTAMENTOs), new Action<POGEDEPARTAMENTO>(this.detach_POGEDEPARTAMENTOs));
            OnCreated();
        }

    
        /// <summary>
        /// Codigo secuencia de la tabla 
        /// </summary>
        [Column(Name = @"PAIS_CODIGO", Storage = "_PAISCODIGO", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal PAISCODIGO
        {
            get
            {
                return this._PAISCODIGO;
            }
            set
            {
                if (this._PAISCODIGO != value)
                {
                    this.OnPAISCODIGOChanging(value);
                    this.SendPropertyChanging("PAISCODIGO");
                    this._PAISCODIGO = value;
                    this.SendPropertyChanged("PAISCODIGO");
                    this.OnPAISCODIGOChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo que identifica un  pais segun tabla DIAN
        /// </summary>
        [Column(Name = @"PAIS_CODPAIS", Storage = "_PAISCODPAIS", CanBeNull = false, DbType = "VARCHAR2(3 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PAISCODPAIS
        {
            get
            {
                return this._PAISCODPAIS;
            }
            set
            {
                if (this._PAISCODPAIS != value)
                {
                    this.OnPAISCODPAISChanging(value);
                    this.SendPropertyChanging("PAISCODPAIS");
                    this._PAISCODPAIS = value;
                    this.SendPropertyChanged("PAISCODPAIS");
                    this.OnPAISCODPAISChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre del pais
        /// </summary>
        [Column(Name = @"PAIS_NOMBRE", Storage = "_PAISNOMBRE", CanBeNull = false, DbType = "VARCHAR2(50 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PAISNOMBRE
        {
            get
            {
                return this._PAISNOMBRE;
            }
            set
            {
                if (this._PAISNOMBRE != value)
                {
                    this.OnPAISNOMBREChanging(value);
                    this.SendPropertyChanging("PAISNOMBRE");
                    this._PAISNOMBRE = value;
                    this.SendPropertyChanged("PAISNOMBRE");
                    this.OnPAISNOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// A: Activo, I: Inactivo, estado del registro
        /// </summary>
        [Column(Name = @"PAIS_ESTADO", Storage = "_PAISESTADO", CanBeNull = false, DbType = "VARCHAR2(1 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PAISESTADO
        {
            get
            {
                return this._PAISESTADO;
            }
            set
            {
                if (this._PAISESTADO != value)
                {
                    this.OnPAISESTADOChanging(value);
                    this.SendPropertyChanging("PAISESTADO");
                    this._PAISESTADO = value;
                    this.SendPropertyChanged("PAISESTADO");
                    this.OnPAISESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POGEDEPARTAMENTOs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGEPAI_POGEDEPARTAMENTO", Storage="_POGEDEPARTAMENTOs", ThisKey="PAISCODIGO", OtherKey="PAISCODIGO", DeleteRule="NO ACTION")]
        public EntitySet<POGEDEPARTAMENTO> POGEDEPARTAMENTOs
        {
            get
            {
                return this._POGEDEPARTAMENTOs;
            }
            set
            {
                this._POGEDEPARTAMENTOs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_POGEDEPARTAMENTOs(POGEDEPARTAMENTO entity)
        {
            this.SendPropertyChanging("POGEDEPARTAMENTOs");
            entity.POGEPAI = this;
        }
    
        private void detach_POGEDEPARTAMENTOs(POGEDEPARTAMENTO entity)
        {
            this.SendPropertyChanging("POGEDEPARTAMENTOs");
            entity.POGEPAI = null;
        }
    }

    /// <summary>
    /// Asociacion de roles y opciones
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.POGE_OPCIONXROL")]
    public partial class POGEOPCIONXROL : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _OPCIOPCION;

        private decimal _ROLEROL;

        private decimal? _LOGSUSUARIO;

        private decimal _OPROOPCIONXROL;
        #pragma warning restore 0649

        private EntityRef<POGEROL> _POGEROL;

        private EntityRef<POGEOPCION> _POGEOPCION;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnOPCIOPCIONChanging(decimal value);
        partial void OnOPCIOPCIONChanged();
        partial void OnROLEROLChanging(decimal value);
        partial void OnROLEROLChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        partial void OnOPROOPCIONXROLChanging(decimal value);
        partial void OnOPROOPCIONXROLChanged();
        #endregion

        public POGEOPCIONXROL()
        {
            this._POGEROL  = default(EntityRef<POGEROL>);
            this._POGEOPCION  = default(EntityRef<POGEOPCION>);
            OnCreated();
        }

    
        /// <summary>
        /// Id opcion
        /// </summary>
        [Column(Name = @"OPCI_OPCION", Storage = "_OPCIOPCION", CanBeNull = false, DbType = "NUMBER NOT NULL")]
        public decimal OPCIOPCION
        {
            get
            {
                return this._OPCIOPCION;
            }
            set
            {
                if (this._OPCIOPCION != value)
                {
                    if (this._POGEOPCION.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnOPCIOPCIONChanging(value);
                    this.SendPropertyChanging("OPCIOPCION");
                    this._OPCIOPCION = value;
                    this.SendPropertyChanged("OPCIOPCION");
                    this.OnOPCIOPCIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Id rol
        /// </summary>
        [Column(Name = @"ROLE_ROL", Storage = "_ROLEROL", CanBeNull = false, DbType = "NUMBER NOT NULL")]
        public decimal ROLEROL
        {
            get
            {
                return this._ROLEROL;
            }
            set
            {
                if (this._ROLEROL != value)
                {
                    if (this._POGEROL.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnROLEROLChanging(value);
                    this.SendPropertyChanging("ROLEROL");
                    this._ROLEROL = value;
                    this.SendPropertyChanged("ROLEROL");
                    this.OnROLEROLChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario campo para auditoria
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"OPRO_OPCIONXROL", Storage = "_OPROOPCIONXROL", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal OPROOPCIONXROL
        {
            get
            {
                return this._OPROOPCIONXROL;
            }
            set
            {
                if (this._OPROOPCIONXROL != value)
                {
                    this.OnOPROOPCIONXROLChanging(value);
                    this.SendPropertyChanging("OPROOPCIONXROL");
                    this._OPROOPCIONXROL = value;
                    this.SendPropertyChanged("OPROOPCIONXROL");
                    this.OnOPROOPCIONXROLChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POGEROL in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGEROL_POGEOPCIONXROL", Storage="_POGEROL", ThisKey="ROLEROL", OtherKey="ROLEROL", IsForeignKey=true)]
        public POGEROL POGEROL
        {
            get
            {
                return this._POGEROL.Entity;
            }
            set
            {
                POGEROL previousValue = this._POGEROL.Entity;
                if ((previousValue != value) || (this._POGEROL.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("POGEROL");
                    if (previousValue != null)
                    {
                        this._POGEROL.Entity = null;
                        previousValue.POGEOPCIONXROLs.Remove(this);
                    }
                    this._POGEROL.Entity = value;
                    if (value != null)
                    {
                        this._ROLEROL = value.ROLEROL;
                        value.POGEOPCIONXROLs.Add(this);
                    }
                    else
                    {
                        this._ROLEROL = default(decimal);
                    }
                    this.SendPropertyChanged("POGEROL");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POGEOPCION in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGEOPCION_POGEOPCIONXROL", Storage="_POGEOPCION", ThisKey="OPCIOPCION", OtherKey="OPCIOPCION", IsForeignKey=true)]
        public POGEOPCION POGEOPCION
        {
            get
            {
                return this._POGEOPCION.Entity;
            }
            set
            {
                POGEOPCION previousValue = this._POGEOPCION.Entity;
                if ((previousValue != value) || (this._POGEOPCION.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("POGEOPCION");
                    if (previousValue != null)
                    {
                        this._POGEOPCION.Entity = null;
                        previousValue.POGEOPCIONXROLs.Remove(this);
                    }
                    this._POGEOPCION.Entity = value;
                    if (value != null)
                    {
                        this._OPCIOPCION = value.OPCIOPCION;
                        value.POGEOPCIONXROLs.Add(this);
                    }
                    else
                    {
                        this._OPCIOPCION = default(decimal);
                    }
                    this.SendPropertyChanged("POGEOPCION");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Almacena las opciones del portal de negocios, se usa para crear el menu dinamicamente
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.POGE_OPCION")]
    public partial class POGEOPCION : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _OPCIOPCION;

        private string _OPCINOMBRE;

        private string _OPCIURL;

        private decimal? _OPCIPADRE;

        private decimal? _OPCIORDEN;

        private string _OPCIESTITULO;

        private string _OPCIESTADO;

        private decimal? _LOGSUSUARIO;

        private System.DateTime? _LOGSFECHA;

        private string _OPCIICONO;
        #pragma warning restore 0649

        private EntitySet<POGEOPCIONXROL> _POGEOPCIONXROLs;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnOPCIOPCIONChanging(decimal value);
        partial void OnOPCIOPCIONChanged();
        partial void OnOPCINOMBREChanging(string value);
        partial void OnOPCINOMBREChanged();
        partial void OnOPCIURLChanging(string value);
        partial void OnOPCIURLChanged();
        partial void OnOPCIPADREChanging(decimal? value);
        partial void OnOPCIPADREChanged();
        partial void OnOPCIORDENChanging(decimal? value);
        partial void OnOPCIORDENChanged();
        partial void OnOPCIESTITULOChanging(string value);
        partial void OnOPCIESTITULOChanged();
        partial void OnOPCIESTADOChanging(string value);
        partial void OnOPCIESTADOChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        partial void OnLOGSFECHAChanging(System.DateTime? value);
        partial void OnLOGSFECHAChanged();
        partial void OnOPCIICONOChanging(string value);
        partial void OnOPCIICONOChanged();
        #endregion

        public POGEOPCION()
        {
            this._POGEOPCIONXROLs = new EntitySet<POGEOPCIONXROL>(new Action<POGEOPCIONXROL>(this.attach_POGEOPCIONXROLs), new Action<POGEOPCIONXROL>(this.detach_POGEOPCIONXROLs));
            OnCreated();
        }

    
        /// <summary>
        /// Consecutivo de la tabla
        /// </summary>
        [Column(Name = @"OPCI_OPCION", Storage = "_OPCIOPCION", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal OPCIOPCION
        {
            get
            {
                return this._OPCIOPCION;
            }
            set
            {
                if (this._OPCIOPCION != value)
                {
                    this.OnOPCIOPCIONChanging(value);
                    this.SendPropertyChanging("OPCIOPCION");
                    this._OPCIOPCION = value;
                    this.SendPropertyChanged("OPCIOPCION");
                    this.OnOPCIOPCIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre de la opcion
        /// </summary>
        [Column(Name = @"OPCI_NOMBRE", Storage = "_OPCINOMBRE", DbType = "VARCHAR2(50 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string OPCINOMBRE
        {
            get
            {
                return this._OPCINOMBRE;
            }
            set
            {
                if (this._OPCINOMBRE != value)
                {
                    this.OnOPCINOMBREChanging(value);
                    this.SendPropertyChanging("OPCINOMBRE");
                    this._OPCINOMBRE = value;
                    this.SendPropertyChanged("OPCINOMBRE");
                    this.OnOPCINOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// Url de la opcion
        /// </summary>
        [Column(Name = @"OPCI_URL", Storage = "_OPCIURL", DbType = "VARCHAR2(50 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string OPCIURL
        {
            get
            {
                return this._OPCIURL;
            }
            set
            {
                if (this._OPCIURL != value)
                {
                    this.OnOPCIURLChanging(value);
                    this.SendPropertyChanging("OPCIURL");
                    this._OPCIURL = value;
                    this.SendPropertyChanged("OPCIURL");
                    this.OnOPCIURLChanged();
                }
            }
        }

    
        /// <summary>
        /// Numero de opcion padre 
        /// </summary>
        [Column(Name = @"OPCI_PADRE", Storage = "_OPCIPADRE", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? OPCIPADRE
        {
            get
            {
                return this._OPCIPADRE;
            }
            set
            {
                if (this._OPCIPADRE != value)
                {
                    this.OnOPCIPADREChanging(value);
                    this.SendPropertyChanging("OPCIPADRE");
                    this._OPCIPADRE = value;
                    this.SendPropertyChanged("OPCIPADRE");
                    this.OnOPCIPADREChanged();
                }
            }
        }

    
        /// <summary>
        /// Orden de presentacion de la opcion en el menu
        /// </summary>
        [Column(Name = @"OPCI_ORDEN", Storage = "_OPCIORDEN", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? OPCIORDEN
        {
            get
            {
                return this._OPCIORDEN;
            }
            set
            {
                if (this._OPCIORDEN != value)
                {
                    this.OnOPCIORDENChanging(value);
                    this.SendPropertyChanging("OPCIORDEN");
                    this._OPCIORDEN = value;
                    this.SendPropertyChanged("OPCIORDEN");
                    this.OnOPCIORDENChanged();
                }
            }
        }

    
        /// <summary>
        /// Indica si la opcion es un titulo o no, S, N
        /// </summary>
        [Column(Name = @"OPCI_ESTITULO", Storage = "_OPCIESTITULO", CanBeNull = false, DbType = "VARCHAR2(1 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string OPCIESTITULO
        {
            get
            {
                return this._OPCIESTITULO;
            }
            set
            {
                if (this._OPCIESTITULO != value)
                {
                    this.OnOPCIESTITULOChanging(value);
                    this.SendPropertyChanging("OPCIESTITULO");
                    this._OPCIESTITULO = value;
                    this.SendPropertyChanged("OPCIESTITULO");
                    this.OnOPCIESTITULOChanged();
                }
            }
        }

    
        /// <summary>
        /// Indica estado del registro
        /// </summary>
        [Column(Name = @"OPCI_ESTADO", Storage = "_OPCIESTADO", CanBeNull = false, DbType = "VARCHAR2(1 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string OPCIESTADO
        {
            get
            {
                return this._OPCIESTADO;
            }
            set
            {
                if (this._OPCIESTADO != value)
                {
                    this.OnOPCIESTADOChanging(value);
                    this.SendPropertyChanging("OPCIESTADO");
                    this._OPCIESTADO = value;
                    this.SendPropertyChanged("OPCIESTADO");
                    this.OnOPCIESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario Crea registro
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha crea registro
        /// </summary>
        [Column(Name = @"LOGS_FECHA", Storage = "_LOGSFECHA", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? LOGSFECHA
        {
            get
            {
                return this._LOGSFECHA;
            }
            set
            {
                if (this._LOGSFECHA != value)
                {
                    this.OnLOGSFECHAChanging(value);
                    this.SendPropertyChanging("LOGSFECHA");
                    this._LOGSFECHA = value;
                    this.SendPropertyChanged("LOGSFECHA");
                    this.OnLOGSFECHAChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre del icono font awesome
        /// </summary>
        [Column(Name = @"OPCI_ICONO", Storage = "_OPCIICONO", DbType = "VARCHAR2(20 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string OPCIICONO
        {
            get
            {
                return this._OPCIICONO;
            }
            set
            {
                if (this._OPCIICONO != value)
                {
                    this.OnOPCIICONOChanging(value);
                    this.SendPropertyChanging("OPCIICONO");
                    this._OPCIICONO = value;
                    this.SendPropertyChanged("OPCIICONO");
                    this.OnOPCIICONOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POGEOPCIONXROLs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGEOPCION_POGEOPCIONXROL", Storage="_POGEOPCIONXROLs", ThisKey="OPCIOPCION", OtherKey="OPCIOPCION", DeleteRule="NO ACTION")]
        public EntitySet<POGEOPCIONXROL> POGEOPCIONXROLs
        {
            get
            {
                return this._POGEOPCIONXROLs;
            }
            set
            {
                this._POGEOPCIONXROLs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_POGEOPCIONXROLs(POGEOPCIONXROL entity)
        {
            this.SendPropertyChanging("POGEOPCIONXROLs");
            entity.POGEOPCION = this;
        }
    
        private void detach_POGEOPCIONXROLs(POGEOPCIONXROL entity)
        {
            this.SendPropertyChanging("POGEOPCIONXROLs");
            entity.POGEOPCION = null;
        }
    }

    /// <summary>
    /// Guarda parametrizacion de notificaciones x usuario, para saber a que usuario debe enviarse la notificacion
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.POGE_NOTIFICACIONXUSUARIO")]
    public partial class POGENOTIFICACIONXUSUARIO : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _NOUSNOTIFICACIONXUSUARIO;

        private decimal _NOTINOTIFICACION;

        private decimal _USUAUSUARIO;

        private decimal? _LOGSUSUARIO;
        #pragma warning restore 0649

        private EntityRef<POGEUSUARIO> _POGEUSUARIO;

        private EntityRef<POGENOTIFICACION> _POGENOTIFICACION;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNOUSNOTIFICACIONXUSUARIOChanging(decimal value);
        partial void OnNOUSNOTIFICACIONXUSUARIOChanged();
        partial void OnNOTINOTIFICACIONChanging(decimal value);
        partial void OnNOTINOTIFICACIONChanged();
        partial void OnUSUAUSUARIOChanging(decimal value);
        partial void OnUSUAUSUARIOChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        #endregion

        public POGENOTIFICACIONXUSUARIO()
        {
            this._POGEUSUARIO  = default(EntityRef<POGEUSUARIO>);
            this._POGENOTIFICACION  = default(EntityRef<POGENOTIFICACION>);
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"NOUS_NOTIFICACIONXUSUARIO", Storage = "_NOUSNOTIFICACIONXUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal NOUSNOTIFICACIONXUSUARIO
        {
            get
            {
                return this._NOUSNOTIFICACIONXUSUARIO;
            }
            set
            {
                if (this._NOUSNOTIFICACIONXUSUARIO != value)
                {
                    this.OnNOUSNOTIFICACIONXUSUARIOChanging(value);
                    this.SendPropertyChanging("NOUSNOTIFICACIONXUSUARIO");
                    this._NOUSNOTIFICACIONXUSUARIO = value;
                    this.SendPropertyChanged("NOUSNOTIFICACIONXUSUARIO");
                    this.OnNOUSNOTIFICACIONXUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Id de notificacion
        /// </summary>
        [Column(Name = @"NOTI_NOTIFICACION", Storage = "_NOTINOTIFICACION", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal NOTINOTIFICACION
        {
            get
            {
                return this._NOTINOTIFICACION;
            }
            set
            {
                if (this._NOTINOTIFICACION != value)
                {
                    if (this._POGENOTIFICACION.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnNOTINOTIFICACIONChanging(value);
                    this.SendPropertyChanging("NOTINOTIFICACION");
                    this._NOTINOTIFICACION = value;
                    this.SendPropertyChanged("NOTINOTIFICACION");
                    this.OnNOTINOTIFICACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Id de usuario
        /// </summary>
        [Column(Name = @"USUA_USUARIO", Storage = "_USUAUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal USUAUSUARIO
        {
            get
            {
                return this._USUAUSUARIO;
            }
            set
            {
                if (this._USUAUSUARIO != value)
                {
                    if (this._POGEUSUARIO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnUSUAUSUARIOChanging(value);
                    this.SendPropertyChanging("USUAUSUARIO");
                    this._USUAUSUARIO = value;
                    this.SendPropertyChanged("USUAUSUARIO");
                    this.OnUSUAUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario campo para auditoria
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POGEUSUARIO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGEUSUARIO_POGENOTIFICACIONXUSUARIO", Storage="_POGEUSUARIO", ThisKey="USUAUSUARIO", OtherKey="USUAUSUARIO", IsForeignKey=true)]
        public POGEUSUARIO POGEUSUARIO
        {
            get
            {
                return this._POGEUSUARIO.Entity;
            }
            set
            {
                POGEUSUARIO previousValue = this._POGEUSUARIO.Entity;
                if ((previousValue != value) || (this._POGEUSUARIO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("POGEUSUARIO");
                    if (previousValue != null)
                    {
                        this._POGEUSUARIO.Entity = null;
                        previousValue.POGENOTIFICACIONXUSUARIOs.Remove(this);
                    }
                    this._POGEUSUARIO.Entity = value;
                    if (value != null)
                    {
                        this._USUAUSUARIO = value.USUAUSUARIO;
                        value.POGENOTIFICACIONXUSUARIOs.Add(this);
                    }
                    else
                    {
                        this._USUAUSUARIO = default(decimal);
                    }
                    this.SendPropertyChanged("POGEUSUARIO");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POGENOTIFICACION in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGENOTIFICACION_POGENOTIFICACIONXUSUARIO", Storage="_POGENOTIFICACION", ThisKey="NOTINOTIFICACION", OtherKey="NOTINOTIFICACION", IsForeignKey=true)]
        public POGENOTIFICACION POGENOTIFICACION
        {
            get
            {
                return this._POGENOTIFICACION.Entity;
            }
            set
            {
                POGENOTIFICACION previousValue = this._POGENOTIFICACION.Entity;
                if ((previousValue != value) || (this._POGENOTIFICACION.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("POGENOTIFICACION");
                    if (previousValue != null)
                    {
                        this._POGENOTIFICACION.Entity = null;
                        previousValue.POGENOTIFICACIONXUSUARIOs.Remove(this);
                    }
                    this._POGENOTIFICACION.Entity = value;
                    if (value != null)
                    {
                        this._NOTINOTIFICACION = value.NOTINOTIFICACION;
                        value.POGENOTIFICACIONXUSUARIOs.Add(this);
                    }
                    else
                    {
                        this._NOTINOTIFICACION = default(decimal);
                    }
                    this.SendPropertyChanged("POGENOTIFICACION");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Almacena el registro de notificaciones que envia el sistema por correo, con sus repectivas plantillas para el cuerpo del mensaje
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.POGE_NOTIFICACION")]
    public partial class POGENOTIFICACION : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _NOTINOTIFICACION;

        private string _NOTINOMBRE;

        private string _NOTIESTADO;

        private string _NOTIASUNTO;

        private string _NOTIPLANTILLA;

        private string _NOTITIPO;

        private decimal? _LOGSUSUARIO;
        #pragma warning restore 0649

        private EntitySet<POGENOTIFICACIONXUSUARIO> _POGENOTIFICACIONXUSUARIOs;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNOTINOTIFICACIONChanging(decimal value);
        partial void OnNOTINOTIFICACIONChanged();
        partial void OnNOTINOMBREChanging(string value);
        partial void OnNOTINOMBREChanged();
        partial void OnNOTIESTADOChanging(string value);
        partial void OnNOTIESTADOChanged();
        partial void OnNOTIASUNTOChanging(string value);
        partial void OnNOTIASUNTOChanged();
        partial void OnNOTIPLANTILLAChanging(string value);
        partial void OnNOTIPLANTILLAChanged();
        partial void OnNOTITIPOChanging(string value);
        partial void OnNOTITIPOChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        #endregion

        public POGENOTIFICACION()
        {
            this._POGENOTIFICACIONXUSUARIOs = new EntitySet<POGENOTIFICACIONXUSUARIO>(new Action<POGENOTIFICACIONXUSUARIO>(this.attach_POGENOTIFICACIONXUSUARIOs), new Action<POGENOTIFICACIONXUSUARIO>(this.detach_POGENOTIFICACIONXUSUARIOs));
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"NOTI_NOTIFICACION", Storage = "_NOTINOTIFICACION", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal NOTINOTIFICACION
        {
            get
            {
                return this._NOTINOTIFICACION;
            }
            set
            {
                if (this._NOTINOTIFICACION != value)
                {
                    this.OnNOTINOTIFICACIONChanging(value);
                    this.SendPropertyChanging("NOTINOTIFICACION");
                    this._NOTINOTIFICACION = value;
                    this.SendPropertyChanged("NOTINOTIFICACION");
                    this.OnNOTINOTIFICACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre notificacion
        /// </summary>
        [Column(Name = @"NOTI_NOMBRE", Storage = "_NOTINOMBRE", CanBeNull = false, DbType = "VARCHAR2(20 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOTINOMBRE
        {
            get
            {
                return this._NOTINOMBRE;
            }
            set
            {
                if (this._NOTINOMBRE != value)
                {
                    this.OnNOTINOMBREChanging(value);
                    this.SendPropertyChanging("NOTINOMBRE");
                    this._NOTINOMBRE = value;
                    this.SendPropertyChanged("NOTINOMBRE");
                    this.OnNOTINOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// Estado de registro
        /// </summary>
        [Column(Name = @"NOTI_ESTADO", Storage = "_NOTIESTADO", CanBeNull = false, DbType = "VARCHAR2(1 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOTIESTADO
        {
            get
            {
                return this._NOTIESTADO;
            }
            set
            {
                if (this._NOTIESTADO != value)
                {
                    this.OnNOTIESTADOChanging(value);
                    this.SendPropertyChanging("NOTIESTADO");
                    this._NOTIESTADO = value;
                    this.SendPropertyChanged("NOTIESTADO");
                    this.OnNOTIESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// Asunto que va en el correo
        /// </summary>
        [Column(Name = @"NOTI_ASUNTO", Storage = "_NOTIASUNTO", CanBeNull = false, DbType = "VARCHAR2(70 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOTIASUNTO
        {
            get
            {
                return this._NOTIASUNTO;
            }
            set
            {
                if (this._NOTIASUNTO != value)
                {
                    this.OnNOTIASUNTOChanging(value);
                    this.SendPropertyChanging("NOTIASUNTO");
                    this._NOTIASUNTO = value;
                    this.SendPropertyChanged("NOTIASUNTO");
                    this.OnNOTIASUNTOChanged();
                }
            }
        }

    
        /// <summary>
        /// Cuerpo del correo
        /// </summary>
        [Column(Name = @"NOTI_PLANTILLA", Storage = "_NOTIPLANTILLA", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOTIPLANTILLA
        {
            get
            {
                return this._NOTIPLANTILLA;
            }
            set
            {
                if (this._NOTIPLANTILLA != value)
                {
                    this.OnNOTIPLANTILLAChanging(value);
                    this.SendPropertyChanging("NOTIPLANTILLA");
                    this._NOTIPLANTILLA = value;
                    this.SendPropertyChanged("NOTIPLANTILLA");
                    this.OnNOTIPLANTILLAChanged();
                }
            }
        }

    
        /// <summary>
        /// Tipo de notificacion&gt;&gt; I: Interno, E: Externo
        /// </summary>
        [Column(Name = @"NOTI_TIPO", Storage = "_NOTITIPO", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOTITIPO
        {
            get
            {
                return this._NOTITIPO;
            }
            set
            {
                if (this._NOTITIPO != value)
                {
                    this.OnNOTITIPOChanging(value);
                    this.SendPropertyChanging("NOTITIPO");
                    this._NOTITIPO = value;
                    this.SendPropertyChanged("NOTITIPO");
                    this.OnNOTITIPOChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario campo para auditoria
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POGENOTIFICACIONXUSUARIOs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGENOTIFICACION_POGENOTIFICACIONXUSUARIO", Storage="_POGENOTIFICACIONXUSUARIOs", ThisKey="NOTINOTIFICACION", OtherKey="NOTINOTIFICACION", DeleteRule="NO ACTION")]
        public EntitySet<POGENOTIFICACIONXUSUARIO> POGENOTIFICACIONXUSUARIOs
        {
            get
            {
                return this._POGENOTIFICACIONXUSUARIOs;
            }
            set
            {
                this._POGENOTIFICACIONXUSUARIOs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_POGENOTIFICACIONXUSUARIOs(POGENOTIFICACIONXUSUARIO entity)
        {
            this.SendPropertyChanging("POGENOTIFICACIONXUSUARIOs");
            entity.POGENOTIFICACION = this;
        }
    
        private void detach_POGENOTIFICACIONXUSUARIOs(POGENOTIFICACIONXUSUARIO entity)
        {
            this.SendPropertyChanging("POGENOTIFICACIONXUSUARIOs");
            entity.POGENOTIFICACION = null;
        }
    }

    /// <summary>
    /// Almacena la informacion de los municipios para le registro de proveedores, se baso en el DANE, pero sirve para almacenar de cualquier pais
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.POGE_MUNICIPIO")]
    public partial class POGEMUNICIPIO : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _MUNICODIGO;

        private string _MUNICODMUNICIPIO;

        private decimal _DEPACODIGO;

        private string _MUNINOMBRE;
        #pragma warning restore 0649

        private EntityRef<POGEDEPARTAMENTO> _POGEDEPARTAMENTO;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMUNICODIGOChanging(decimal value);
        partial void OnMUNICODIGOChanged();
        partial void OnMUNICODMUNICIPIOChanging(string value);
        partial void OnMUNICODMUNICIPIOChanged();
        partial void OnDEPACODIGOChanging(decimal value);
        partial void OnDEPACODIGOChanged();
        partial void OnMUNINOMBREChanging(string value);
        partial void OnMUNINOMBREChanged();
        #endregion

        public POGEMUNICIPIO()
        {
            this._POGEDEPARTAMENTO  = default(EntityRef<POGEDEPARTAMENTO>);
            OnCreated();
        }

    
        /// <summary>
        /// Codigo de secuencia de la tabla de municipios
        /// </summary>
        [Column(Name = @"MUNI_CODIGO", Storage = "_MUNICODIGO", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal MUNICODIGO
        {
            get
            {
                return this._MUNICODIGO;
            }
            set
            {
                if (this._MUNICODIGO != value)
                {
                    this.OnMUNICODIGOChanging(value);
                    this.SendPropertyChanging("MUNICODIGO");
                    this._MUNICODIGO = value;
                    this.SendPropertyChanged("MUNICODIGO");
                    this.OnMUNICODIGOChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo del municipio, se baso en el DANE, pero sirve para almacenar de cualquier pais
        /// </summary>
        [Column(Name = @"MUNI_CODMUNICIPIO", Storage = "_MUNICODMUNICIPIO", CanBeNull = false, DbType = "VARCHAR2(4 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MUNICODMUNICIPIO
        {
            get
            {
                return this._MUNICODMUNICIPIO;
            }
            set
            {
                if (this._MUNICODMUNICIPIO != value)
                {
                    this.OnMUNICODMUNICIPIOChanging(value);
                    this.SendPropertyChanging("MUNICODMUNICIPIO");
                    this._MUNICODMUNICIPIO = value;
                    this.SendPropertyChanged("MUNICODMUNICIPIO");
                    this.OnMUNICODMUNICIPIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de la secuencia de la tabla de departamento al que pertenece el municipio
        /// </summary>
        [Column(Name = @"DEPA_CODIGO", Storage = "_DEPACODIGO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal DEPACODIGO
        {
            get
            {
                return this._DEPACODIGO;
            }
            set
            {
                if (this._DEPACODIGO != value)
                {
                    if (this._POGEDEPARTAMENTO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnDEPACODIGOChanging(value);
                    this.SendPropertyChanging("DEPACODIGO");
                    this._DEPACODIGO = value;
                    this.SendPropertyChanged("DEPACODIGO");
                    this.OnDEPACODIGOChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre del municipio
        /// </summary>
        [Column(Name = @"MUNI_NOMBRE", Storage = "_MUNINOMBRE", CanBeNull = false, DbType = "VARCHAR2(30 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MUNINOMBRE
        {
            get
            {
                return this._MUNINOMBRE;
            }
            set
            {
                if (this._MUNINOMBRE != value)
                {
                    this.OnMUNINOMBREChanging(value);
                    this.SendPropertyChanging("MUNINOMBRE");
                    this._MUNINOMBRE = value;
                    this.SendPropertyChanged("MUNINOMBRE");
                    this.OnMUNINOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POGEDEPARTAMENTO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGEDEPARTAMENTO_POGEMUNICIPIO", Storage="_POGEDEPARTAMENTO", ThisKey="DEPACODIGO", OtherKey="DEPACODIGO", IsForeignKey=true)]
        public POGEDEPARTAMENTO POGEDEPARTAMENTO
        {
            get
            {
                return this._POGEDEPARTAMENTO.Entity;
            }
            set
            {
                POGEDEPARTAMENTO previousValue = this._POGEDEPARTAMENTO.Entity;
                if ((previousValue != value) || (this._POGEDEPARTAMENTO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("POGEDEPARTAMENTO");
                    if (previousValue != null)
                    {
                        this._POGEDEPARTAMENTO.Entity = null;
                        previousValue.POGEMUNICIPIOs.Remove(this);
                    }
                    this._POGEDEPARTAMENTO.Entity = value;
                    if (value != null)
                    {
                        this._DEPACODIGO = value.DEPACODIGO;
                        value.POGEMUNICIPIOs.Add(this);
                    }
                    else
                    {
                        this._DEPACODIGO = default(decimal);
                    }
                    this.SendPropertyChanged("POGEDEPARTAMENTO");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Modulo de menu, parar construir los modulos en el menu de usuario
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.POGE_MODULO")]
    public partial class POGEMODULO : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _MODUMODULO;

        private string _MODUNOMBRE;

        private string _MODUICONO;

        private string _MODUESTADO;
        #pragma warning restore 0649

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMODUMODULOChanging(decimal value);
        partial void OnMODUMODULOChanged();
        partial void OnMODUNOMBREChanging(string value);
        partial void OnMODUNOMBREChanged();
        partial void OnMODUICONOChanging(string value);
        partial void OnMODUICONOChanged();
        partial void OnMODUESTADOChanging(string value);
        partial void OnMODUESTADOChanged();
        #endregion

        public POGEMODULO()
        {
            OnCreated();
        }

    
        /// <summary>
        /// Id Modulo
        /// </summary>
        [Column(Name = @"MODU_MODULO", Storage = "_MODUMODULO", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal MODUMODULO
        {
            get
            {
                return this._MODUMODULO;
            }
            set
            {
                if (this._MODUMODULO != value)
                {
                    this.OnMODUMODULOChanging(value);
                    this.SendPropertyChanging("MODUMODULO");
                    this._MODUMODULO = value;
                    this.SendPropertyChanged("MODUMODULO");
                    this.OnMODUMODULOChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre
        /// </summary>
        [Column(Name = @"MODU_NOMBRE", Storage = "_MODUNOMBRE", DbType = "VARCHAR2(50 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MODUNOMBRE
        {
            get
            {
                return this._MODUNOMBRE;
            }
            set
            {
                if (this._MODUNOMBRE != value)
                {
                    this.OnMODUNOMBREChanging(value);
                    this.SendPropertyChanging("MODUNOMBRE");
                    this._MODUNOMBRE = value;
                    this.SendPropertyChanged("MODUNOMBRE");
                    this.OnMODUNOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// Icono
        /// </summary>
        [Column(Name = @"MODU_ICONO", Storage = "_MODUICONO", DbType = "VARCHAR2(50 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MODUICONO
        {
            get
            {
                return this._MODUICONO;
            }
            set
            {
                if (this._MODUICONO != value)
                {
                    this.OnMODUICONOChanging(value);
                    this.SendPropertyChanging("MODUICONO");
                    this._MODUICONO = value;
                    this.SendPropertyChanged("MODUICONO");
                    this.OnMODUICONOChanged();
                }
            }
        }

    
        /// <summary>
        /// Estado del registro
        /// </summary>
        [Column(Name = @"MODU_ESTADO", Storage = "_MODUESTADO", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MODUESTADO
        {
            get
            {
                return this._MODUESTADO;
            }
            set
            {
                if (this._MODUESTADO != value)
                {
                    this.OnMODUESTADOChanging(value);
                    this.SendPropertyChanging("MODUESTADO");
                    this._MODUESTADO = value;
                    this.SendPropertyChanged("MODUESTADO");
                    this.OnMODUESTADOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Almacena la informacion de los departamentos para el registro de proveedores, se baso en el modelo DANE
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.POGE_DEPARTAMENTO")]
    public partial class POGEDEPARTAMENTO : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _DEPACODIGO;

        private string _DEPACODDEPARTAMENTO;

        private string _DEPANOMBRE;

        private decimal _PAISCODIGO;
        #pragma warning restore 0649

        private EntityRef<POGEPAI> _POGEPAI;

        private EntitySet<POGEMUNICIPIO> _POGEMUNICIPIOs;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnDEPACODIGOChanging(decimal value);
        partial void OnDEPACODIGOChanged();
        partial void OnDEPACODDEPARTAMENTOChanging(string value);
        partial void OnDEPACODDEPARTAMENTOChanged();
        partial void OnDEPANOMBREChanging(string value);
        partial void OnDEPANOMBREChanged();
        partial void OnPAISCODIGOChanging(decimal value);
        partial void OnPAISCODIGOChanged();
        #endregion

        public POGEDEPARTAMENTO()
        {
            this._POGEPAI  = default(EntityRef<POGEPAI>);
            this._POGEMUNICIPIOs = new EntitySet<POGEMUNICIPIO>(new Action<POGEMUNICIPIO>(this.attach_POGEMUNICIPIOs), new Action<POGEMUNICIPIO>(this.detach_POGEMUNICIPIOs));
            OnCreated();
        }

    
        /// <summary>
        /// Codigo del secuencia de la tabla  departamento
        /// </summary>
        [Column(Name = @"DEPA_CODIGO", Storage = "_DEPACODIGO", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal DEPACODIGO
        {
            get
            {
                return this._DEPACODIGO;
            }
            set
            {
                if (this._DEPACODIGO != value)
                {
                    this.OnDEPACODIGOChanging(value);
                    this.SendPropertyChanging("DEPACODIGO");
                    this._DEPACODIGO = value;
                    this.SendPropertyChanged("DEPACODIGO");
                    this.OnDEPACODIGOChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo del departamento se baso en DANE, pero debe permitir de cualquier pais
        /// </summary>
        [Column(Name = @"DEPA_CODDEPARTAMENTO", Storage = "_DEPACODDEPARTAMENTO", CanBeNull = false, DbType = "VARCHAR2(3 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEPACODDEPARTAMENTO
        {
            get
            {
                return this._DEPACODDEPARTAMENTO;
            }
            set
            {
                if (this._DEPACODDEPARTAMENTO != value)
                {
                    this.OnDEPACODDEPARTAMENTOChanging(value);
                    this.SendPropertyChanging("DEPACODDEPARTAMENTO");
                    this._DEPACODDEPARTAMENTO = value;
                    this.SendPropertyChanged("DEPACODDEPARTAMENTO");
                    this.OnDEPACODDEPARTAMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre del departamento
        /// </summary>
        [Column(Name = @"DEPA_NOMBRE", Storage = "_DEPANOMBRE", CanBeNull = false, DbType = "VARCHAR2(30 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEPANOMBRE
        {
            get
            {
                return this._DEPANOMBRE;
            }
            set
            {
                if (this._DEPANOMBRE != value)
                {
                    this.OnDEPANOMBREChanging(value);
                    this.SendPropertyChanging("DEPANOMBRE");
                    this._DEPANOMBRE = value;
                    this.SendPropertyChanged("DEPANOMBRE");
                    this.OnDEPANOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo del pais al que pertenece el departamento
        /// </summary>
        [Column(Name = @"PAIS_CODIGO", Storage = "_PAISCODIGO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal PAISCODIGO
        {
            get
            {
                return this._PAISCODIGO;
            }
            set
            {
                if (this._PAISCODIGO != value)
                {
                    if (this._POGEPAI.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnPAISCODIGOChanging(value);
                    this.SendPropertyChanging("PAISCODIGO");
                    this._PAISCODIGO = value;
                    this.SendPropertyChanged("PAISCODIGO");
                    this.OnPAISCODIGOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POGEPAI in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGEPAI_POGEDEPARTAMENTO", Storage="_POGEPAI", ThisKey="PAISCODIGO", OtherKey="PAISCODIGO", IsForeignKey=true)]
        public POGEPAI POGEPAI
        {
            get
            {
                return this._POGEPAI.Entity;
            }
            set
            {
                POGEPAI previousValue = this._POGEPAI.Entity;
                if ((previousValue != value) || (this._POGEPAI.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("POGEPAI");
                    if (previousValue != null)
                    {
                        this._POGEPAI.Entity = null;
                        previousValue.POGEDEPARTAMENTOs.Remove(this);
                    }
                    this._POGEPAI.Entity = value;
                    if (value != null)
                    {
                        this._PAISCODIGO = value.PAISCODIGO;
                        value.POGEDEPARTAMENTOs.Add(this);
                    }
                    else
                    {
                        this._PAISCODIGO = default(decimal);
                    }
                    this.SendPropertyChanged("POGEPAI");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POGEMUNICIPIOs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGEDEPARTAMENTO_POGEMUNICIPIO", Storage="_POGEMUNICIPIOs", ThisKey="DEPACODIGO", OtherKey="DEPACODIGO", DeleteRule="NO ACTION")]
        public EntitySet<POGEMUNICIPIO> POGEMUNICIPIOs
        {
            get
            {
                return this._POGEMUNICIPIOs;
            }
            set
            {
                this._POGEMUNICIPIOs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_POGEMUNICIPIOs(POGEMUNICIPIO entity)
        {
            this.SendPropertyChanging("POGEMUNICIPIOs");
            entity.POGEDEPARTAMENTO = this;
        }
    
        private void detach_POGEMUNICIPIOs(POGEMUNICIPIO entity)
        {
            this.SendPropertyChanging("POGEMUNICIPIOs");
            entity.POGEDEPARTAMENTO = null;
        }
    }

    /// <summary>
    /// Almacena contastes para el funcionamiento del sitio
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.POGE_CONSTANTE")]
    public partial class POGECONSTANTE : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CONSCONSTANTE;

        private string _CONSREFERENCIA;

        private string _CONSVALOR;

        private string _CONSDESCRIPCION;

        private decimal? _LOGSUSUARIO;

        private System.DateTime? _LOGSFECHA = DateTime.Now;
        #pragma warning restore 0649

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCONSCONSTANTEChanging(decimal value);
        partial void OnCONSCONSTANTEChanged();
        partial void OnCONSREFERENCIAChanging(string value);
        partial void OnCONSREFERENCIAChanged();
        partial void OnCONSVALORChanging(string value);
        partial void OnCONSVALORChanged();
        partial void OnCONSDESCRIPCIONChanging(string value);
        partial void OnCONSDESCRIPCIONChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        partial void OnLOGSFECHAChanging(System.DateTime? value);
        partial void OnLOGSFECHAChanged();
        #endregion

        public POGECONSTANTE()
        {
            OnCreated();
        }

    
        /// <summary>
        /// Codigo de constante
        /// </summary>
        [Column(Name = @"CONS_CONSTANTE", Storage = "_CONSCONSTANTE", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal CONSCONSTANTE
        {
            get
            {
                return this._CONSCONSTANTE;
            }
            set
            {
                if (this._CONSCONSTANTE != value)
                {
                    this.OnCONSCONSTANTEChanging(value);
                    this.SendPropertyChanging("CONSCONSTANTE");
                    this._CONSCONSTANTE = value;
                    this.SendPropertyChanged("CONSCONSTANTE");
                    this.OnCONSCONSTANTEChanged();
                }
            }
        }

    
        /// <summary>
        /// Referencia identifica la constante
        /// </summary>
        [Column(Name = @"CONS_REFERENCIA", Storage = "_CONSREFERENCIA", CanBeNull = false, DbType = "VARCHAR2(10 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CONSREFERENCIA
        {
            get
            {
                return this._CONSREFERENCIA;
            }
            set
            {
                if (this._CONSREFERENCIA != value)
                {
                    this.OnCONSREFERENCIAChanging(value);
                    this.SendPropertyChanging("CONSREFERENCIA");
                    this._CONSREFERENCIA = value;
                    this.SendPropertyChanged("CONSREFERENCIA");
                    this.OnCONSREFERENCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// Valor constante
        /// </summary>
        [Column(Name = @"CONS_VALOR", Storage = "_CONSVALOR", CanBeNull = false, DbType = "VARCHAR2(150 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CONSVALOR
        {
            get
            {
                return this._CONSVALOR;
            }
            set
            {
                if (this._CONSVALOR != value)
                {
                    this.OnCONSVALORChanging(value);
                    this.SendPropertyChanging("CONSVALOR");
                    this._CONSVALOR = value;
                    this.SendPropertyChanged("CONSVALOR");
                    this.OnCONSVALORChanged();
                }
            }
        }

    
        /// <summary>
        /// Descripcion
        /// </summary>
        [Column(Name = @"CONS_DESCRIPCION", Storage = "_CONSDESCRIPCION", DbType = "VARCHAR2(150 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CONSDESCRIPCION
        {
            get
            {
                return this._CONSDESCRIPCION;
            }
            set
            {
                if (this._CONSDESCRIPCION != value)
                {
                    this.OnCONSDESCRIPCIONChanging(value);
                    this.SendPropertyChanging("CONSDESCRIPCION");
                    this._CONSDESCRIPCION = value;
                    this.SendPropertyChanged("CONSDESCRIPCION");
                    this.OnCONSDESCRIPCIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario auditoria
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha crea o edita registro
        /// </summary>
        [Column(Name = @"LOGS_FECHA", Storage = "_LOGSFECHA", DbType = "TIMESTAMP(6) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? LOGSFECHA
        {
            get
            {
                return this._LOGSFECHA;
            }
            set
            {
                if (this._LOGSFECHA != value)
                {
                    this.OnLOGSFECHAChanging(value);
                    this.SendPropertyChanging("LOGSFECHA");
                    this._LOGSFECHA = value;
                    this.SendPropertyChanged("LOGSFECHA");
                    this.OnLOGSFECHAChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Detalle de la tabla poge_clase, guarla los posibles valores de cada clase
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.POGE_CLASEVALOR")]
    public partial class POGECLASEVALOR : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CLVACLASEVALOR;

        private decimal _CLVACODIGOVALOR;

        private string _CLVAVALOR;

        private string _CLVAESTADO;

        private decimal _CLASCLASE;

        private string _CLVADESCRIPCION;

        private decimal? _LOGSUSUARIO;
        #pragma warning restore 0649

        private EntitySet<PONESOLICITUDCOMPRA> _PONESOLICITUDCOMPRAs_CLASAREA9;

        private EntitySet<PONESOLICITUDCOMPRA> _PONESOLICITUDCOMPRAs_CLASTIPOCONTRATACION3;

        private EntitySet<PONEDOCUMENTO> _PONEDOCUMENTOs;

        private EntitySet<PONECATALOGO> _PONECATALOGOs;

        private EntitySet<POGEUSUARIO> _POGEUSUARIOs;

        private EntityRef<POGECLASE> _POGECLASE;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCLVACLASEVALORChanging(decimal value);
        partial void OnCLVACLASEVALORChanged();
        partial void OnCLVACODIGOVALORChanging(decimal value);
        partial void OnCLVACODIGOVALORChanged();
        partial void OnCLVAVALORChanging(string value);
        partial void OnCLVAVALORChanged();
        partial void OnCLVAESTADOChanging(string value);
        partial void OnCLVAESTADOChanged();
        partial void OnCLASCLASEChanging(decimal value);
        partial void OnCLASCLASEChanged();
        partial void OnCLVADESCRIPCIONChanging(string value);
        partial void OnCLVADESCRIPCIONChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        #endregion

        public POGECLASEVALOR()
        {
            this._PONESOLICITUDCOMPRAs_CLASAREA9 = new EntitySet<PONESOLICITUDCOMPRA>(new Action<PONESOLICITUDCOMPRA>(this.attach_PONESOLICITUDCOMPRAs_CLASAREA9), new Action<PONESOLICITUDCOMPRA>(this.detach_PONESOLICITUDCOMPRAs_CLASAREA9));
            this._PONESOLICITUDCOMPRAs_CLASTIPOCONTRATACION3 = new EntitySet<PONESOLICITUDCOMPRA>(new Action<PONESOLICITUDCOMPRA>(this.attach_PONESOLICITUDCOMPRAs_CLASTIPOCONTRATACION3), new Action<PONESOLICITUDCOMPRA>(this.detach_PONESOLICITUDCOMPRAs_CLASTIPOCONTRATACION3));
            this._PONEDOCUMENTOs = new EntitySet<PONEDOCUMENTO>(new Action<PONEDOCUMENTO>(this.attach_PONEDOCUMENTOs), new Action<PONEDOCUMENTO>(this.detach_PONEDOCUMENTOs));
            this._PONECATALOGOs = new EntitySet<PONECATALOGO>(new Action<PONECATALOGO>(this.attach_PONECATALOGOs), new Action<PONECATALOGO>(this.detach_PONECATALOGOs));
            this._POGEUSUARIOs = new EntitySet<POGEUSUARIO>(new Action<POGEUSUARIO>(this.attach_POGEUSUARIOs), new Action<POGEUSUARIO>(this.detach_POGEUSUARIOs));
            this._POGECLASE  = default(EntityRef<POGECLASE>);
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"CLVA_CLASEVALOR", Storage = "_CLVACLASEVALOR", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal CLVACLASEVALOR
        {
            get
            {
                return this._CLVACLASEVALOR;
            }
            set
            {
                if (this._CLVACLASEVALOR != value)
                {
                    this.OnCLVACLASEVALORChanging(value);
                    this.SendPropertyChanging("CLVACLASEVALOR");
                    this._CLVACLASEVALOR = value;
                    this.SendPropertyChanged("CLVACLASEVALOR");
                    this.OnCLVACLASEVALORChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo Valor
        /// </summary>
        [Column(Name = @"CLVA_CODIGOVALOR", Storage = "_CLVACODIGOVALOR", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CLVACODIGOVALOR
        {
            get
            {
                return this._CLVACODIGOVALOR;
            }
            set
            {
                if (this._CLVACODIGOVALOR != value)
                {
                    this.OnCLVACODIGOVALORChanging(value);
                    this.SendPropertyChanging("CLVACODIGOVALOR");
                    this._CLVACODIGOVALOR = value;
                    this.SendPropertyChanged("CLVACODIGOVALOR");
                    this.OnCLVACODIGOVALORChanged();
                }
            }
        }

    
        /// <summary>
        /// Valor
        /// </summary>
        [Column(Name = @"CLVA_VALOR", Storage = "_CLVAVALOR", CanBeNull = false, DbType = "VARCHAR2(200 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLVAVALOR
        {
            get
            {
                return this._CLVAVALOR;
            }
            set
            {
                if (this._CLVAVALOR != value)
                {
                    this.OnCLVAVALORChanging(value);
                    this.SendPropertyChanging("CLVAVALOR");
                    this._CLVAVALOR = value;
                    this.SendPropertyChanged("CLVAVALOR");
                    this.OnCLVAVALORChanged();
                }
            }
        }

    
        /// <summary>
        /// Estado del registro
        /// </summary>
        [Column(Name = @"CLVA_ESTADO", Storage = "_CLVAESTADO", CanBeNull = false, DbType = "VARCHAR2(1 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLVAESTADO
        {
            get
            {
                return this._CLVAESTADO;
            }
            set
            {
                if (this._CLVAESTADO != value)
                {
                    this.OnCLVAESTADOChanging(value);
                    this.SendPropertyChanging("CLVAESTADO");
                    this._CLVAESTADO = value;
                    this.SendPropertyChanged("CLVAESTADO");
                    this.OnCLVAESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de la clase
        /// </summary>
        [Column(Name = @"CLAS_CLASE", Storage = "_CLASCLASE", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CLASCLASE
        {
            get
            {
                return this._CLASCLASE;
            }
            set
            {
                if (this._CLASCLASE != value)
                {
                    if (this._POGECLASE.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCLASCLASEChanging(value);
                    this.SendPropertyChanging("CLASCLASE");
                    this._CLASCLASE = value;
                    this.SendPropertyChanged("CLASCLASE");
                    this.OnCLASCLASEChanged();
                }
            }
        }

    
        /// <summary>
        /// Descripcion
        /// </summary>
        [Column(Name = @"CLVA_DESCRIPCION", Storage = "_CLVADESCRIPCION", DbType = "VARCHAR2(1500 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLVADESCRIPCION
        {
            get
            {
                return this._CLVADESCRIPCION;
            }
            set
            {
                if (this._CLVADESCRIPCION != value)
                {
                    this.OnCLVADESCRIPCIONChanging(value);
                    this.SendPropertyChanging("CLVADESCRIPCION");
                    this._CLVADESCRIPCION = value;
                    this.SendPropertyChanged("CLVADESCRIPCION");
                    this.OnCLVADESCRIPCIONChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario campo para auditoria
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONESOLICITUDCOMPRAs_CLASAREA9 in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGECLASEVALOR_PONESOLICITUDCOMPRA", Storage="_PONESOLICITUDCOMPRAs_CLASAREA9", ThisKey="CLVACLASEVALOR", OtherKey="CLASAREA9", DeleteRule="NO ACTION")]
        public EntitySet<PONESOLICITUDCOMPRA> PONESOLICITUDCOMPRAs_CLASAREA9
        {
            get
            {
                return this._PONESOLICITUDCOMPRAs_CLASAREA9;
            }
            set
            {
                this._PONESOLICITUDCOMPRAs_CLASAREA9.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONESOLICITUDCOMPRAs_CLASTIPOCONTRATACION3 in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGECLASEVALOR_PONESOLICITUDCOMPRA1", Storage="_PONESOLICITUDCOMPRAs_CLASTIPOCONTRATACION3", ThisKey="CLVACLASEVALOR", OtherKey="CLASTIPOCONTRATACION3", DeleteRule="NO ACTION")]
        public EntitySet<PONESOLICITUDCOMPRA> PONESOLICITUDCOMPRAs_CLASTIPOCONTRATACION3
        {
            get
            {
                return this._PONESOLICITUDCOMPRAs_CLASTIPOCONTRATACION3;
            }
            set
            {
                this._PONESOLICITUDCOMPRAs_CLASTIPOCONTRATACION3.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONEDOCUMENTOs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGECLASEVALOR_PONEDOCUMENTO", Storage="_PONEDOCUMENTOs", ThisKey="CLVACLASEVALOR", OtherKey="CLASTIPODOCUMENTO8", DeleteRule="NO ACTION")]
        public EntitySet<PONEDOCUMENTO> PONEDOCUMENTOs
        {
            get
            {
                return this._PONEDOCUMENTOs;
            }
            set
            {
                this._PONEDOCUMENTOs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PONECATALOGOs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGECLASEVALOR_PONECATALOGO", Storage="_PONECATALOGOs", ThisKey="CLVACLASEVALOR", OtherKey="CLASUNIDADMEDIDA4", DeleteRule="NO ACTION")]
        public EntitySet<PONECATALOGO> PONECATALOGOs
        {
            get
            {
                return this._PONECATALOGOs;
            }
            set
            {
                this._PONECATALOGOs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for POGEUSUARIOs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGECLASEVALOR_POGEUSUARIO", Storage="_POGEUSUARIOs", ThisKey="CLVACLASEVALOR", OtherKey="CLASAREA2", DeleteRule="NO ACTION")]
        public EntitySet<POGEUSUARIO> POGEUSUARIOs
        {
            get
            {
                return this._POGEUSUARIOs;
            }
            set
            {
                this._POGEUSUARIOs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for POGECLASE in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGECLASE_POGECLASEVALOR", Storage="_POGECLASE", ThisKey="CLASCLASE", OtherKey="CLASCLASE", IsForeignKey=true)]
        public POGECLASE POGECLASE
        {
            get
            {
                return this._POGECLASE.Entity;
            }
            set
            {
                POGECLASE previousValue = this._POGECLASE.Entity;
                if ((previousValue != value) || (this._POGECLASE.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("POGECLASE");
                    if (previousValue != null)
                    {
                        this._POGECLASE.Entity = null;
                        previousValue.POGECLASEVALORs.Remove(this);
                    }
                    this._POGECLASE.Entity = value;
                    if (value != null)
                    {
                        this._CLASCLASE = value.CLASCLASE;
                        value.POGECLASEVALORs.Add(this);
                    }
                    else
                    {
                        this._CLASCLASE = default(decimal);
                    }
                    this.SendPropertyChanged("POGECLASE");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_PONESOLICITUDCOMPRAs_CLASAREA9(PONESOLICITUDCOMPRA entity)
        {
            this.SendPropertyChanging("PONESOLICITUDCOMPRAs_CLASAREA9");
            entity.POGECLASEVALOR_CLASAREA9 = this;
        }
    
        private void detach_PONESOLICITUDCOMPRAs_CLASAREA9(PONESOLICITUDCOMPRA entity)
        {
            this.SendPropertyChanging("PONESOLICITUDCOMPRAs_CLASAREA9");
            entity.POGECLASEVALOR_CLASAREA9 = null;
        }

        private void attach_PONESOLICITUDCOMPRAs_CLASTIPOCONTRATACION3(PONESOLICITUDCOMPRA entity)
        {
            this.SendPropertyChanging("PONESOLICITUDCOMPRAs_CLASTIPOCONTRATACION3");
            entity.POGECLASEVALOR_CLASTIPOCONTRATACION3 = this;
        }
    
        private void detach_PONESOLICITUDCOMPRAs_CLASTIPOCONTRATACION3(PONESOLICITUDCOMPRA entity)
        {
            this.SendPropertyChanging("PONESOLICITUDCOMPRAs_CLASTIPOCONTRATACION3");
            entity.POGECLASEVALOR_CLASTIPOCONTRATACION3 = null;
        }

        private void attach_PONEDOCUMENTOs(PONEDOCUMENTO entity)
        {
            this.SendPropertyChanging("PONEDOCUMENTOs");
            entity.POGECLASEVALOR = this;
        }
    
        private void detach_PONEDOCUMENTOs(PONEDOCUMENTO entity)
        {
            this.SendPropertyChanging("PONEDOCUMENTOs");
            entity.POGECLASEVALOR = null;
        }

        private void attach_PONECATALOGOs(PONECATALOGO entity)
        {
            this.SendPropertyChanging("PONECATALOGOs");
            entity.POGECLASEVALOR = this;
        }
    
        private void detach_PONECATALOGOs(PONECATALOGO entity)
        {
            this.SendPropertyChanging("PONECATALOGOs");
            entity.POGECLASEVALOR = null;
        }

        private void attach_POGEUSUARIOs(POGEUSUARIO entity)
        {
            this.SendPropertyChanging("POGEUSUARIOs");
            entity.POGECLASEVALOR = this;
        }
    
        private void detach_POGEUSUARIOs(POGEUSUARIO entity)
        {
            this.SendPropertyChanging("POGEUSUARIOs");
            entity.POGECLASEVALOR = null;
        }
    }

    /// <summary>
    /// Tabla para crear tipos de lista para parametrizacion del sistemas, 
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.POGE_CLASE")]
    public partial class POGECLASE : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CLASCLASE;

        private string _CLASNOMBRE;

        private string _CLASEDITABLE;

        private decimal? _LOGSUSUARIO;
        #pragma warning restore 0649

        private EntitySet<POGECLASEVALOR> _POGECLASEVALORs;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCLASCLASEChanging(decimal value);
        partial void OnCLASCLASEChanged();
        partial void OnCLASNOMBREChanging(string value);
        partial void OnCLASNOMBREChanged();
        partial void OnCLASEDITABLEChanging(string value);
        partial void OnCLASEDITABLEChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        #endregion

        public POGECLASE()
        {
            this._POGECLASEVALORs = new EntitySet<POGECLASEVALOR>(new Action<POGECLASEVALOR>(this.attach_POGECLASEVALORs), new Action<POGECLASEVALOR>(this.detach_POGECLASEVALORs));
            OnCreated();
        }

    
        /// <summary>
        /// Id de clase
        /// </summary>
        [Column(Name = @"CLAS_CLASE", Storage = "_CLASCLASE", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal CLASCLASE
        {
            get
            {
                return this._CLASCLASE;
            }
            set
            {
                if (this._CLASCLASE != value)
                {
                    this.OnCLASCLASEChanging(value);
                    this.SendPropertyChanging("CLASCLASE");
                    this._CLASCLASE = value;
                    this.SendPropertyChanged("CLASCLASE");
                    this.OnCLASCLASEChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre de la clase
        /// </summary>
        [Column(Name = @"CLAS_NOMBRE", Storage = "_CLASNOMBRE", DbType = "VARCHAR2(25 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLASNOMBRE
        {
            get
            {
                return this._CLASNOMBRE;
            }
            set
            {
                if (this._CLASNOMBRE != value)
                {
                    this.OnCLASNOMBREChanging(value);
                    this.SendPropertyChanging("CLASNOMBRE");
                    this._CLASNOMBRE = value;
                    this.SendPropertyChanged("CLASNOMBRE");
                    this.OnCLASNOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// Indica si la lista es editable o no, desde una forma
        /// </summary>
        [Column(Name = @"CLAS_EDITABLE", Storage = "_CLASEDITABLE", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLASEDITABLE
        {
            get
            {
                return this._CLASEDITABLE;
            }
            set
            {
                if (this._CLASEDITABLE != value)
                {
                    this.OnCLASEDITABLEChanging(value);
                    this.SendPropertyChanging("CLASEDITABLE");
                    this._CLASEDITABLE = value;
                    this.SendPropertyChanged("CLASEDITABLE");
                    this.OnCLASEDITABLEChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario campo para auditoria
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POGECLASEVALORs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGECLASE_POGECLASEVALOR", Storage="_POGECLASEVALORs", ThisKey="CLASCLASE", OtherKey="CLASCLASE", DeleteRule="NO ACTION")]
        public EntitySet<POGECLASEVALOR> POGECLASEVALORs
        {
            get
            {
                return this._POGECLASEVALORs;
            }
            set
            {
                this._POGECLASEVALORs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_POGECLASEVALORs(POGECLASEVALOR entity)
        {
            this.SendPropertyChanging("POGECLASEVALORs");
            entity.POGECLASE = this;
        }
    
        private void detach_POGECLASEVALORs(POGECLASEVALOR entity)
        {
            this.SendPropertyChanging("POGECLASEVALORs");
            entity.POGECLASE = null;
        }
    }

    /// <summary>
    /// Listado de codigo de actividades economicas segun DIAN
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.POGE_ACTIVIDADECONOMICA")]
    public partial class POGEACTIVIDADECONOMICA : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _ACECCODIGOACTIVIDAD;

        private string _ACECNOMBRE;

        private string _ACECESTADO;

        private decimal? _LOGSUSUARIO;

        private System.DateTimeOffset _LOGSFECHA;
        #pragma warning restore 0649

        private EntitySet<PONEPROVEEDOR> _PONEPROVEEDORs;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnACECCODIGOACTIVIDADChanging(string value);
        partial void OnACECCODIGOACTIVIDADChanged();
        partial void OnACECNOMBREChanging(string value);
        partial void OnACECNOMBREChanged();
        partial void OnACECESTADOChanging(string value);
        partial void OnACECESTADOChanged();
        partial void OnLOGSUSUARIOChanging(decimal? value);
        partial void OnLOGSUSUARIOChanged();
        partial void OnLOGSFECHAChanging(System.DateTimeOffset value);
        partial void OnLOGSFECHAChanged();
        #endregion

        public POGEACTIVIDADECONOMICA()
        {
            this._PONEPROVEEDORs = new EntitySet<PONEPROVEEDOR>(new Action<PONEPROVEEDOR>(this.attach_PONEPROVEEDORs), new Action<PONEPROVEEDOR>(this.detach_PONEPROVEEDORs));
            OnCreated();
        }

    
        /// <summary>
        /// Codigo CIIU de al actividad economica segun DIAN
        /// </summary>
        [Column(Name = @"ACEC_CODIGOACTIVIDAD", Storage = "_ACECCODIGOACTIVIDAD", CanBeNull = false, DbType = "VARCHAR2(4 CHAR) NOT NULL", IsPrimaryKey = true)]
        public string ACECCODIGOACTIVIDAD
        {
            get
            {
                return this._ACECCODIGOACTIVIDAD;
            }
            set
            {
                if (this._ACECCODIGOACTIVIDAD != value)
                {
                    this.OnACECCODIGOACTIVIDADChanging(value);
                    this.SendPropertyChanging("ACECCODIGOACTIVIDAD");
                    this._ACECCODIGOACTIVIDAD = value;
                    this.SendPropertyChanged("ACECCODIGOACTIVIDAD");
                    this.OnACECCODIGOACTIVIDADChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre de la actividad
        /// </summary>
        [Column(Name = @"ACEC_NOMBRE", Storage = "_ACECNOMBRE", CanBeNull = false, DbType = "VARCHAR2(200 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ACECNOMBRE
        {
            get
            {
                return this._ACECNOMBRE;
            }
            set
            {
                if (this._ACECNOMBRE != value)
                {
                    this.OnACECNOMBREChanging(value);
                    this.SendPropertyChanging("ACECNOMBRE");
                    this._ACECNOMBRE = value;
                    this.SendPropertyChanged("ACECNOMBRE");
                    this.OnACECNOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// Estado del registro
        /// </summary>
        [Column(Name = @"ACEC_ESTADO", Storage = "_ACECESTADO", CanBeNull = false, DbType = "VARCHAR2(1 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ACECESTADO
        {
            get
            {
                return this._ACECESTADO;
            }
            set
            {
                if (this._ACECESTADO != value)
                {
                    this.OnACECESTADOChanging(value);
                    this.SendPropertyChanging("ACECESTADO");
                    this._ACECESTADO = value;
                    this.SendPropertyChanged("ACECESTADO");
                    this.OnACECESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario modifica el registro
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha hora de auditoria
        /// </summary>
        [Column(Name = @"LOGS_FECHA", Storage = "_LOGSFECHA", CanBeNull = false, DbType = "TIMESTAMP(6) WITH TIME ZONE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTimeOffset LOGSFECHA
        {
            get
            {
                return this._LOGSFECHA;
            }
            set
            {
                if (this._LOGSFECHA != value)
                {
                    this.OnLOGSFECHAChanging(value);
                    this.SendPropertyChanging("LOGSFECHA");
                    this._LOGSFECHA = value;
                    this.SendPropertyChanged("LOGSFECHA");
                    this.OnLOGSFECHAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PONEPROVEEDORs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGEACTIVIDADECONOMICA_PONEPROVEEDOR", Storage="_PONEPROVEEDORs", ThisKey="ACECCODIGOACTIVIDAD", OtherKey="ACECCODIGOACTIVIDAD", DeleteRule="NO ACTION")]
        public EntitySet<PONEPROVEEDOR> PONEPROVEEDORs
        {
            get
            {
                return this._PONEPROVEEDORs;
            }
            set
            {
                this._PONEPROVEEDORs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_PONEPROVEEDORs(PONEPROVEEDOR entity)
        {
            this.SendPropertyChanging("PONEPROVEEDORs");
            entity.POGEACTIVIDADECONOMICA = this;
        }
    
        private void detach_PONEPROVEEDORs(PONEPROVEEDOR entity)
        {
            this.SendPropertyChanging("PONEPROVEEDORs");
            entity.POGEACTIVIDADECONOMICA = null;
        }
    }

    /// <summary>
    /// Almacena los movimientos de diversas tablas
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.POAU_MOVIMIENTO")]
    public partial class POAUMOVIMIENTO : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _MOVIMOVI;

        private string _MOVITABLA;

        private decimal? _MOVIUSUARIO;

        private System.DateTime _MOVIFECHAHORA;

        private string _MOVIEVENTO;

        private string _MOVIUSERDB;

        private decimal _MOVIVALORLLAVE;
        #pragma warning restore 0649

        private EntitySet<POAUDETAMOVIMIENTO> _POAUDETAMOVIMIENTOs;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMOVIMOVIChanging(decimal value);
        partial void OnMOVIMOVIChanged();
        partial void OnMOVITABLAChanging(string value);
        partial void OnMOVITABLAChanged();
        partial void OnMOVIUSUARIOChanging(decimal? value);
        partial void OnMOVIUSUARIOChanged();
        partial void OnMOVIFECHAHORAChanging(System.DateTime value);
        partial void OnMOVIFECHAHORAChanged();
        partial void OnMOVIEVENTOChanging(string value);
        partial void OnMOVIEVENTOChanged();
        partial void OnMOVIUSERDBChanging(string value);
        partial void OnMOVIUSERDBChanged();
        partial void OnMOVIVALORLLAVEChanging(decimal value);
        partial void OnMOVIVALORLLAVEChanged();
        #endregion

        public POAUMOVIMIENTO()
        {
            this._POAUDETAMOVIMIENTOs = new EntitySet<POAUDETAMOVIMIENTO>(new Action<POAUDETAMOVIMIENTO>(this.attach_POAUDETAMOVIMIENTOs), new Action<POAUDETAMOVIMIENTO>(this.detach_POAUDETAMOVIMIENTOs));
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"MOVI_MOVI", Storage = "_MOVIMOVI", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal MOVIMOVI
        {
            get
            {
                return this._MOVIMOVI;
            }
            set
            {
                if (this._MOVIMOVI != value)
                {
                    this.OnMOVIMOVIChanging(value);
                    this.SendPropertyChanging("MOVIMOVI");
                    this._MOVIMOVI = value;
                    this.SendPropertyChanged("MOVIMOVI");
                    this.OnMOVIMOVIChanged();
                }
            }
        }

    
        /// <summary>
        /// Nombre de la tabla sobre la cual se realiza el movimiento
        /// </summary>
        [Column(Name = @"MOVI_TABLA", Storage = "_MOVITABLA", CanBeNull = false, DbType = "VARCHAR2(30 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MOVITABLA
        {
            get
            {
                return this._MOVITABLA;
            }
            set
            {
                if (this._MOVITABLA != value)
                {
                    this.OnMOVITABLAChanging(value);
                    this.SendPropertyChanging("MOVITABLA");
                    this._MOVITABLA = value;
                    this.SendPropertyChanged("MOVITABLA");
                    this.OnMOVITABLAChanged();
                }
            }
        }

    
        /// <summary>
        /// Id usuario aplicacion
        /// </summary>
        [Column(Name = @"MOVI_USUARIO", Storage = "_MOVIUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? MOVIUSUARIO
        {
            get
            {
                return this._MOVIUSUARIO;
            }
            set
            {
                if (this._MOVIUSUARIO != value)
                {
                    this.OnMOVIUSUARIOChanging(value);
                    this.SendPropertyChanging("MOVIUSUARIO");
                    this._MOVIUSUARIO = value;
                    this.SendPropertyChanged("MOVIUSUARIO");
                    this.OnMOVIUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Fecha y hora movimiento
        /// </summary>
        [Column(Name = @"MOVI_FECHAHORA", Storage = "_MOVIFECHAHORA", CanBeNull = false, DbType = "TIMESTAMP(6) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime MOVIFECHAHORA
        {
            get
            {
                return this._MOVIFECHAHORA;
            }
            set
            {
                if (this._MOVIFECHAHORA != value)
                {
                    this.OnMOVIFECHAHORAChanging(value);
                    this.SendPropertyChanging("MOVIFECHAHORA");
                    this._MOVIFECHAHORA = value;
                    this.SendPropertyChanged("MOVIFECHAHORA");
                    this.OnMOVIFECHAHORAChanged();
                }
            }
        }

    
        /// <summary>
        /// Evento I: Insertar, U: Actualizar, D: Eliminar
        /// </summary>
        [Column(Name = @"MOVI_EVENTO", Storage = "_MOVIEVENTO", CanBeNull = false, DbType = "VARCHAR2(1 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MOVIEVENTO
        {
            get
            {
                return this._MOVIEVENTO;
            }
            set
            {
                if (this._MOVIEVENTO != value)
                {
                    this.OnMOVIEVENTOChanging(value);
                    this.SendPropertyChanging("MOVIEVENTO");
                    this._MOVIEVENTO = value;
                    this.SendPropertyChanged("MOVIEVENTO");
                    this.OnMOVIEVENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// Usuario de base de datos.
        /// </summary>
        [Column(Name = @"MOVI_USERDB", Storage = "_MOVIUSERDB", DbType = "VARCHAR2(25 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MOVIUSERDB
        {
            get
            {
                return this._MOVIUSERDB;
            }
            set
            {
                if (this._MOVIUSERDB != value)
                {
                    this.OnMOVIUSERDBChanging(value);
                    this.SendPropertyChanging("MOVIUSERDB");
                    this._MOVIUSERDB = value;
                    this.SendPropertyChanged("MOVIUSERDB");
                    this.OnMOVIUSERDBChanged();
                }
            }
        }

    
        /// <summary>
        /// Valor de la llave del registro
        /// </summary>
        [Column(Name = @"MOVI_VALORLLAVE", Storage = "_MOVIVALORLLAVE", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal MOVIVALORLLAVE
        {
            get
            {
                return this._MOVIVALORLLAVE;
            }
            set
            {
                if (this._MOVIVALORLLAVE != value)
                {
                    this.OnMOVIVALORLLAVEChanging(value);
                    this.SendPropertyChanging("MOVIVALORLLAVE");
                    this._MOVIVALORLLAVE = value;
                    this.SendPropertyChanged("MOVIVALORLLAVE");
                    this.OnMOVIVALORLLAVEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POAUDETAMOVIMIENTOs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POAUMOVIMIENTO_POAUDETAMOVIMIENTO", Storage="_POAUDETAMOVIMIENTOs", ThisKey="MOVIMOVI", OtherKey="MOVIMOVI", DeleteRule="NO ACTION")]
        public EntitySet<POAUDETAMOVIMIENTO> POAUDETAMOVIMIENTOs
        {
            get
            {
                return this._POAUDETAMOVIMIENTOs;
            }
            set
            {
                this._POAUDETAMOVIMIENTOs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_POAUDETAMOVIMIENTOs(POAUDETAMOVIMIENTO entity)
        {
            this.SendPropertyChanging("POAUDETAMOVIMIENTOs");
            entity.POAUMOVIMIENTO = this;
        }
    
        private void detach_POAUDETAMOVIMIENTOs(POAUDETAMOVIMIENTO entity)
        {
            this.SendPropertyChanging("POAUDETAMOVIMIENTOs");
            entity.POAUMOVIMIENTO = null;
        }
    }

    /// <summary>
    /// Tabla para auditoria, almacena el detalle de los movimientos
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.POAU_DETAMOVIMIENTO")]
    public partial class POAUDETAMOVIMIENTO : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _DEMODEMO;

        private string _DEMOCAMPO;

        private string _DEMOVALORANTERIOR;

        private string _DEMOVALORNUEVO;

        private decimal _MOVIMOVI;
        #pragma warning restore 0649

        private EntityRef<POAUMOVIMIENTO> _POAUMOVIMIENTO;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnDEMODEMOChanging(decimal value);
        partial void OnDEMODEMOChanged();
        partial void OnDEMOCAMPOChanging(string value);
        partial void OnDEMOCAMPOChanged();
        partial void OnDEMOVALORANTERIORChanging(string value);
        partial void OnDEMOVALORANTERIORChanged();
        partial void OnDEMOVALORNUEVOChanging(string value);
        partial void OnDEMOVALORNUEVOChanged();
        partial void OnMOVIMOVIChanging(decimal value);
        partial void OnMOVIMOVIChanged();
        #endregion

        public POAUDETAMOVIMIENTO()
        {
            this._POAUMOVIMIENTO  = default(EntityRef<POAUMOVIMIENTO>);
            OnCreated();
        }

    
        /// <summary>
        /// Secuencia de la abla
        /// </summary>
        [Column(Name = @"DEMO_DEMO", Storage = "_DEMODEMO", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal DEMODEMO
        {
            get
            {
                return this._DEMODEMO;
            }
            set
            {
                if (this._DEMODEMO != value)
                {
                    this.OnDEMODEMOChanging(value);
                    this.SendPropertyChanging("DEMODEMO");
                    this._DEMODEMO = value;
                    this.SendPropertyChanged("DEMODEMO");
                    this.OnDEMODEMOChanged();
                }
            }
        }

    
        /// <summary>
        /// Campo modificado
        /// </summary>
        [Column(Name = @"DEMO_CAMPO", Storage = "_DEMOCAMPO", CanBeNull = false, DbType = "VARCHAR2(30 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEMOCAMPO
        {
            get
            {
                return this._DEMOCAMPO;
            }
            set
            {
                if (this._DEMOCAMPO != value)
                {
                    this.OnDEMOCAMPOChanging(value);
                    this.SendPropertyChanging("DEMOCAMPO");
                    this._DEMOCAMPO = value;
                    this.SendPropertyChanged("DEMOCAMPO");
                    this.OnDEMOCAMPOChanged();
                }
            }
        }

    
        /// <summary>
        /// Valor Anterior
        /// </summary>
        [Column(Name = @"DEMO_VALORANTERIOR", Storage = "_DEMOVALORANTERIOR", DbType = "CLOB NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEMOVALORANTERIOR
        {
            get
            {
                return this._DEMOVALORANTERIOR;
            }
            set
            {
                if (this._DEMOVALORANTERIOR != value)
                {
                    this.OnDEMOVALORANTERIORChanging(value);
                    this.SendPropertyChanging("DEMOVALORANTERIOR");
                    this._DEMOVALORANTERIOR = value;
                    this.SendPropertyChanged("DEMOVALORANTERIOR");
                    this.OnDEMOVALORANTERIORChanged();
                }
            }
        }

    
        /// <summary>
        /// Nuevo Valor
        /// </summary>
        [Column(Name = @"DEMO_VALORNUEVO", Storage = "_DEMOVALORNUEVO", DbType = "CLOB NULL", UpdateCheck = UpdateCheck.Never)]
        public string DEMOVALORNUEVO
        {
            get
            {
                return this._DEMOVALORNUEVO;
            }
            set
            {
                if (this._DEMOVALORNUEVO != value)
                {
                    this.OnDEMOVALORNUEVOChanging(value);
                    this.SendPropertyChanging("DEMOVALORNUEVO");
                    this._DEMOVALORNUEVO = value;
                    this.SendPropertyChanged("DEMOVALORNUEVO");
                    this.OnDEMOVALORNUEVOChanged();
                }
            }
        }

    
        /// <summary>
        /// Referencia de maestro movimiento
        /// </summary>
        [Column(Name = @"MOVI_MOVI", Storage = "_MOVIMOVI", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal MOVIMOVI
        {
            get
            {
                return this._MOVIMOVI;
            }
            set
            {
                if (this._MOVIMOVI != value)
                {
                    if (this._POAUMOVIMIENTO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMOVIMOVIChanging(value);
                    this.SendPropertyChanging("MOVIMOVI");
                    this._MOVIMOVI = value;
                    this.SendPropertyChanged("MOVIMOVI");
                    this.OnMOVIMOVIChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POAUMOVIMIENTO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POAUMOVIMIENTO_POAUDETAMOVIMIENTO", Storage="_POAUMOVIMIENTO", ThisKey="MOVIMOVI", OtherKey="MOVIMOVI", IsForeignKey=true)]
        public POAUMOVIMIENTO POAUMOVIMIENTO
        {
            get
            {
                return this._POAUMOVIMIENTO.Entity;
            }
            set
            {
                POAUMOVIMIENTO previousValue = this._POAUMOVIMIENTO.Entity;
                if ((previousValue != value) || (this._POAUMOVIMIENTO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("POAUMOVIMIENTO");
                    if (previousValue != null)
                    {
                        this._POAUMOVIMIENTO.Entity = null;
                        previousValue.POAUDETAMOVIMIENTOs.Remove(this);
                    }
                    this._POAUMOVIMIENTO.Entity = value;
                    if (value != null)
                    {
                        this._MOVIMOVI = value.MOVIMOVI;
                        value.POAUDETAMOVIMIENTOs.Add(this);
                    }
                    else
                    {
                        this._MOVIMOVI = default(decimal);
                    }
                    this.SendPropertyChanged("POAUMOVIMIENTO");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for Negocio.Data.PONEVTIPOIDENTIFICACION in the schema.
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_VTIPO_IDENTIFICACION")]
    public partial class PONEVTIPOIDENTIFICACION
    {
        #pragma warning disable 0649

        private decimal _CLVACLASEVALOR;

        private decimal _CLVACODIGOVALOR;

        private string _CLVAVALOR;

        private string _CLVAESTADO;

        private decimal _CLASCLASE;

        private string _CLVADESCRIPCION;
        #pragma warning restore 0649

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCLVACLASEVALORChanging(decimal value);
        partial void OnCLVACLASEVALORChanged();
        partial void OnCLVACODIGOVALORChanging(decimal value);
        partial void OnCLVACODIGOVALORChanged();
        partial void OnCLVAVALORChanging(string value);
        partial void OnCLVAVALORChanged();
        partial void OnCLVAESTADOChanging(string value);
        partial void OnCLVAESTADOChanged();
        partial void OnCLASCLASEChanging(decimal value);
        partial void OnCLASCLASEChanged();
        partial void OnCLVADESCRIPCIONChanging(string value);
        partial void OnCLVADESCRIPCIONChanged();
        #endregion

        public PONEVTIPOIDENTIFICACION()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CLVACLASEVALOR in the schema.
        /// </summary>
        [Column(Name = @"CLVA_CLASEVALOR", Storage = "_CLVACLASEVALOR", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CLVACLASEVALOR
        {
            get
            {
                return this._CLVACLASEVALOR;
            }
            set
            {
                if (this._CLVACLASEVALOR != value)
                {
                    this._CLVACLASEVALOR = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLVACODIGOVALOR in the schema.
        /// </summary>
        [Column(Name = @"CLVA_CODIGOVALOR", Storage = "_CLVACODIGOVALOR", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CLVACODIGOVALOR
        {
            get
            {
                return this._CLVACODIGOVALOR;
            }
            set
            {
                if (this._CLVACODIGOVALOR != value)
                {
                    this._CLVACODIGOVALOR = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLVAVALOR in the schema.
        /// </summary>
        [Column(Name = @"CLVA_VALOR", Storage = "_CLVAVALOR", CanBeNull = false, DbType = "VARCHAR2(200 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLVAVALOR
        {
            get
            {
                return this._CLVAVALOR;
            }
            set
            {
                if (this._CLVAVALOR != value)
                {
                    this._CLVAVALOR = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLVAESTADO in the schema.
        /// </summary>
        [Column(Name = @"CLVA_ESTADO", Storage = "_CLVAESTADO", CanBeNull = false, DbType = "VARCHAR2(1 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLVAESTADO
        {
            get
            {
                return this._CLVAESTADO;
            }
            set
            {
                if (this._CLVAESTADO != value)
                {
                    this._CLVAESTADO = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLASCLASE in the schema.
        /// </summary>
        [Column(Name = @"CLAS_CLASE", Storage = "_CLASCLASE", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CLASCLASE
        {
            get
            {
                return this._CLASCLASE;
            }
            set
            {
                if (this._CLASCLASE != value)
                {
                    this._CLASCLASE = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLVADESCRIPCION in the schema.
        /// </summary>
        [Column(Name = @"CLVA_DESCRIPCION", Storage = "_CLVADESCRIPCION", DbType = "VARCHAR2(1500 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLVADESCRIPCION
        {
            get
            {
                return this._CLVADESCRIPCION;
            }
            set
            {
                if (this._CLVADESCRIPCION != value)
                {
                    this._CLVADESCRIPCION = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for Negocio.Data.PONEVSAIA in the schema.
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_VSAIA")]
    public partial class PONEVSAIA
    {
        #pragma warning disable 0649

        private string _NUMERO;

        private string _PROYECTO;

        private System.DateTime? _FECHASOLICITUD;

        private string _DESCRIPCION;

        private decimal? _VALORESTIMADO;
        #pragma warning restore 0649

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNUMEROChanging(string value);
        partial void OnNUMEROChanged();
        partial void OnPROYECTOChanging(string value);
        partial void OnPROYECTOChanged();
        partial void OnFECHASOLICITUDChanging(System.DateTime? value);
        partial void OnFECHASOLICITUDChanged();
        partial void OnDESCRIPCIONChanging(string value);
        partial void OnDESCRIPCIONChanged();
        partial void OnVALORESTIMADOChanging(decimal? value);
        partial void OnVALORESTIMADOChanged();
        #endregion

        public PONEVSAIA()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for NUMERO in the schema.
        /// </summary>
        [Column(Storage = "_NUMERO", DbType = "VARCHAR2(150 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NUMERO
        {
            get
            {
                return this._NUMERO;
            }
            set
            {
                if (this._NUMERO != value)
                {
                    this._NUMERO = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROYECTO in the schema.
        /// </summary>
        [Column(Storage = "_PROYECTO", DbType = "VARCHAR2(765 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROYECTO
        {
            get
            {
                return this._PROYECTO;
            }
            set
            {
                if (this._PROYECTO != value)
                {
                    this._PROYECTO = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FECHASOLICITUD in the schema.
        /// </summary>
        [Column(Name = @"FECHA_SOLICITUD", Storage = "_FECHASOLICITUD", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? FECHASOLICITUD
        {
            get
            {
                return this._FECHASOLICITUD;
            }
            set
            {
                if (this._FECHASOLICITUD != value)
                {
                    this._FECHASOLICITUD = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPCION in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPCION", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPCION
        {
            get
            {
                return this._DESCRIPCION;
            }
            set
            {
                if (this._DESCRIPCION != value)
                {
                    this._DESCRIPCION = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALORESTIMADO in the schema.
        /// </summary>
        [Column(Name = @"VALOR_ESTIMADO", Storage = "_VALORESTIMADO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? VALORESTIMADO
        {
            get
            {
                return this._VALORESTIMADO;
            }
            set
            {
                if (this._VALORESTIMADO != value)
                {
                    this._VALORESTIMADO = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for Negocio.Data.PONEVTIPOPERSONA in the schema.
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_VTIPO_PERSONA")]
    public partial class PONEVTIPOPERSONA
    {
        #pragma warning disable 0649

        private decimal _CLVACLASEVALOR;

        private decimal _CLVACODIGOVALOR;

        private string _CLVAVALOR;

        private string _CLVAESTADO;

        private decimal _CLASCLASE;

        private string _CLVADESCRIPCION;
        #pragma warning restore 0649

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCLVACLASEVALORChanging(decimal value);
        partial void OnCLVACLASEVALORChanged();
        partial void OnCLVACODIGOVALORChanging(decimal value);
        partial void OnCLVACODIGOVALORChanged();
        partial void OnCLVAVALORChanging(string value);
        partial void OnCLVAVALORChanged();
        partial void OnCLVAESTADOChanging(string value);
        partial void OnCLVAESTADOChanged();
        partial void OnCLASCLASEChanging(decimal value);
        partial void OnCLASCLASEChanged();
        partial void OnCLVADESCRIPCIONChanging(string value);
        partial void OnCLVADESCRIPCIONChanged();
        #endregion

        public PONEVTIPOPERSONA()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CLVACLASEVALOR in the schema.
        /// </summary>
        [Column(Name = @"CLVA_CLASEVALOR", Storage = "_CLVACLASEVALOR", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CLVACLASEVALOR
        {
            get
            {
                return this._CLVACLASEVALOR;
            }
            set
            {
                if (this._CLVACLASEVALOR != value)
                {
                    this._CLVACLASEVALOR = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLVACODIGOVALOR in the schema.
        /// </summary>
        [Column(Name = @"CLVA_CODIGOVALOR", Storage = "_CLVACODIGOVALOR", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CLVACODIGOVALOR
        {
            get
            {
                return this._CLVACODIGOVALOR;
            }
            set
            {
                if (this._CLVACODIGOVALOR != value)
                {
                    this._CLVACODIGOVALOR = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLVAVALOR in the schema.
        /// </summary>
        [Column(Name = @"CLVA_VALOR", Storage = "_CLVAVALOR", CanBeNull = false, DbType = "VARCHAR2(200 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLVAVALOR
        {
            get
            {
                return this._CLVAVALOR;
            }
            set
            {
                if (this._CLVAVALOR != value)
                {
                    this._CLVAVALOR = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLVAESTADO in the schema.
        /// </summary>
        [Column(Name = @"CLVA_ESTADO", Storage = "_CLVAESTADO", CanBeNull = false, DbType = "VARCHAR2(1 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLVAESTADO
        {
            get
            {
                return this._CLVAESTADO;
            }
            set
            {
                if (this._CLVAESTADO != value)
                {
                    this._CLVAESTADO = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLASCLASE in the schema.
        /// </summary>
        [Column(Name = @"CLAS_CLASE", Storage = "_CLASCLASE", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CLASCLASE
        {
            get
            {
                return this._CLASCLASE;
            }
            set
            {
                if (this._CLASCLASE != value)
                {
                    this._CLASCLASE = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLVADESCRIPCION in the schema.
        /// </summary>
        [Column(Name = @"CLVA_DESCRIPCION", Storage = "_CLVADESCRIPCION", DbType = "VARCHAR2(1500 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLVADESCRIPCION
        {
            get
            {
                return this._CLVADESCRIPCION;
            }
            set
            {
                if (this._CLVADESCRIPCION != value)
                {
                    this._CLVADESCRIPCION = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for Negocio.Data.PONEVAREA in the schema.
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_VAREAS")]
    public partial class PONEVAREA
    {
        #pragma warning disable 0649

        private decimal _CODAREA;

        private string _NOMBRE;

        private decimal? _GERENCIA;

        private decimal? _ESTADO;
        #pragma warning restore 0649

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCODAREAChanging(decimal value);
        partial void OnCODAREAChanged();
        partial void OnNOMBREChanging(string value);
        partial void OnNOMBREChanged();
        partial void OnGERENCIAChanging(decimal? value);
        partial void OnGERENCIAChanged();
        partial void OnESTADOChanging(decimal? value);
        partial void OnESTADOChanged();
        #endregion

        public PONEVAREA()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CODAREA in the schema.
        /// </summary>
        [Column(Name = @"COD_AREA", Storage = "_CODAREA", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CODAREA
        {
            get
            {
                return this._CODAREA;
            }
            set
            {
                if (this._CODAREA != value)
                {
                    this._CODAREA = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBRE in the schema.
        /// </summary>
        [Column(Storage = "_NOMBRE", CanBeNull = false, DbType = "VARCHAR2(1000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBRE
        {
            get
            {
                return this._NOMBRE;
            }
            set
            {
                if (this._NOMBRE != value)
                {
                    this._NOMBRE = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GERENCIA in the schema.
        /// </summary>
        [Column(Storage = "_GERENCIA", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? GERENCIA
        {
            get
            {
                return this._GERENCIA;
            }
            set
            {
                if (this._GERENCIA != value)
                {
                    this._GERENCIA = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ESTADO in the schema.
        /// </summary>
        [Column(Storage = "_ESTADO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? ESTADO
        {
            get
            {
                return this._ESTADO;
            }
            set
            {
                if (this._ESTADO != value)
                {
                    this._ESTADO = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for Negocio.Data.PONEVGERENCIA in the schema.
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.PONE_VGERENCIAS")]
    public partial class PONEVGERENCIA
    {
        #pragma warning disable 0649

        private decimal _ID;

        private string _NOMBRE;
        #pragma warning restore 0649

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(decimal value);
        partial void OnIDChanged();
        partial void OnNOMBREChanging(string value);
        partial void OnNOMBREChanged();
        #endregion

        public PONEVGERENCIA()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [Column(Storage = "_ID", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if (this._ID != value)
                {
                    this._ID = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBRE in the schema.
        /// </summary>
        [Column(Storage = "_NOMBRE", CanBeNull = false, DbType = "VARCHAR2(255 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBRE
        {
            get
            {
                return this._NOMBRE;
            }
            set
            {
                if (this._NOMBRE != value)
                {
                    this._NOMBRE = value;
                }
            }
        }
    }

    /// <summary>
    /// Tabla para la parametrizacion de los usuarios que pueden autorizar solicitudes de acuerdo a la gerencia
    /// </summary>
    [Table(Name = @"PORTAL_NEGOCIOS.POGE_AUTORIZADORGERENCIA")]
    public partial class POGEAUTORIZADORGERENCIA : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal? _USUAUSUARIO;

        private decimal? _IDGERENCIA;

        private decimal _LOGSUSUARIO;

        private System.DateTime _LOGSFECHA;

        private decimal _AUGEAUTORIZADORGERENCIA;
        #pragma warning restore 0649

        private EntityRef<POGEUSUARIO> _POGEUSUARIO;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnUSUAUSUARIOChanging(decimal? value);
        partial void OnUSUAUSUARIOChanged();
        partial void OnIDGERENCIAChanging(decimal? value);
        partial void OnIDGERENCIAChanged();
        partial void OnLOGSUSUARIOChanging(decimal value);
        partial void OnLOGSUSUARIOChanged();
        partial void OnLOGSFECHAChanging(System.DateTime value);
        partial void OnLOGSFECHAChanged();
        partial void OnAUGEAUTORIZADORGERENCIAChanging(decimal value);
        partial void OnAUGEAUTORIZADORGERENCIAChanged();
        #endregion

        public POGEAUTORIZADORGERENCIA()
        {
            this._POGEUSUARIO  = default(EntityRef<POGEUSUARIO>);
            OnCreated();
        }

    
        /// <summary>
        /// Codigo de usuario autorizador
        /// </summary>
        [Column(Name = @"USUA_USUARIO", Storage = "_USUAUSUARIO", DbType = "NUMBER NULL")]
        public decimal? USUAUSUARIO
        {
            get
            {
                return this._USUAUSUARIO;
            }
            set
            {
                if (this._USUAUSUARIO != value)
                {
                    if (this._POGEUSUARIO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnUSUAUSUARIOChanging(value);
                    this.SendPropertyChanging("USUAUSUARIO");
                    this._USUAUSUARIO = value;
                    this.SendPropertyChanged("USUAUSUARIO");
                    this.OnUSUAUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// Codigo de generecia 
        /// </summary>
        [Column(Name = @"ID_GERENCIA", Storage = "_IDGERENCIA", DbType = "NUMBER NULL")]
        public decimal? IDGERENCIA
        {
            get
            {
                return this._IDGERENCIA;
            }
            set
            {
                if (this._IDGERENCIA != value)
                {
                    this.OnIDGERENCIAChanging(value);
                    this.SendPropertyChanging("IDGERENCIA");
                    this._IDGERENCIA = value;
                    this.SendPropertyChanged("IDGERENCIA");
                    this.OnIDGERENCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// Auditoria usuario
        /// </summary>
        [Column(Name = @"LOGS_USUARIO", Storage = "_LOGSUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal LOGSUSUARIO
        {
            get
            {
                return this._LOGSUSUARIO;
            }
            set
            {
                if (this._LOGSUSUARIO != value)
                {
                    this.OnLOGSUSUARIOChanging(value);
                    this.SendPropertyChanging("LOGSUSUARIO");
                    this._LOGSUSUARIO = value;
                    this.SendPropertyChanged("LOGSUSUARIO");
                    this.OnLOGSUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// FECHA CREA REGISTRO
        /// </summary>
        [Column(Name = @"LOGS_FECHA", Storage = "_LOGSFECHA", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime LOGSFECHA
        {
            get
            {
                return this._LOGSFECHA;
            }
            set
            {
                if (this._LOGSFECHA != value)
                {
                    this.OnLOGSFECHAChanging(value);
                    this.SendPropertyChanging("LOGSFECHA");
                    this._LOGSFECHA = value;
                    this.SendPropertyChanged("LOGSFECHA");
                    this.OnLOGSFECHAChanged();
                }
            }
        }

    
        /// <summary>
        /// Secuencia de la tabla
        /// </summary>
        [Column(Name = @"AUGE_AUTORIZADORGERENCIA", Storage = "_AUGEAUTORIZADORGERENCIA", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal AUGEAUTORIZADORGERENCIA
        {
            get
            {
                return this._AUGEAUTORIZADORGERENCIA;
            }
            set
            {
                if (this._AUGEAUTORIZADORGERENCIA != value)
                {
                    this.OnAUGEAUTORIZADORGERENCIAChanging(value);
                    this.SendPropertyChanging("AUGEAUTORIZADORGERENCIA");
                    this._AUGEAUTORIZADORGERENCIA = value;
                    this.SendPropertyChanged("AUGEAUTORIZADORGERENCIA");
                    this.OnAUGEAUTORIZADORGERENCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for POGEUSUARIO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="POGEUSUARIO_POGEAUTORIZADORGERENCIA", Storage="_POGEUSUARIO", ThisKey="USUAUSUARIO", OtherKey="USUAUSUARIO", IsForeignKey=true)]
        public POGEUSUARIO POGEUSUARIO
        {
            get
            {
                return this._POGEUSUARIO.Entity;
            }
            set
            {
                POGEUSUARIO previousValue = this._POGEUSUARIO.Entity;
                if ((previousValue != value) || (this._POGEUSUARIO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("POGEUSUARIO");
                    if (previousValue != null)
                    {
                        this._POGEUSUARIO.Entity = null;
                        previousValue.POGEAUTORIZADORGERENCIAs.Remove(this);
                    }
                    this._POGEUSUARIO.Entity = value;
                    if (value != null)
                    {
                        this._USUAUSUARIO = value.USUAUSUARIO;
                        value.POGEAUTORIZADORGERENCIAs.Add(this);
                    }
                    else
                    {
                        this._USUAUSUARIO = default(decimal?);
                    }
                    this.SendPropertyChanged("POGEUSUARIO");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}

namespace Negocio.Data
{

    /// <summary>
    /// There are no comments for FOBTENERPAGOResult in the schema.
    /// </summary>
    public partial class FOBTENERPAGOResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal? _EMPRESA;

        private decimal? _NIT;

        private string _NOMBRE;

        private decimal? _NROAUXILIAR;

        private decimal? _VIGENCIAORPA;

        private decimal? _ORDENPAGO;

        private decimal? _VALORNETO;

        private System.DateTime? _FECHACREACION;

        private System.DateTime? _FECHAAUTORIZADO;

        private System.DateTime? _FECHAPAGO;

        private System.DateTime? _FECHAVENCIMIENTO;

        private string _CONCEPTO;

        private string _ESTADO;

        private string _CAUSADO;

        private string _LEGALIZADO;

        private string _AUTORIZADO;

        private string _INDICATIVODEPAGO;
        #pragma warning restore 0649

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnEMPRESAChanging(decimal? value);
        partial void OnEMPRESAChanged();
        partial void OnNITChanging(decimal? value);
        partial void OnNITChanged();
        partial void OnNOMBREChanging(string value);
        partial void OnNOMBREChanged();
        partial void OnNROAUXILIARChanging(decimal? value);
        partial void OnNROAUXILIARChanged();
        partial void OnVIGENCIAORPAChanging(decimal? value);
        partial void OnVIGENCIAORPAChanged();
        partial void OnORDENPAGOChanging(decimal? value);
        partial void OnORDENPAGOChanged();
        partial void OnVALORNETOChanging(decimal? value);
        partial void OnVALORNETOChanged();
        partial void OnFECHACREACIONChanging(System.DateTime? value);
        partial void OnFECHACREACIONChanged();
        partial void OnFECHAAUTORIZADOChanging(System.DateTime? value);
        partial void OnFECHAAUTORIZADOChanged();
        partial void OnFECHAPAGOChanging(System.DateTime? value);
        partial void OnFECHAPAGOChanged();
        partial void OnFECHAVENCIMIENTOChanging(System.DateTime? value);
        partial void OnFECHAVENCIMIENTOChanged();
        partial void OnCONCEPTOChanging(string value);
        partial void OnCONCEPTOChanged();
        partial void OnESTADOChanging(string value);
        partial void OnESTADOChanged();
        partial void OnCAUSADOChanging(string value);
        partial void OnCAUSADOChanged();
        partial void OnLEGALIZADOChanging(string value);
        partial void OnLEGALIZADOChanged();
        partial void OnAUTORIZADOChanging(string value);
        partial void OnAUTORIZADOChanged();
        partial void OnINDICATIVODEPAGOChanging(string value);
        partial void OnINDICATIVODEPAGOChanged();
        #endregion

        public FOBTENERPAGOResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for EMPRESA in the schema.
        /// </summary>
        [Column(Storage = "_EMPRESA", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? EMPRESA
        {
            get
            {
                return this._EMPRESA;
            }
            set
            {
                if (this._EMPRESA != value)
                {
                    this.OnEMPRESAChanging(value);
                    this.SendPropertyChanging("EMPRESA");
                    this._EMPRESA = value;
                    this.SendPropertyChanged("EMPRESA");
                    this.OnEMPRESAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NIT in the schema.
        /// </summary>
        [Column(Storage = "_NIT", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? NIT
        {
            get
            {
                return this._NIT;
            }
            set
            {
                if (this._NIT != value)
                {
                    this.OnNITChanging(value);
                    this.SendPropertyChanging("NIT");
                    this._NIT = value;
                    this.SendPropertyChanged("NIT");
                    this.OnNITChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBRE in the schema.
        /// </summary>
        [Column(Storage = "_NOMBRE", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBRE
        {
            get
            {
                return this._NOMBRE;
            }
            set
            {
                if (this._NOMBRE != value)
                {
                    this.OnNOMBREChanging(value);
                    this.SendPropertyChanging("NOMBRE");
                    this._NOMBRE = value;
                    this.SendPropertyChanged("NOMBRE");
                    this.OnNOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NROAUXILIAR in the schema.
        /// </summary>
        [Column(Name = @"NRO_AUXILIAR", Storage = "_NROAUXILIAR", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? NROAUXILIAR
        {
            get
            {
                return this._NROAUXILIAR;
            }
            set
            {
                if (this._NROAUXILIAR != value)
                {
                    this.OnNROAUXILIARChanging(value);
                    this.SendPropertyChanging("NROAUXILIAR");
                    this._NROAUXILIAR = value;
                    this.SendPropertyChanged("NROAUXILIAR");
                    this.OnNROAUXILIARChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VIGENCIAORPA in the schema.
        /// </summary>
        [Column(Name = @"VIGENCIA_ORPA", Storage = "_VIGENCIAORPA", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? VIGENCIAORPA
        {
            get
            {
                return this._VIGENCIAORPA;
            }
            set
            {
                if (this._VIGENCIAORPA != value)
                {
                    this.OnVIGENCIAORPAChanging(value);
                    this.SendPropertyChanging("VIGENCIAORPA");
                    this._VIGENCIAORPA = value;
                    this.SendPropertyChanged("VIGENCIAORPA");
                    this.OnVIGENCIAORPAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ORDENPAGO in the schema.
        /// </summary>
        [Column(Name = @"ORDEN_PAGO", Storage = "_ORDENPAGO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? ORDENPAGO
        {
            get
            {
                return this._ORDENPAGO;
            }
            set
            {
                if (this._ORDENPAGO != value)
                {
                    this.OnORDENPAGOChanging(value);
                    this.SendPropertyChanging("ORDENPAGO");
                    this._ORDENPAGO = value;
                    this.SendPropertyChanged("ORDENPAGO");
                    this.OnORDENPAGOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALORNETO in the schema.
        /// </summary>
        [Column(Name = @"VALOR_NETO", Storage = "_VALORNETO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? VALORNETO
        {
            get
            {
                return this._VALORNETO;
            }
            set
            {
                if (this._VALORNETO != value)
                {
                    this.OnVALORNETOChanging(value);
                    this.SendPropertyChanging("VALORNETO");
                    this._VALORNETO = value;
                    this.SendPropertyChanged("VALORNETO");
                    this.OnVALORNETOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FECHACREACION in the schema.
        /// </summary>
        [Column(Name = @"FECHA_CREACION", Storage = "_FECHACREACION", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? FECHACREACION
        {
            get
            {
                return this._FECHACREACION;
            }
            set
            {
                if (this._FECHACREACION != value)
                {
                    this.OnFECHACREACIONChanging(value);
                    this.SendPropertyChanging("FECHACREACION");
                    this._FECHACREACION = value;
                    this.SendPropertyChanged("FECHACREACION");
                    this.OnFECHACREACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FECHAAUTORIZADO in the schema.
        /// </summary>
        [Column(Name = @"FECHA_AUTORIZADO", Storage = "_FECHAAUTORIZADO", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? FECHAAUTORIZADO
        {
            get
            {
                return this._FECHAAUTORIZADO;
            }
            set
            {
                if (this._FECHAAUTORIZADO != value)
                {
                    this.OnFECHAAUTORIZADOChanging(value);
                    this.SendPropertyChanging("FECHAAUTORIZADO");
                    this._FECHAAUTORIZADO = value;
                    this.SendPropertyChanged("FECHAAUTORIZADO");
                    this.OnFECHAAUTORIZADOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FECHAPAGO in the schema.
        /// </summary>
        [Column(Name = @"FECHA_PAGO", Storage = "_FECHAPAGO", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? FECHAPAGO
        {
            get
            {
                return this._FECHAPAGO;
            }
            set
            {
                if (this._FECHAPAGO != value)
                {
                    this.OnFECHAPAGOChanging(value);
                    this.SendPropertyChanging("FECHAPAGO");
                    this._FECHAPAGO = value;
                    this.SendPropertyChanged("FECHAPAGO");
                    this.OnFECHAPAGOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FECHAVENCIMIENTO in the schema.
        /// </summary>
        [Column(Name = @"FECHA_VENCIMIENTO", Storage = "_FECHAVENCIMIENTO", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? FECHAVENCIMIENTO
        {
            get
            {
                return this._FECHAVENCIMIENTO;
            }
            set
            {
                if (this._FECHAVENCIMIENTO != value)
                {
                    this.OnFECHAVENCIMIENTOChanging(value);
                    this.SendPropertyChanging("FECHAVENCIMIENTO");
                    this._FECHAVENCIMIENTO = value;
                    this.SendPropertyChanged("FECHAVENCIMIENTO");
                    this.OnFECHAVENCIMIENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CONCEPTO in the schema.
        /// </summary>
        [Column(Storage = "_CONCEPTO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CONCEPTO
        {
            get
            {
                return this._CONCEPTO;
            }
            set
            {
                if (this._CONCEPTO != value)
                {
                    this.OnCONCEPTOChanging(value);
                    this.SendPropertyChanging("CONCEPTO");
                    this._CONCEPTO = value;
                    this.SendPropertyChanged("CONCEPTO");
                    this.OnCONCEPTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ESTADO in the schema.
        /// </summary>
        [Column(Storage = "_ESTADO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESTADO
        {
            get
            {
                return this._ESTADO;
            }
            set
            {
                if (this._ESTADO != value)
                {
                    this.OnESTADOChanging(value);
                    this.SendPropertyChanging("ESTADO");
                    this._ESTADO = value;
                    this.SendPropertyChanged("ESTADO");
                    this.OnESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CAUSADO in the schema.
        /// </summary>
        [Column(Storage = "_CAUSADO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CAUSADO
        {
            get
            {
                return this._CAUSADO;
            }
            set
            {
                if (this._CAUSADO != value)
                {
                    this.OnCAUSADOChanging(value);
                    this.SendPropertyChanging("CAUSADO");
                    this._CAUSADO = value;
                    this.SendPropertyChanged("CAUSADO");
                    this.OnCAUSADOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LEGALIZADO in the schema.
        /// </summary>
        [Column(Storage = "_LEGALIZADO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string LEGALIZADO
        {
            get
            {
                return this._LEGALIZADO;
            }
            set
            {
                if (this._LEGALIZADO != value)
                {
                    this.OnLEGALIZADOChanging(value);
                    this.SendPropertyChanging("LEGALIZADO");
                    this._LEGALIZADO = value;
                    this.SendPropertyChanged("LEGALIZADO");
                    this.OnLEGALIZADOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AUTORIZADO in the schema.
        /// </summary>
        [Column(Storage = "_AUTORIZADO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string AUTORIZADO
        {
            get
            {
                return this._AUTORIZADO;
            }
            set
            {
                if (this._AUTORIZADO != value)
                {
                    this.OnAUTORIZADOChanging(value);
                    this.SendPropertyChanging("AUTORIZADO");
                    this._AUTORIZADO = value;
                    this.SendPropertyChanged("AUTORIZADO");
                    this.OnAUTORIZADOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for INDICATIVODEPAGO in the schema.
        /// </summary>
        [Column(Name = @"INDICATIVO_DE_PAGO", Storage = "_INDICATIVODEPAGO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string INDICATIVODEPAGO
        {
            get
            {
                return this._INDICATIVODEPAGO;
            }
            set
            {
                if (this._INDICATIVODEPAGO != value)
                {
                    this.OnINDICATIVODEPAGOChanging(value);
                    this.SendPropertyChanging("INDICATIVODEPAGO");
                    this._INDICATIVODEPAGO = value;
                    this.SendPropertyChanged("INDICATIVODEPAGO");
                    this.OnINDICATIVODEPAGOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FDESCUENTOPAGOResult in the schema.
    /// </summary>
    public partial class FDESCUENTOPAGOResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _DESCRIPCION;

        private decimal? _VALOR;
        #pragma warning restore 0649

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnDESCRIPCIONChanging(string value);
        partial void OnDESCRIPCIONChanged();
        partial void OnVALORChanging(decimal? value);
        partial void OnVALORChanged();
        #endregion

        public FDESCUENTOPAGOResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for DESCRIPCION in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPCION", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPCION
        {
            get
            {
                return this._DESCRIPCION;
            }
            set
            {
                if (this._DESCRIPCION != value)
                {
                    this.OnDESCRIPCIONChanging(value);
                    this.SendPropertyChanging("DESCRIPCION");
                    this._DESCRIPCION = value;
                    this.SendPropertyChanged("DESCRIPCION");
                    this.OnDESCRIPCIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALOR in the schema.
        /// </summary>
        [Column(Storage = "_VALOR", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? VALOR
        {
            get
            {
                return this._VALOR;
            }
            set
            {
                if (this._VALOR != value)
                {
                    this.OnVALORChanging(value);
                    this.SendPropertyChanging("VALOR");
                    this._VALOR = value;
                    this.SendPropertyChanged("VALOR");
                    this.OnVALORChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FENCABEZADORETENCIONResult in the schema.
    /// </summary>
    public partial class FENCABEZADORETENCIONResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _DAUXILIAR;

        private decimal? _NIT;

        private decimal? _PERIODO1;

        private decimal? _PERIODO2;
        #pragma warning restore 0649

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnDAUXILIARChanging(string value);
        partial void OnDAUXILIARChanged();
        partial void OnNITChanging(decimal? value);
        partial void OnNITChanged();
        partial void OnPERIODO1Changing(decimal? value);
        partial void OnPERIODO1Changed();
        partial void OnPERIODO2Changing(decimal? value);
        partial void OnPERIODO2Changed();
        #endregion

        public FENCABEZADORETENCIONResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for DAUXILIAR in the schema.
        /// </summary>
        [Column(Name = @"D_AUXILIAR", Storage = "_DAUXILIAR", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DAUXILIAR
        {
            get
            {
                return this._DAUXILIAR;
            }
            set
            {
                if (this._DAUXILIAR != value)
                {
                    this.OnDAUXILIARChanging(value);
                    this.SendPropertyChanging("DAUXILIAR");
                    this._DAUXILIAR = value;
                    this.SendPropertyChanged("DAUXILIAR");
                    this.OnDAUXILIARChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NIT in the schema.
        /// </summary>
        [Column(Storage = "_NIT", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? NIT
        {
            get
            {
                return this._NIT;
            }
            set
            {
                if (this._NIT != value)
                {
                    this.OnNITChanging(value);
                    this.SendPropertyChanging("NIT");
                    this._NIT = value;
                    this.SendPropertyChanged("NIT");
                    this.OnNITChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PERIODO1 in the schema.
        /// </summary>
        [Column(Storage = "_PERIODO1", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PERIODO1
        {
            get
            {
                return this._PERIODO1;
            }
            set
            {
                if (this._PERIODO1 != value)
                {
                    this.OnPERIODO1Changing(value);
                    this.SendPropertyChanging("PERIODO1");
                    this._PERIODO1 = value;
                    this.SendPropertyChanged("PERIODO1");
                    this.OnPERIODO1Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PERIODO2 in the schema.
        /// </summary>
        [Column(Storage = "_PERIODO2", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PERIODO2
        {
            get
            {
                return this._PERIODO2;
            }
            set
            {
                if (this._PERIODO2 != value)
                {
                    this.OnPERIODO2Changing(value);
                    this.SendPropertyChanging("PERIODO2");
                    this._PERIODO2 = value;
                    this.SendPropertyChanged("PERIODO2");
                    this.OnPERIODO2Changed();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FDETALLERETENCIONResult in the schema.
    /// </summary>
    public partial class FDETALLERETENCIONResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal? _NIT;

        private string _DCONCEPTORETENCION;

        private decimal? _SUMB;

        private decimal? _SUMV;

        private decimal? _PORCRETENCION;

        private string _DAUXILIAR;

        private decimal? _PERIODO1;

        private decimal? _PERIODO2;
        #pragma warning restore 0649

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNITChanging(decimal? value);
        partial void OnNITChanged();
        partial void OnDCONCEPTORETENCIONChanging(string value);
        partial void OnDCONCEPTORETENCIONChanged();
        partial void OnSUMBChanging(decimal? value);
        partial void OnSUMBChanged();
        partial void OnSUMVChanging(decimal? value);
        partial void OnSUMVChanged();
        partial void OnPORCRETENCIONChanging(decimal? value);
        partial void OnPORCRETENCIONChanged();
        partial void OnDAUXILIARChanging(string value);
        partial void OnDAUXILIARChanged();
        partial void OnPERIODO1Changing(decimal? value);
        partial void OnPERIODO1Changed();
        partial void OnPERIODO2Changing(decimal? value);
        partial void OnPERIODO2Changed();
        #endregion

        public FDETALLERETENCIONResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for NIT in the schema.
        /// </summary>
        [Column(Storage = "_NIT", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? NIT
        {
            get
            {
                return this._NIT;
            }
            set
            {
                if (this._NIT != value)
                {
                    this.OnNITChanging(value);
                    this.SendPropertyChanging("NIT");
                    this._NIT = value;
                    this.SendPropertyChanged("NIT");
                    this.OnNITChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DCONCEPTORETENCION in the schema.
        /// </summary>
        [Column(Name = @"D_CONCEPTO_RETENCION", Storage = "_DCONCEPTORETENCION", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DCONCEPTORETENCION
        {
            get
            {
                return this._DCONCEPTORETENCION;
            }
            set
            {
                if (this._DCONCEPTORETENCION != value)
                {
                    this.OnDCONCEPTORETENCIONChanging(value);
                    this.SendPropertyChanging("DCONCEPTORETENCION");
                    this._DCONCEPTORETENCION = value;
                    this.SendPropertyChanged("DCONCEPTORETENCION");
                    this.OnDCONCEPTORETENCIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SUMB in the schema.
        /// </summary>
        [Column(Storage = "_SUMB", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? SUMB
        {
            get
            {
                return this._SUMB;
            }
            set
            {
                if (this._SUMB != value)
                {
                    this.OnSUMBChanging(value);
                    this.SendPropertyChanging("SUMB");
                    this._SUMB = value;
                    this.SendPropertyChanged("SUMB");
                    this.OnSUMBChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SUMV in the schema.
        /// </summary>
        [Column(Storage = "_SUMV", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? SUMV
        {
            get
            {
                return this._SUMV;
            }
            set
            {
                if (this._SUMV != value)
                {
                    this.OnSUMVChanging(value);
                    this.SendPropertyChanging("SUMV");
                    this._SUMV = value;
                    this.SendPropertyChanged("SUMV");
                    this.OnSUMVChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PORCRETENCION in the schema.
        /// </summary>
        [Column(Name = @"PORC_RETENCION", Storage = "_PORCRETENCION", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PORCRETENCION
        {
            get
            {
                return this._PORCRETENCION;
            }
            set
            {
                if (this._PORCRETENCION != value)
                {
                    this.OnPORCRETENCIONChanging(value);
                    this.SendPropertyChanging("PORCRETENCION");
                    this._PORCRETENCION = value;
                    this.SendPropertyChanged("PORCRETENCION");
                    this.OnPORCRETENCIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DAUXILIAR in the schema.
        /// </summary>
        [Column(Name = @"D_AUXILIAR", Storage = "_DAUXILIAR", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DAUXILIAR
        {
            get
            {
                return this._DAUXILIAR;
            }
            set
            {
                if (this._DAUXILIAR != value)
                {
                    this.OnDAUXILIARChanging(value);
                    this.SendPropertyChanging("DAUXILIAR");
                    this._DAUXILIAR = value;
                    this.SendPropertyChanged("DAUXILIAR");
                    this.OnDAUXILIARChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PERIODO1 in the schema.
        /// </summary>
        [Column(Storage = "_PERIODO1", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PERIODO1
        {
            get
            {
                return this._PERIODO1;
            }
            set
            {
                if (this._PERIODO1 != value)
                {
                    this.OnPERIODO1Changing(value);
                    this.SendPropertyChanging("PERIODO1");
                    this._PERIODO1 = value;
                    this.SendPropertyChanged("PERIODO1");
                    this.OnPERIODO1Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PERIODO2 in the schema.
        /// </summary>
        [Column(Storage = "_PERIODO2", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PERIODO2
        {
            get
            {
                return this._PERIODO2;
            }
            set
            {
                if (this._PERIODO2 != value)
                {
                    this.OnPERIODO2Changing(value);
                    this.SendPropertyChanging("PERIODO2");
                    this._PERIODO2 = value;
                    this.SendPropertyChanged("PERIODO2");
                    this.OnPERIODO2Changed();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FDETALLEPAGOResult in the schema.
    /// </summary>
    public partial class FDETALLEPAGOResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal? _EMPRESA;

        private decimal? _ORDENPAGO;

        private decimal? _NROCOMPROBANTE;

        private decimal? _TIPOCOMPROBANTE;

        private decimal? _VIGENCIAORPA;

        private decimal? _NIT;

        private decimal? _NROAUXILIAR;

        private decimal? _NROCHEQUE;

        private System.DateTime? _FECHACOMPROBANTE;

        private string _MEDIOPAGO;

        private string _NOMBREAUXILIAR;

        private decimal? _VALORBRUTO;

        private decimal? _VALORNETO;

        private string _TIPODOCUMENTO;

        private string _NRODOCUMENTO;

        private decimal? _VIGENCIADOCUMENTO;

        private System.DateTime? _FECHADOCUMENTO;

        private string _CONCEPTO;

        private decimal? _BANCO;

        private string _NOMBANCO;
        #pragma warning restore 0649

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnEMPRESAChanging(decimal? value);
        partial void OnEMPRESAChanged();
        partial void OnORDENPAGOChanging(decimal? value);
        partial void OnORDENPAGOChanged();
        partial void OnNROCOMPROBANTEChanging(decimal? value);
        partial void OnNROCOMPROBANTEChanged();
        partial void OnTIPOCOMPROBANTEChanging(decimal? value);
        partial void OnTIPOCOMPROBANTEChanged();
        partial void OnVIGENCIAORPAChanging(decimal? value);
        partial void OnVIGENCIAORPAChanged();
        partial void OnNITChanging(decimal? value);
        partial void OnNITChanged();
        partial void OnNROAUXILIARChanging(decimal? value);
        partial void OnNROAUXILIARChanged();
        partial void OnNROCHEQUEChanging(decimal? value);
        partial void OnNROCHEQUEChanged();
        partial void OnFECHACOMPROBANTEChanging(System.DateTime? value);
        partial void OnFECHACOMPROBANTEChanged();
        partial void OnMEDIOPAGOChanging(string value);
        partial void OnMEDIOPAGOChanged();
        partial void OnNOMBREAUXILIARChanging(string value);
        partial void OnNOMBREAUXILIARChanged();
        partial void OnVALORBRUTOChanging(decimal? value);
        partial void OnVALORBRUTOChanged();
        partial void OnVALORNETOChanging(decimal? value);
        partial void OnVALORNETOChanged();
        partial void OnTIPODOCUMENTOChanging(string value);
        partial void OnTIPODOCUMENTOChanged();
        partial void OnNRODOCUMENTOChanging(string value);
        partial void OnNRODOCUMENTOChanged();
        partial void OnVIGENCIADOCUMENTOChanging(decimal? value);
        partial void OnVIGENCIADOCUMENTOChanged();
        partial void OnFECHADOCUMENTOChanging(System.DateTime? value);
        partial void OnFECHADOCUMENTOChanged();
        partial void OnCONCEPTOChanging(string value);
        partial void OnCONCEPTOChanged();
        partial void OnBANCOChanging(decimal? value);
        partial void OnBANCOChanged();
        partial void OnNOMBANCOChanging(string value);
        partial void OnNOMBANCOChanged();
        #endregion

        public FDETALLEPAGOResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for EMPRESA in the schema.
        /// </summary>
        [Column(Storage = "_EMPRESA", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? EMPRESA
        {
            get
            {
                return this._EMPRESA;
            }
            set
            {
                if (this._EMPRESA != value)
                {
                    this.OnEMPRESAChanging(value);
                    this.SendPropertyChanging("EMPRESA");
                    this._EMPRESA = value;
                    this.SendPropertyChanged("EMPRESA");
                    this.OnEMPRESAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ORDENPAGO in the schema.
        /// </summary>
        [Column(Name = @"ORDEN_PAGO", Storage = "_ORDENPAGO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? ORDENPAGO
        {
            get
            {
                return this._ORDENPAGO;
            }
            set
            {
                if (this._ORDENPAGO != value)
                {
                    this.OnORDENPAGOChanging(value);
                    this.SendPropertyChanging("ORDENPAGO");
                    this._ORDENPAGO = value;
                    this.SendPropertyChanged("ORDENPAGO");
                    this.OnORDENPAGOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NROCOMPROBANTE in the schema.
        /// </summary>
        [Column(Name = @"NRO_COMPROBANTE", Storage = "_NROCOMPROBANTE", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? NROCOMPROBANTE
        {
            get
            {
                return this._NROCOMPROBANTE;
            }
            set
            {
                if (this._NROCOMPROBANTE != value)
                {
                    this.OnNROCOMPROBANTEChanging(value);
                    this.SendPropertyChanging("NROCOMPROBANTE");
                    this._NROCOMPROBANTE = value;
                    this.SendPropertyChanged("NROCOMPROBANTE");
                    this.OnNROCOMPROBANTEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIPOCOMPROBANTE in the schema.
        /// </summary>
        [Column(Name = @"TIPO_COMPROBANTE", Storage = "_TIPOCOMPROBANTE", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? TIPOCOMPROBANTE
        {
            get
            {
                return this._TIPOCOMPROBANTE;
            }
            set
            {
                if (this._TIPOCOMPROBANTE != value)
                {
                    this.OnTIPOCOMPROBANTEChanging(value);
                    this.SendPropertyChanging("TIPOCOMPROBANTE");
                    this._TIPOCOMPROBANTE = value;
                    this.SendPropertyChanged("TIPOCOMPROBANTE");
                    this.OnTIPOCOMPROBANTEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VIGENCIAORPA in the schema.
        /// </summary>
        [Column(Name = @"VIGENCIA_ORPA", Storage = "_VIGENCIAORPA", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? VIGENCIAORPA
        {
            get
            {
                return this._VIGENCIAORPA;
            }
            set
            {
                if (this._VIGENCIAORPA != value)
                {
                    this.OnVIGENCIAORPAChanging(value);
                    this.SendPropertyChanging("VIGENCIAORPA");
                    this._VIGENCIAORPA = value;
                    this.SendPropertyChanged("VIGENCIAORPA");
                    this.OnVIGENCIAORPAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NIT in the schema.
        /// </summary>
        [Column(Storage = "_NIT", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? NIT
        {
            get
            {
                return this._NIT;
            }
            set
            {
                if (this._NIT != value)
                {
                    this.OnNITChanging(value);
                    this.SendPropertyChanging("NIT");
                    this._NIT = value;
                    this.SendPropertyChanged("NIT");
                    this.OnNITChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NROAUXILIAR in the schema.
        /// </summary>
        [Column(Name = @"NRO_AUXILIAR", Storage = "_NROAUXILIAR", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? NROAUXILIAR
        {
            get
            {
                return this._NROAUXILIAR;
            }
            set
            {
                if (this._NROAUXILIAR != value)
                {
                    this.OnNROAUXILIARChanging(value);
                    this.SendPropertyChanging("NROAUXILIAR");
                    this._NROAUXILIAR = value;
                    this.SendPropertyChanged("NROAUXILIAR");
                    this.OnNROAUXILIARChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NROCHEQUE in the schema.
        /// </summary>
        [Column(Name = @"NRO_CHEQUE", Storage = "_NROCHEQUE", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? NROCHEQUE
        {
            get
            {
                return this._NROCHEQUE;
            }
            set
            {
                if (this._NROCHEQUE != value)
                {
                    this.OnNROCHEQUEChanging(value);
                    this.SendPropertyChanging("NROCHEQUE");
                    this._NROCHEQUE = value;
                    this.SendPropertyChanged("NROCHEQUE");
                    this.OnNROCHEQUEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FECHACOMPROBANTE in the schema.
        /// </summary>
        [Column(Name = @"FECHA_COMPROBANTE", Storage = "_FECHACOMPROBANTE", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? FECHACOMPROBANTE
        {
            get
            {
                return this._FECHACOMPROBANTE;
            }
            set
            {
                if (this._FECHACOMPROBANTE != value)
                {
                    this.OnFECHACOMPROBANTEChanging(value);
                    this.SendPropertyChanging("FECHACOMPROBANTE");
                    this._FECHACOMPROBANTE = value;
                    this.SendPropertyChanged("FECHACOMPROBANTE");
                    this.OnFECHACOMPROBANTEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MEDIOPAGO in the schema.
        /// </summary>
        [Column(Name = @"MEDIO_PAGO", Storage = "_MEDIOPAGO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MEDIOPAGO
        {
            get
            {
                return this._MEDIOPAGO;
            }
            set
            {
                if (this._MEDIOPAGO != value)
                {
                    this.OnMEDIOPAGOChanging(value);
                    this.SendPropertyChanging("MEDIOPAGO");
                    this._MEDIOPAGO = value;
                    this.SendPropertyChanged("MEDIOPAGO");
                    this.OnMEDIOPAGOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBREAUXILIAR in the schema.
        /// </summary>
        [Column(Name = @"NOMBRE_AUXILIAR", Storage = "_NOMBREAUXILIAR", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBREAUXILIAR
        {
            get
            {
                return this._NOMBREAUXILIAR;
            }
            set
            {
                if (this._NOMBREAUXILIAR != value)
                {
                    this.OnNOMBREAUXILIARChanging(value);
                    this.SendPropertyChanging("NOMBREAUXILIAR");
                    this._NOMBREAUXILIAR = value;
                    this.SendPropertyChanged("NOMBREAUXILIAR");
                    this.OnNOMBREAUXILIARChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALORBRUTO in the schema.
        /// </summary>
        [Column(Name = @"VALOR_BRUTO", Storage = "_VALORBRUTO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? VALORBRUTO
        {
            get
            {
                return this._VALORBRUTO;
            }
            set
            {
                if (this._VALORBRUTO != value)
                {
                    this.OnVALORBRUTOChanging(value);
                    this.SendPropertyChanging("VALORBRUTO");
                    this._VALORBRUTO = value;
                    this.SendPropertyChanged("VALORBRUTO");
                    this.OnVALORBRUTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALORNETO in the schema.
        /// </summary>
        [Column(Name = @"VALOR_NETO", Storage = "_VALORNETO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? VALORNETO
        {
            get
            {
                return this._VALORNETO;
            }
            set
            {
                if (this._VALORNETO != value)
                {
                    this.OnVALORNETOChanging(value);
                    this.SendPropertyChanging("VALORNETO");
                    this._VALORNETO = value;
                    this.SendPropertyChanged("VALORNETO");
                    this.OnVALORNETOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIPODOCUMENTO in the schema.
        /// </summary>
        [Column(Name = @"TIPO_DOCUMENTO", Storage = "_TIPODOCUMENTO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TIPODOCUMENTO
        {
            get
            {
                return this._TIPODOCUMENTO;
            }
            set
            {
                if (this._TIPODOCUMENTO != value)
                {
                    this.OnTIPODOCUMENTOChanging(value);
                    this.SendPropertyChanging("TIPODOCUMENTO");
                    this._TIPODOCUMENTO = value;
                    this.SendPropertyChanged("TIPODOCUMENTO");
                    this.OnTIPODOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NRODOCUMENTO in the schema.
        /// </summary>
        [Column(Name = @"NRO_DOCUMENTO", Storage = "_NRODOCUMENTO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NRODOCUMENTO
        {
            get
            {
                return this._NRODOCUMENTO;
            }
            set
            {
                if (this._NRODOCUMENTO != value)
                {
                    this.OnNRODOCUMENTOChanging(value);
                    this.SendPropertyChanging("NRODOCUMENTO");
                    this._NRODOCUMENTO = value;
                    this.SendPropertyChanged("NRODOCUMENTO");
                    this.OnNRODOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VIGENCIADOCUMENTO in the schema.
        /// </summary>
        [Column(Name = @"VIGENCIA_DOCUMENTO", Storage = "_VIGENCIADOCUMENTO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? VIGENCIADOCUMENTO
        {
            get
            {
                return this._VIGENCIADOCUMENTO;
            }
            set
            {
                if (this._VIGENCIADOCUMENTO != value)
                {
                    this.OnVIGENCIADOCUMENTOChanging(value);
                    this.SendPropertyChanging("VIGENCIADOCUMENTO");
                    this._VIGENCIADOCUMENTO = value;
                    this.SendPropertyChanged("VIGENCIADOCUMENTO");
                    this.OnVIGENCIADOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FECHADOCUMENTO in the schema.
        /// </summary>
        [Column(Name = @"FECHA_DOCUMENTO", Storage = "_FECHADOCUMENTO", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? FECHADOCUMENTO
        {
            get
            {
                return this._FECHADOCUMENTO;
            }
            set
            {
                if (this._FECHADOCUMENTO != value)
                {
                    this.OnFECHADOCUMENTOChanging(value);
                    this.SendPropertyChanging("FECHADOCUMENTO");
                    this._FECHADOCUMENTO = value;
                    this.SendPropertyChanged("FECHADOCUMENTO");
                    this.OnFECHADOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CONCEPTO in the schema.
        /// </summary>
        [Column(Storage = "_CONCEPTO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CONCEPTO
        {
            get
            {
                return this._CONCEPTO;
            }
            set
            {
                if (this._CONCEPTO != value)
                {
                    this.OnCONCEPTOChanging(value);
                    this.SendPropertyChanging("CONCEPTO");
                    this._CONCEPTO = value;
                    this.SendPropertyChanged("CONCEPTO");
                    this.OnCONCEPTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BANCO in the schema.
        /// </summary>
        [Column(Storage = "_BANCO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? BANCO
        {
            get
            {
                return this._BANCO;
            }
            set
            {
                if (this._BANCO != value)
                {
                    this.OnBANCOChanging(value);
                    this.SendPropertyChanging("BANCO");
                    this._BANCO = value;
                    this.SendPropertyChanged("BANCO");
                    this.OnBANCOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBANCO in the schema.
        /// </summary>
        [Column(Name = @"NOM_BANCO", Storage = "_NOMBANCO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBANCO
        {
            get
            {
                return this._NOMBANCO;
            }
            set
            {
                if (this._NOMBANCO != value)
                {
                    this.OnNOMBANCOChanging(value);
                    this.SendPropertyChanging("NOMBANCO");
                    this._NOMBANCO = value;
                    this.SendPropertyChanged("NOMBANCO");
                    this.OnNOMBANCOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FPROVEEDORESREGISTRADOSMEResult in the schema.
    /// </summary>
    public partial class FPROVEEDORESREGISTRADOSMEResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal? _NUMEROMES;

        private string _NOMBREMES;

        private decimal? _NROREGISTROS;
        #pragma warning restore 0649

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNUMEROMESChanging(decimal? value);
        partial void OnNUMEROMESChanged();
        partial void OnNOMBREMESChanging(string value);
        partial void OnNOMBREMESChanged();
        partial void OnNROREGISTROSChanging(decimal? value);
        partial void OnNROREGISTROSChanged();
        #endregion

        public FPROVEEDORESREGISTRADOSMEResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for NUMEROMES in the schema.
        /// </summary>
        [Column(Name = @"NUMERO_MES", Storage = "_NUMEROMES", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? NUMEROMES
        {
            get
            {
                return this._NUMEROMES;
            }
            set
            {
                if (this._NUMEROMES != value)
                {
                    this.OnNUMEROMESChanging(value);
                    this.SendPropertyChanging("NUMEROMES");
                    this._NUMEROMES = value;
                    this.SendPropertyChanged("NUMEROMES");
                    this.OnNUMEROMESChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBREMES in the schema.
        /// </summary>
        [Column(Name = @"NOMBRE_MES", Storage = "_NOMBREMES", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBREMES
        {
            get
            {
                return this._NOMBREMES;
            }
            set
            {
                if (this._NOMBREMES != value)
                {
                    this.OnNOMBREMESChanging(value);
                    this.SendPropertyChanging("NOMBREMES");
                    this._NOMBREMES = value;
                    this.SendPropertyChanged("NOMBREMES");
                    this.OnNOMBREMESChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NROREGISTROS in the schema.
        /// </summary>
        [Column(Name = @"NRO_REGISTROS", Storage = "_NROREGISTROS", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? NROREGISTROS
        {
            get
            {
                return this._NROREGISTROS;
            }
            set
            {
                if (this._NROREGISTROS != value)
                {
                    this.OnNROREGISTROSChanging(value);
                    this.SendPropertyChanging("NROREGISTROS");
                    this._NROREGISTROS = value;
                    this.SendPropertyChanged("NROREGISTROS");
                    this.OnNROREGISTROSChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FAUTORIZADORGERENCIAXAREAResult in the schema.
    /// </summary>
    public partial class FAUTORIZADORGERENCIAXAREAResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal? _USUAUSUARIO;

        private string _USUANOMBRE;

        private string _USUACORREO;
        #pragma warning restore 0649

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnUSUAUSUARIOChanging(decimal? value);
        partial void OnUSUAUSUARIOChanged();
        partial void OnUSUANOMBREChanging(string value);
        partial void OnUSUANOMBREChanged();
        partial void OnUSUACORREOChanging(string value);
        partial void OnUSUACORREOChanged();
        #endregion

        public FAUTORIZADORGERENCIAXAREAResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for USUAUSUARIO in the schema.
        /// </summary>
        [Column(Name = @"USUA_USUARIO", Storage = "_USUAUSUARIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? USUAUSUARIO
        {
            get
            {
                return this._USUAUSUARIO;
            }
            set
            {
                if (this._USUAUSUARIO != value)
                {
                    this.OnUSUAUSUARIOChanging(value);
                    this.SendPropertyChanging("USUAUSUARIO");
                    this._USUAUSUARIO = value;
                    this.SendPropertyChanged("USUAUSUARIO");
                    this.OnUSUAUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USUANOMBRE in the schema.
        /// </summary>
        [Column(Name = @"USUA_NOMBRE", Storage = "_USUANOMBRE", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string USUANOMBRE
        {
            get
            {
                return this._USUANOMBRE;
            }
            set
            {
                if (this._USUANOMBRE != value)
                {
                    this.OnUSUANOMBREChanging(value);
                    this.SendPropertyChanging("USUANOMBRE");
                    this._USUANOMBRE = value;
                    this.SendPropertyChanged("USUANOMBRE");
                    this.OnUSUANOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USUACORREO in the schema.
        /// </summary>
        [Column(Name = @"USUA_CORREO", Storage = "_USUACORREO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string USUACORREO
        {
            get
            {
                return this._USUACORREO;
            }
            set
            {
                if (this._USUACORREO != value)
                {
                    this.OnUSUACORREOChanging(value);
                    this.SendPropertyChanging("USUACORREO");
                    this._USUACORREO = value;
                    this.SendPropertyChanged("USUACORREO");
                    this.OnUSUACORREOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FOBTENERPROVEEDORResult in the schema.
    /// </summary>
    public partial class FOBTENERPROVEEDORResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _PROVPROVEEDOR;

        private string _PROVRAZONSOCIAL;

        private string _PROVLUGARNACIMIENTO;

        private string _PROVDIRECCIONPRINCIAL;

        private string _PROVCIUDAD;

        private double? _PROVTELEFONO;

        private string _PROVEMAIL;

        private string _PROVPROFESION;

        private decimal? _PROVACTIVIDAD;

        private string _PROVEMPRESATRABAJA;

        private string _PROVCARGO;

        private string _PROVTELEFONOEMPRESA;

        private string _PROVDIRECCIONCOMERCIAL;

        private string _PROVCIUDADEMPRESA;

        private decimal? _PROVFAX;

        private decimal? _CLASTIPOIDENTIFICACION2;

        private string _PROVIDENTIFICACION;

        private System.DateTime? _PROVFECHANACIMIENTO;

        private string _PROVMANEJARECURSOPUBLICOS;

        private string _PROVRECONOCIMIENTOPUBLICO;

        private string _PROVPODERPUBLICO;

        private string _PROVOBSERVACION;

        private decimal? _CLASTIPOPERSONAL1;

        private string _PROVDIRECCIONSUCURSAL;

        private string _PROVCIUDADSUCURSAL;

        private string _PROVTELEFONOSUCURSAL;

        private string _CLASTIPOEMPRESA13;

        private string _CLASSECTORECONOMICO14;

        private string _PROVREPRESENTANTELEGAL;

        private string _CLASTIPOIDENTREPRES2;

        private string _PROVIDENTREPRESENTANTE;

        private System.DateTime? _PROVFECEXPIDENTREPRESENTANTE;

        private string _PROVLUGAREXPIDENTREPRESENT;

        private System.DateTime? _PROVFECHANACIMIENTOREP;

        private string _PROVLUGARNACIMIENTOREP;

        private string _PROVNACIONALIDADREPRESENTANTE;

        private string _ACECCODIGOACTIVIDAD;

        private string _ACECNOMBRE;

        private decimal? _PROVINGRESOSMENSUALES;

        private decimal? _PROVEGRESOSMENSUALES;

        private decimal? _PROVACTIVOS;

        private decimal? _PROVPASIVOS;

        private decimal? _PROVPATRIMONIO;

        private decimal? _PROVOTROSINGRESOS;

        private string _PROVCONCEPTOOTROSINGRESOS;

        private string _PROVTRANSMONEDAEXT;

        private string _CLASTIPOMONEDA5;

        private string _PROVPRODFINANEXT;

        private string _PROVENTIDADESTATAL;

        private string _PROVENTIDADSINANILUCRO;

        private string _PROVRESOLENTSINANILUCRO;

        private string _PROVGRANCONTRIBUYENTE;

        private string _PROVRESOLGRANCONTRIBUYENTE;

        private string _PROVRESPONSABLEIVA;

        private string _PROVAUTORRETENEDOR;

        private string _PROVRESOLAUTORRETENEDOR;

        private string _PROVCONTRIBUYENTERENTA;

        private string _PROVAGENTERETENEDORIVA;

        private string _PROVRESOLAGENTERETENEDORIVA;

        private string _PROVINDUSTRIAYCOMERCIO;

        private string _CLASENTIDADBANCARIA6;

        private string _PROVSUCURSALBANCO;

        private string _PROVNUMEROCUENTA;

        private string _CLASTIPOCUENTA7;

        private string _PROVTITULARCUENTA;

        private string _PROVIDENTITULARCUENTA;

        private string _PROVCLASTAMANO;

        private string _PROVCLASSECTOR;

        private string _PROVOPERMERCANTILES;
        #pragma warning restore 0649

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnPROVPROVEEDORChanging(decimal value);
        partial void OnPROVPROVEEDORChanged();
        partial void OnPROVRAZONSOCIALChanging(string value);
        partial void OnPROVRAZONSOCIALChanged();
        partial void OnPROVLUGARNACIMIENTOChanging(string value);
        partial void OnPROVLUGARNACIMIENTOChanged();
        partial void OnPROVDIRECCIONPRINCIALChanging(string value);
        partial void OnPROVDIRECCIONPRINCIALChanged();
        partial void OnPROVCIUDADChanging(string value);
        partial void OnPROVCIUDADChanged();
        partial void OnPROVTELEFONOChanging(double? value);
        partial void OnPROVTELEFONOChanged();
        partial void OnPROVEMAILChanging(string value);
        partial void OnPROVEMAILChanged();
        partial void OnPROVPROFESIONChanging(string value);
        partial void OnPROVPROFESIONChanged();
        partial void OnPROVACTIVIDADChanging(decimal? value);
        partial void OnPROVACTIVIDADChanged();
        partial void OnPROVEMPRESATRABAJAChanging(string value);
        partial void OnPROVEMPRESATRABAJAChanged();
        partial void OnPROVCARGOChanging(string value);
        partial void OnPROVCARGOChanged();
        partial void OnPROVTELEFONOEMPRESAChanging(string value);
        partial void OnPROVTELEFONOEMPRESAChanged();
        partial void OnPROVDIRECCIONCOMERCIALChanging(string value);
        partial void OnPROVDIRECCIONCOMERCIALChanged();
        partial void OnPROVCIUDADEMPRESAChanging(string value);
        partial void OnPROVCIUDADEMPRESAChanged();
        partial void OnPROVFAXChanging(decimal? value);
        partial void OnPROVFAXChanged();
        partial void OnCLASTIPOIDENTIFICACION2Changing(decimal? value);
        partial void OnCLASTIPOIDENTIFICACION2Changed();
        partial void OnPROVIDENTIFICACIONChanging(string value);
        partial void OnPROVIDENTIFICACIONChanged();
        partial void OnPROVFECHANACIMIENTOChanging(System.DateTime? value);
        partial void OnPROVFECHANACIMIENTOChanged();
        partial void OnPROVMANEJARECURSOPUBLICOSChanging(string value);
        partial void OnPROVMANEJARECURSOPUBLICOSChanged();
        partial void OnPROVRECONOCIMIENTOPUBLICOChanging(string value);
        partial void OnPROVRECONOCIMIENTOPUBLICOChanged();
        partial void OnPROVPODERPUBLICOChanging(string value);
        partial void OnPROVPODERPUBLICOChanged();
        partial void OnPROVOBSERVACIONChanging(string value);
        partial void OnPROVOBSERVACIONChanged();
        partial void OnCLASTIPOPERSONAL1Changing(decimal? value);
        partial void OnCLASTIPOPERSONAL1Changed();
        partial void OnPROVDIRECCIONSUCURSALChanging(string value);
        partial void OnPROVDIRECCIONSUCURSALChanged();
        partial void OnPROVCIUDADSUCURSALChanging(string value);
        partial void OnPROVCIUDADSUCURSALChanged();
        partial void OnPROVTELEFONOSUCURSALChanging(string value);
        partial void OnPROVTELEFONOSUCURSALChanged();
        partial void OnCLASTIPOEMPRESA13Changing(string value);
        partial void OnCLASTIPOEMPRESA13Changed();
        partial void OnCLASSECTORECONOMICO14Changing(string value);
        partial void OnCLASSECTORECONOMICO14Changed();
        partial void OnPROVREPRESENTANTELEGALChanging(string value);
        partial void OnPROVREPRESENTANTELEGALChanged();
        partial void OnCLASTIPOIDENTREPRES2Changing(string value);
        partial void OnCLASTIPOIDENTREPRES2Changed();
        partial void OnPROVIDENTREPRESENTANTEChanging(string value);
        partial void OnPROVIDENTREPRESENTANTEChanged();
        partial void OnPROVFECEXPIDENTREPRESENTANTEChanging(System.DateTime? value);
        partial void OnPROVFECEXPIDENTREPRESENTANTEChanged();
        partial void OnPROVLUGAREXPIDENTREPRESENTChanging(string value);
        partial void OnPROVLUGAREXPIDENTREPRESENTChanged();
        partial void OnPROVFECHANACIMIENTOREPChanging(System.DateTime? value);
        partial void OnPROVFECHANACIMIENTOREPChanged();
        partial void OnPROVLUGARNACIMIENTOREPChanging(string value);
        partial void OnPROVLUGARNACIMIENTOREPChanged();
        partial void OnPROVNACIONALIDADREPRESENTANTEChanging(string value);
        partial void OnPROVNACIONALIDADREPRESENTANTEChanged();
        partial void OnACECCODIGOACTIVIDADChanging(string value);
        partial void OnACECCODIGOACTIVIDADChanged();
        partial void OnACECNOMBREChanging(string value);
        partial void OnACECNOMBREChanged();
        partial void OnPROVINGRESOSMENSUALESChanging(decimal? value);
        partial void OnPROVINGRESOSMENSUALESChanged();
        partial void OnPROVEGRESOSMENSUALESChanging(decimal? value);
        partial void OnPROVEGRESOSMENSUALESChanged();
        partial void OnPROVACTIVOSChanging(decimal? value);
        partial void OnPROVACTIVOSChanged();
        partial void OnPROVPASIVOSChanging(decimal? value);
        partial void OnPROVPASIVOSChanged();
        partial void OnPROVPATRIMONIOChanging(decimal? value);
        partial void OnPROVPATRIMONIOChanged();
        partial void OnPROVOTROSINGRESOSChanging(decimal? value);
        partial void OnPROVOTROSINGRESOSChanged();
        partial void OnPROVCONCEPTOOTROSINGRESOSChanging(string value);
        partial void OnPROVCONCEPTOOTROSINGRESOSChanged();
        partial void OnPROVTRANSMONEDAEXTChanging(string value);
        partial void OnPROVTRANSMONEDAEXTChanged();
        partial void OnCLASTIPOMONEDA5Changing(string value);
        partial void OnCLASTIPOMONEDA5Changed();
        partial void OnPROVPRODFINANEXTChanging(string value);
        partial void OnPROVPRODFINANEXTChanged();
        partial void OnPROVENTIDADESTATALChanging(string value);
        partial void OnPROVENTIDADESTATALChanged();
        partial void OnPROVENTIDADSINANILUCROChanging(string value);
        partial void OnPROVENTIDADSINANILUCROChanged();
        partial void OnPROVRESOLENTSINANILUCROChanging(string value);
        partial void OnPROVRESOLENTSINANILUCROChanged();
        partial void OnPROVGRANCONTRIBUYENTEChanging(string value);
        partial void OnPROVGRANCONTRIBUYENTEChanged();
        partial void OnPROVRESOLGRANCONTRIBUYENTEChanging(string value);
        partial void OnPROVRESOLGRANCONTRIBUYENTEChanged();
        partial void OnPROVRESPONSABLEIVAChanging(string value);
        partial void OnPROVRESPONSABLEIVAChanged();
        partial void OnPROVAUTORRETENEDORChanging(string value);
        partial void OnPROVAUTORRETENEDORChanged();
        partial void OnPROVRESOLAUTORRETENEDORChanging(string value);
        partial void OnPROVRESOLAUTORRETENEDORChanged();
        partial void OnPROVCONTRIBUYENTERENTAChanging(string value);
        partial void OnPROVCONTRIBUYENTERENTAChanged();
        partial void OnPROVAGENTERETENEDORIVAChanging(string value);
        partial void OnPROVAGENTERETENEDORIVAChanged();
        partial void OnPROVRESOLAGENTERETENEDORIVAChanging(string value);
        partial void OnPROVRESOLAGENTERETENEDORIVAChanged();
        partial void OnPROVINDUSTRIAYCOMERCIOChanging(string value);
        partial void OnPROVINDUSTRIAYCOMERCIOChanged();
        partial void OnCLASENTIDADBANCARIA6Changing(string value);
        partial void OnCLASENTIDADBANCARIA6Changed();
        partial void OnPROVSUCURSALBANCOChanging(string value);
        partial void OnPROVSUCURSALBANCOChanged();
        partial void OnPROVNUMEROCUENTAChanging(string value);
        partial void OnPROVNUMEROCUENTAChanged();
        partial void OnCLASTIPOCUENTA7Changing(string value);
        partial void OnCLASTIPOCUENTA7Changed();
        partial void OnPROVTITULARCUENTAChanging(string value);
        partial void OnPROVTITULARCUENTAChanged();
        partial void OnPROVIDENTITULARCUENTAChanging(string value);
        partial void OnPROVIDENTITULARCUENTAChanged();
        partial void OnPROVCLASTAMANOChanging(string value);
        partial void OnPROVCLASTAMANOChanged();
        partial void OnPROVCLASSECTORChanging(string value);
        partial void OnPROVCLASSECTORChanged();
        partial void OnPROVOPERMERCANTILESChanging(string value);
        partial void OnPROVOPERMERCANTILESChanged();
        #endregion

        public FOBTENERPROVEEDORResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for PROVPROVEEDOR in the schema.
        /// </summary>
        [Column(Name = @"PROV_PROVEEDOR", Storage = "_PROVPROVEEDOR", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal PROVPROVEEDOR
        {
            get
            {
                return this._PROVPROVEEDOR;
            }
            set
            {
                if (this._PROVPROVEEDOR != value)
                {
                    this.OnPROVPROVEEDORChanging(value);
                    this.SendPropertyChanging("PROVPROVEEDOR");
                    this._PROVPROVEEDOR = value;
                    this.SendPropertyChanged("PROVPROVEEDOR");
                    this.OnPROVPROVEEDORChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVRAZONSOCIAL in the schema.
        /// </summary>
        [Column(Name = @"PROV_RAZONSOCIAL", Storage = "_PROVRAZONSOCIAL", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVRAZONSOCIAL
        {
            get
            {
                return this._PROVRAZONSOCIAL;
            }
            set
            {
                if (this._PROVRAZONSOCIAL != value)
                {
                    this.OnPROVRAZONSOCIALChanging(value);
                    this.SendPropertyChanging("PROVRAZONSOCIAL");
                    this._PROVRAZONSOCIAL = value;
                    this.SendPropertyChanged("PROVRAZONSOCIAL");
                    this.OnPROVRAZONSOCIALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVLUGARNACIMIENTO in the schema.
        /// </summary>
        [Column(Name = @"PROV_LUGARNACIMIENTO", Storage = "_PROVLUGARNACIMIENTO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVLUGARNACIMIENTO
        {
            get
            {
                return this._PROVLUGARNACIMIENTO;
            }
            set
            {
                if (this._PROVLUGARNACIMIENTO != value)
                {
                    this.OnPROVLUGARNACIMIENTOChanging(value);
                    this.SendPropertyChanging("PROVLUGARNACIMIENTO");
                    this._PROVLUGARNACIMIENTO = value;
                    this.SendPropertyChanged("PROVLUGARNACIMIENTO");
                    this.OnPROVLUGARNACIMIENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVDIRECCIONPRINCIAL in the schema.
        /// </summary>
        [Column(Name = @"PROV_DIRECCIONPRINCIAL", Storage = "_PROVDIRECCIONPRINCIAL", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVDIRECCIONPRINCIAL
        {
            get
            {
                return this._PROVDIRECCIONPRINCIAL;
            }
            set
            {
                if (this._PROVDIRECCIONPRINCIAL != value)
                {
                    this.OnPROVDIRECCIONPRINCIALChanging(value);
                    this.SendPropertyChanging("PROVDIRECCIONPRINCIAL");
                    this._PROVDIRECCIONPRINCIAL = value;
                    this.SendPropertyChanged("PROVDIRECCIONPRINCIAL");
                    this.OnPROVDIRECCIONPRINCIALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVCIUDAD in the schema.
        /// </summary>
        [Column(Name = @"PROV_CIUDAD", Storage = "_PROVCIUDAD", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVCIUDAD
        {
            get
            {
                return this._PROVCIUDAD;
            }
            set
            {
                if (this._PROVCIUDAD != value)
                {
                    this.OnPROVCIUDADChanging(value);
                    this.SendPropertyChanging("PROVCIUDAD");
                    this._PROVCIUDAD = value;
                    this.SendPropertyChanged("PROVCIUDAD");
                    this.OnPROVCIUDADChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVTELEFONO in the schema.
        /// </summary>
        [Column(Name = @"PROV_TELEFONO", Storage = "_PROVTELEFONO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public double? PROVTELEFONO
        {
            get
            {
                return this._PROVTELEFONO;
            }
            set
            {
                if (this._PROVTELEFONO != value)
                {
                    this.OnPROVTELEFONOChanging(value);
                    this.SendPropertyChanging("PROVTELEFONO");
                    this._PROVTELEFONO = value;
                    this.SendPropertyChanged("PROVTELEFONO");
                    this.OnPROVTELEFONOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVEMAIL in the schema.
        /// </summary>
        [Column(Name = @"PROV_EMAIL", Storage = "_PROVEMAIL", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVEMAIL
        {
            get
            {
                return this._PROVEMAIL;
            }
            set
            {
                if (this._PROVEMAIL != value)
                {
                    this.OnPROVEMAILChanging(value);
                    this.SendPropertyChanging("PROVEMAIL");
                    this._PROVEMAIL = value;
                    this.SendPropertyChanged("PROVEMAIL");
                    this.OnPROVEMAILChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVPROFESION in the schema.
        /// </summary>
        [Column(Name = @"PROV_PROFESION", Storage = "_PROVPROFESION", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVPROFESION
        {
            get
            {
                return this._PROVPROFESION;
            }
            set
            {
                if (this._PROVPROFESION != value)
                {
                    this.OnPROVPROFESIONChanging(value);
                    this.SendPropertyChanging("PROVPROFESION");
                    this._PROVPROFESION = value;
                    this.SendPropertyChanged("PROVPROFESION");
                    this.OnPROVPROFESIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVACTIVIDAD in the schema.
        /// </summary>
        [Column(Name = @"PROV_ACTIVIDAD", Storage = "_PROVACTIVIDAD", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVACTIVIDAD
        {
            get
            {
                return this._PROVACTIVIDAD;
            }
            set
            {
                if (this._PROVACTIVIDAD != value)
                {
                    this.OnPROVACTIVIDADChanging(value);
                    this.SendPropertyChanging("PROVACTIVIDAD");
                    this._PROVACTIVIDAD = value;
                    this.SendPropertyChanged("PROVACTIVIDAD");
                    this.OnPROVACTIVIDADChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVEMPRESATRABAJA in the schema.
        /// </summary>
        [Column(Name = @"PROV_EMPRESATRABAJA", Storage = "_PROVEMPRESATRABAJA", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVEMPRESATRABAJA
        {
            get
            {
                return this._PROVEMPRESATRABAJA;
            }
            set
            {
                if (this._PROVEMPRESATRABAJA != value)
                {
                    this.OnPROVEMPRESATRABAJAChanging(value);
                    this.SendPropertyChanging("PROVEMPRESATRABAJA");
                    this._PROVEMPRESATRABAJA = value;
                    this.SendPropertyChanged("PROVEMPRESATRABAJA");
                    this.OnPROVEMPRESATRABAJAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVCARGO in the schema.
        /// </summary>
        [Column(Name = @"PROV_CARGO", Storage = "_PROVCARGO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVCARGO
        {
            get
            {
                return this._PROVCARGO;
            }
            set
            {
                if (this._PROVCARGO != value)
                {
                    this.OnPROVCARGOChanging(value);
                    this.SendPropertyChanging("PROVCARGO");
                    this._PROVCARGO = value;
                    this.SendPropertyChanged("PROVCARGO");
                    this.OnPROVCARGOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVTELEFONOEMPRESA in the schema.
        /// </summary>
        [Column(Name = @"PROV_TELEFONOEMPRESA", Storage = "_PROVTELEFONOEMPRESA", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVTELEFONOEMPRESA
        {
            get
            {
                return this._PROVTELEFONOEMPRESA;
            }
            set
            {
                if (this._PROVTELEFONOEMPRESA != value)
                {
                    this.OnPROVTELEFONOEMPRESAChanging(value);
                    this.SendPropertyChanging("PROVTELEFONOEMPRESA");
                    this._PROVTELEFONOEMPRESA = value;
                    this.SendPropertyChanged("PROVTELEFONOEMPRESA");
                    this.OnPROVTELEFONOEMPRESAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVDIRECCIONCOMERCIAL in the schema.
        /// </summary>
        [Column(Name = @"PROV_DIRECCIONCOMERCIAL", Storage = "_PROVDIRECCIONCOMERCIAL", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVDIRECCIONCOMERCIAL
        {
            get
            {
                return this._PROVDIRECCIONCOMERCIAL;
            }
            set
            {
                if (this._PROVDIRECCIONCOMERCIAL != value)
                {
                    this.OnPROVDIRECCIONCOMERCIALChanging(value);
                    this.SendPropertyChanging("PROVDIRECCIONCOMERCIAL");
                    this._PROVDIRECCIONCOMERCIAL = value;
                    this.SendPropertyChanged("PROVDIRECCIONCOMERCIAL");
                    this.OnPROVDIRECCIONCOMERCIALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVCIUDADEMPRESA in the schema.
        /// </summary>
        [Column(Name = @"PROV_CIUDADEMPRESA", Storage = "_PROVCIUDADEMPRESA", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVCIUDADEMPRESA
        {
            get
            {
                return this._PROVCIUDADEMPRESA;
            }
            set
            {
                if (this._PROVCIUDADEMPRESA != value)
                {
                    this.OnPROVCIUDADEMPRESAChanging(value);
                    this.SendPropertyChanging("PROVCIUDADEMPRESA");
                    this._PROVCIUDADEMPRESA = value;
                    this.SendPropertyChanged("PROVCIUDADEMPRESA");
                    this.OnPROVCIUDADEMPRESAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVFAX in the schema.
        /// </summary>
        [Column(Name = @"PROV_FAX", Storage = "_PROVFAX", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVFAX
        {
            get
            {
                return this._PROVFAX;
            }
            set
            {
                if (this._PROVFAX != value)
                {
                    this.OnPROVFAXChanging(value);
                    this.SendPropertyChanging("PROVFAX");
                    this._PROVFAX = value;
                    this.SendPropertyChanged("PROVFAX");
                    this.OnPROVFAXChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLASTIPOIDENTIFICACION2 in the schema.
        /// </summary>
        [Column(Name = @"CLAS_TIPOIDENTIFICACION2", Storage = "_CLASTIPOIDENTIFICACION2", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? CLASTIPOIDENTIFICACION2
        {
            get
            {
                return this._CLASTIPOIDENTIFICACION2;
            }
            set
            {
                if (this._CLASTIPOIDENTIFICACION2 != value)
                {
                    this.OnCLASTIPOIDENTIFICACION2Changing(value);
                    this.SendPropertyChanging("CLASTIPOIDENTIFICACION2");
                    this._CLASTIPOIDENTIFICACION2 = value;
                    this.SendPropertyChanged("CLASTIPOIDENTIFICACION2");
                    this.OnCLASTIPOIDENTIFICACION2Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVIDENTIFICACION in the schema.
        /// </summary>
        [Column(Name = @"PROV_IDENTIFICACION", Storage = "_PROVIDENTIFICACION", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVIDENTIFICACION
        {
            get
            {
                return this._PROVIDENTIFICACION;
            }
            set
            {
                if (this._PROVIDENTIFICACION != value)
                {
                    this.OnPROVIDENTIFICACIONChanging(value);
                    this.SendPropertyChanging("PROVIDENTIFICACION");
                    this._PROVIDENTIFICACION = value;
                    this.SendPropertyChanged("PROVIDENTIFICACION");
                    this.OnPROVIDENTIFICACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVFECHANACIMIENTO in the schema.
        /// </summary>
        [Column(Name = @"PROV_FECHANACIMIENTO", Storage = "_PROVFECHANACIMIENTO", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? PROVFECHANACIMIENTO
        {
            get
            {
                return this._PROVFECHANACIMIENTO;
            }
            set
            {
                if (this._PROVFECHANACIMIENTO != value)
                {
                    this.OnPROVFECHANACIMIENTOChanging(value);
                    this.SendPropertyChanging("PROVFECHANACIMIENTO");
                    this._PROVFECHANACIMIENTO = value;
                    this.SendPropertyChanged("PROVFECHANACIMIENTO");
                    this.OnPROVFECHANACIMIENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVMANEJARECURSOPUBLICOS in the schema.
        /// </summary>
        [Column(Name = @"PROV_MANEJARECURSOPUBLICOS", Storage = "_PROVMANEJARECURSOPUBLICOS", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVMANEJARECURSOPUBLICOS
        {
            get
            {
                return this._PROVMANEJARECURSOPUBLICOS;
            }
            set
            {
                if (this._PROVMANEJARECURSOPUBLICOS != value)
                {
                    this.OnPROVMANEJARECURSOPUBLICOSChanging(value);
                    this.SendPropertyChanging("PROVMANEJARECURSOPUBLICOS");
                    this._PROVMANEJARECURSOPUBLICOS = value;
                    this.SendPropertyChanged("PROVMANEJARECURSOPUBLICOS");
                    this.OnPROVMANEJARECURSOPUBLICOSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVRECONOCIMIENTOPUBLICO in the schema.
        /// </summary>
        [Column(Name = @"PROV_RECONOCIMIENTOPUBLICO", Storage = "_PROVRECONOCIMIENTOPUBLICO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVRECONOCIMIENTOPUBLICO
        {
            get
            {
                return this._PROVRECONOCIMIENTOPUBLICO;
            }
            set
            {
                if (this._PROVRECONOCIMIENTOPUBLICO != value)
                {
                    this.OnPROVRECONOCIMIENTOPUBLICOChanging(value);
                    this.SendPropertyChanging("PROVRECONOCIMIENTOPUBLICO");
                    this._PROVRECONOCIMIENTOPUBLICO = value;
                    this.SendPropertyChanged("PROVRECONOCIMIENTOPUBLICO");
                    this.OnPROVRECONOCIMIENTOPUBLICOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVPODERPUBLICO in the schema.
        /// </summary>
        [Column(Name = @"PROV_PODERPUBLICO", Storage = "_PROVPODERPUBLICO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVPODERPUBLICO
        {
            get
            {
                return this._PROVPODERPUBLICO;
            }
            set
            {
                if (this._PROVPODERPUBLICO != value)
                {
                    this.OnPROVPODERPUBLICOChanging(value);
                    this.SendPropertyChanging("PROVPODERPUBLICO");
                    this._PROVPODERPUBLICO = value;
                    this.SendPropertyChanged("PROVPODERPUBLICO");
                    this.OnPROVPODERPUBLICOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVOBSERVACION in the schema.
        /// </summary>
        [Column(Name = @"PROV_OBSERVACION", Storage = "_PROVOBSERVACION", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVOBSERVACION
        {
            get
            {
                return this._PROVOBSERVACION;
            }
            set
            {
                if (this._PROVOBSERVACION != value)
                {
                    this.OnPROVOBSERVACIONChanging(value);
                    this.SendPropertyChanging("PROVOBSERVACION");
                    this._PROVOBSERVACION = value;
                    this.SendPropertyChanged("PROVOBSERVACION");
                    this.OnPROVOBSERVACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLASTIPOPERSONAL1 in the schema.
        /// </summary>
        [Column(Name = @"CLAS_TIPOPERSONAL1", Storage = "_CLASTIPOPERSONAL1", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? CLASTIPOPERSONAL1
        {
            get
            {
                return this._CLASTIPOPERSONAL1;
            }
            set
            {
                if (this._CLASTIPOPERSONAL1 != value)
                {
                    this.OnCLASTIPOPERSONAL1Changing(value);
                    this.SendPropertyChanging("CLASTIPOPERSONAL1");
                    this._CLASTIPOPERSONAL1 = value;
                    this.SendPropertyChanged("CLASTIPOPERSONAL1");
                    this.OnCLASTIPOPERSONAL1Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVDIRECCIONSUCURSAL in the schema.
        /// </summary>
        [Column(Name = @"PROV_DIRECCIONSUCURSAL", Storage = "_PROVDIRECCIONSUCURSAL", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVDIRECCIONSUCURSAL
        {
            get
            {
                return this._PROVDIRECCIONSUCURSAL;
            }
            set
            {
                if (this._PROVDIRECCIONSUCURSAL != value)
                {
                    this.OnPROVDIRECCIONSUCURSALChanging(value);
                    this.SendPropertyChanging("PROVDIRECCIONSUCURSAL");
                    this._PROVDIRECCIONSUCURSAL = value;
                    this.SendPropertyChanged("PROVDIRECCIONSUCURSAL");
                    this.OnPROVDIRECCIONSUCURSALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVCIUDADSUCURSAL in the schema.
        /// </summary>
        [Column(Name = @"PROV_CIUDADSUCURSAL", Storage = "_PROVCIUDADSUCURSAL", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVCIUDADSUCURSAL
        {
            get
            {
                return this._PROVCIUDADSUCURSAL;
            }
            set
            {
                if (this._PROVCIUDADSUCURSAL != value)
                {
                    this.OnPROVCIUDADSUCURSALChanging(value);
                    this.SendPropertyChanging("PROVCIUDADSUCURSAL");
                    this._PROVCIUDADSUCURSAL = value;
                    this.SendPropertyChanged("PROVCIUDADSUCURSAL");
                    this.OnPROVCIUDADSUCURSALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVTELEFONOSUCURSAL in the schema.
        /// </summary>
        [Column(Name = @"PROV_TELEFONOSUCURSAL", Storage = "_PROVTELEFONOSUCURSAL", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVTELEFONOSUCURSAL
        {
            get
            {
                return this._PROVTELEFONOSUCURSAL;
            }
            set
            {
                if (this._PROVTELEFONOSUCURSAL != value)
                {
                    this.OnPROVTELEFONOSUCURSALChanging(value);
                    this.SendPropertyChanging("PROVTELEFONOSUCURSAL");
                    this._PROVTELEFONOSUCURSAL = value;
                    this.SendPropertyChanged("PROVTELEFONOSUCURSAL");
                    this.OnPROVTELEFONOSUCURSALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLASTIPOEMPRESA13 in the schema.
        /// </summary>
        [Column(Name = @"CLAS_TIPOEMPRESA13", Storage = "_CLASTIPOEMPRESA13", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLASTIPOEMPRESA13
        {
            get
            {
                return this._CLASTIPOEMPRESA13;
            }
            set
            {
                if (this._CLASTIPOEMPRESA13 != value)
                {
                    this.OnCLASTIPOEMPRESA13Changing(value);
                    this.SendPropertyChanging("CLASTIPOEMPRESA13");
                    this._CLASTIPOEMPRESA13 = value;
                    this.SendPropertyChanged("CLASTIPOEMPRESA13");
                    this.OnCLASTIPOEMPRESA13Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLASSECTORECONOMICO14 in the schema.
        /// </summary>
        [Column(Name = @"CLAS_SECTORECONOMICO14", Storage = "_CLASSECTORECONOMICO14", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLASSECTORECONOMICO14
        {
            get
            {
                return this._CLASSECTORECONOMICO14;
            }
            set
            {
                if (this._CLASSECTORECONOMICO14 != value)
                {
                    this.OnCLASSECTORECONOMICO14Changing(value);
                    this.SendPropertyChanging("CLASSECTORECONOMICO14");
                    this._CLASSECTORECONOMICO14 = value;
                    this.SendPropertyChanged("CLASSECTORECONOMICO14");
                    this.OnCLASSECTORECONOMICO14Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVREPRESENTANTELEGAL in the schema.
        /// </summary>
        [Column(Name = @"PROV_REPRESENTANTELEGAL", Storage = "_PROVREPRESENTANTELEGAL", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVREPRESENTANTELEGAL
        {
            get
            {
                return this._PROVREPRESENTANTELEGAL;
            }
            set
            {
                if (this._PROVREPRESENTANTELEGAL != value)
                {
                    this.OnPROVREPRESENTANTELEGALChanging(value);
                    this.SendPropertyChanging("PROVREPRESENTANTELEGAL");
                    this._PROVREPRESENTANTELEGAL = value;
                    this.SendPropertyChanged("PROVREPRESENTANTELEGAL");
                    this.OnPROVREPRESENTANTELEGALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLASTIPOIDENTREPRES2 in the schema.
        /// </summary>
        [Column(Name = @"CLAS_TIPOIDENTREPRES2", Storage = "_CLASTIPOIDENTREPRES2", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLASTIPOIDENTREPRES2
        {
            get
            {
                return this._CLASTIPOIDENTREPRES2;
            }
            set
            {
                if (this._CLASTIPOIDENTREPRES2 != value)
                {
                    this.OnCLASTIPOIDENTREPRES2Changing(value);
                    this.SendPropertyChanging("CLASTIPOIDENTREPRES2");
                    this._CLASTIPOIDENTREPRES2 = value;
                    this.SendPropertyChanged("CLASTIPOIDENTREPRES2");
                    this.OnCLASTIPOIDENTREPRES2Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVIDENTREPRESENTANTE in the schema.
        /// </summary>
        [Column(Name = @"PROV_IDENTREPRESENTANTE", Storage = "_PROVIDENTREPRESENTANTE", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVIDENTREPRESENTANTE
        {
            get
            {
                return this._PROVIDENTREPRESENTANTE;
            }
            set
            {
                if (this._PROVIDENTREPRESENTANTE != value)
                {
                    this.OnPROVIDENTREPRESENTANTEChanging(value);
                    this.SendPropertyChanging("PROVIDENTREPRESENTANTE");
                    this._PROVIDENTREPRESENTANTE = value;
                    this.SendPropertyChanged("PROVIDENTREPRESENTANTE");
                    this.OnPROVIDENTREPRESENTANTEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVFECEXPIDENTREPRESENTANTE in the schema.
        /// </summary>
        [Column(Name = @"PROV_FECEXPIDENTREPRESENTANTE", Storage = "_PROVFECEXPIDENTREPRESENTANTE", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? PROVFECEXPIDENTREPRESENTANTE
        {
            get
            {
                return this._PROVFECEXPIDENTREPRESENTANTE;
            }
            set
            {
                if (this._PROVFECEXPIDENTREPRESENTANTE != value)
                {
                    this.OnPROVFECEXPIDENTREPRESENTANTEChanging(value);
                    this.SendPropertyChanging("PROVFECEXPIDENTREPRESENTANTE");
                    this._PROVFECEXPIDENTREPRESENTANTE = value;
                    this.SendPropertyChanged("PROVFECEXPIDENTREPRESENTANTE");
                    this.OnPROVFECEXPIDENTREPRESENTANTEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVLUGAREXPIDENTREPRESENT in the schema.
        /// </summary>
        [Column(Name = @"PROV_LUGAREXPIDENTREPRESENT", Storage = "_PROVLUGAREXPIDENTREPRESENT", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVLUGAREXPIDENTREPRESENT
        {
            get
            {
                return this._PROVLUGAREXPIDENTREPRESENT;
            }
            set
            {
                if (this._PROVLUGAREXPIDENTREPRESENT != value)
                {
                    this.OnPROVLUGAREXPIDENTREPRESENTChanging(value);
                    this.SendPropertyChanging("PROVLUGAREXPIDENTREPRESENT");
                    this._PROVLUGAREXPIDENTREPRESENT = value;
                    this.SendPropertyChanged("PROVLUGAREXPIDENTREPRESENT");
                    this.OnPROVLUGAREXPIDENTREPRESENTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVFECHANACIMIENTOREP in the schema.
        /// </summary>
        [Column(Name = @"PROV_FECHANACIMIENTOREP", Storage = "_PROVFECHANACIMIENTOREP", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? PROVFECHANACIMIENTOREP
        {
            get
            {
                return this._PROVFECHANACIMIENTOREP;
            }
            set
            {
                if (this._PROVFECHANACIMIENTOREP != value)
                {
                    this.OnPROVFECHANACIMIENTOREPChanging(value);
                    this.SendPropertyChanging("PROVFECHANACIMIENTOREP");
                    this._PROVFECHANACIMIENTOREP = value;
                    this.SendPropertyChanged("PROVFECHANACIMIENTOREP");
                    this.OnPROVFECHANACIMIENTOREPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVLUGARNACIMIENTOREP in the schema.
        /// </summary>
        [Column(Name = @"PROV_LUGARNACIMIENTOREP", Storage = "_PROVLUGARNACIMIENTOREP", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVLUGARNACIMIENTOREP
        {
            get
            {
                return this._PROVLUGARNACIMIENTOREP;
            }
            set
            {
                if (this._PROVLUGARNACIMIENTOREP != value)
                {
                    this.OnPROVLUGARNACIMIENTOREPChanging(value);
                    this.SendPropertyChanging("PROVLUGARNACIMIENTOREP");
                    this._PROVLUGARNACIMIENTOREP = value;
                    this.SendPropertyChanged("PROVLUGARNACIMIENTOREP");
                    this.OnPROVLUGARNACIMIENTOREPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVNACIONALIDADREPRESENTANTE in the schema.
        /// </summary>
        [Column(Name = @"PROV_NACIONALIDADREPRESENTANTE", Storage = "_PROVNACIONALIDADREPRESENTANTE", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVNACIONALIDADREPRESENTANTE
        {
            get
            {
                return this._PROVNACIONALIDADREPRESENTANTE;
            }
            set
            {
                if (this._PROVNACIONALIDADREPRESENTANTE != value)
                {
                    this.OnPROVNACIONALIDADREPRESENTANTEChanging(value);
                    this.SendPropertyChanging("PROVNACIONALIDADREPRESENTANTE");
                    this._PROVNACIONALIDADREPRESENTANTE = value;
                    this.SendPropertyChanged("PROVNACIONALIDADREPRESENTANTE");
                    this.OnPROVNACIONALIDADREPRESENTANTEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ACECCODIGOACTIVIDAD in the schema.
        /// </summary>
        [Column(Name = @"ACEC_CODIGOACTIVIDAD", Storage = "_ACECCODIGOACTIVIDAD", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ACECCODIGOACTIVIDAD
        {
            get
            {
                return this._ACECCODIGOACTIVIDAD;
            }
            set
            {
                if (this._ACECCODIGOACTIVIDAD != value)
                {
                    this.OnACECCODIGOACTIVIDADChanging(value);
                    this.SendPropertyChanging("ACECCODIGOACTIVIDAD");
                    this._ACECCODIGOACTIVIDAD = value;
                    this.SendPropertyChanged("ACECCODIGOACTIVIDAD");
                    this.OnACECCODIGOACTIVIDADChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ACECNOMBRE in the schema.
        /// </summary>
        [Column(Name = @"ACEC_NOMBRE", Storage = "_ACECNOMBRE", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ACECNOMBRE
        {
            get
            {
                return this._ACECNOMBRE;
            }
            set
            {
                if (this._ACECNOMBRE != value)
                {
                    this.OnACECNOMBREChanging(value);
                    this.SendPropertyChanging("ACECNOMBRE");
                    this._ACECNOMBRE = value;
                    this.SendPropertyChanged("ACECNOMBRE");
                    this.OnACECNOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVINGRESOSMENSUALES in the schema.
        /// </summary>
        [Column(Name = @"PROV_INGRESOSMENSUALES", Storage = "_PROVINGRESOSMENSUALES", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVINGRESOSMENSUALES
        {
            get
            {
                return this._PROVINGRESOSMENSUALES;
            }
            set
            {
                if (this._PROVINGRESOSMENSUALES != value)
                {
                    this.OnPROVINGRESOSMENSUALESChanging(value);
                    this.SendPropertyChanging("PROVINGRESOSMENSUALES");
                    this._PROVINGRESOSMENSUALES = value;
                    this.SendPropertyChanged("PROVINGRESOSMENSUALES");
                    this.OnPROVINGRESOSMENSUALESChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVEGRESOSMENSUALES in the schema.
        /// </summary>
        [Column(Name = @"PROV_EGRESOSMENSUALES", Storage = "_PROVEGRESOSMENSUALES", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVEGRESOSMENSUALES
        {
            get
            {
                return this._PROVEGRESOSMENSUALES;
            }
            set
            {
                if (this._PROVEGRESOSMENSUALES != value)
                {
                    this.OnPROVEGRESOSMENSUALESChanging(value);
                    this.SendPropertyChanging("PROVEGRESOSMENSUALES");
                    this._PROVEGRESOSMENSUALES = value;
                    this.SendPropertyChanged("PROVEGRESOSMENSUALES");
                    this.OnPROVEGRESOSMENSUALESChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVACTIVOS in the schema.
        /// </summary>
        [Column(Name = @"PROV_ACTIVOS", Storage = "_PROVACTIVOS", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVACTIVOS
        {
            get
            {
                return this._PROVACTIVOS;
            }
            set
            {
                if (this._PROVACTIVOS != value)
                {
                    this.OnPROVACTIVOSChanging(value);
                    this.SendPropertyChanging("PROVACTIVOS");
                    this._PROVACTIVOS = value;
                    this.SendPropertyChanged("PROVACTIVOS");
                    this.OnPROVACTIVOSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVPASIVOS in the schema.
        /// </summary>
        [Column(Name = @"PROV_PASIVOS", Storage = "_PROVPASIVOS", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVPASIVOS
        {
            get
            {
                return this._PROVPASIVOS;
            }
            set
            {
                if (this._PROVPASIVOS != value)
                {
                    this.OnPROVPASIVOSChanging(value);
                    this.SendPropertyChanging("PROVPASIVOS");
                    this._PROVPASIVOS = value;
                    this.SendPropertyChanged("PROVPASIVOS");
                    this.OnPROVPASIVOSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVPATRIMONIO in the schema.
        /// </summary>
        [Column(Name = @"PROV_PATRIMONIO", Storage = "_PROVPATRIMONIO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVPATRIMONIO
        {
            get
            {
                return this._PROVPATRIMONIO;
            }
            set
            {
                if (this._PROVPATRIMONIO != value)
                {
                    this.OnPROVPATRIMONIOChanging(value);
                    this.SendPropertyChanging("PROVPATRIMONIO");
                    this._PROVPATRIMONIO = value;
                    this.SendPropertyChanged("PROVPATRIMONIO");
                    this.OnPROVPATRIMONIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVOTROSINGRESOS in the schema.
        /// </summary>
        [Column(Name = @"PROV_OTROSINGRESOS", Storage = "_PROVOTROSINGRESOS", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal? PROVOTROSINGRESOS
        {
            get
            {
                return this._PROVOTROSINGRESOS;
            }
            set
            {
                if (this._PROVOTROSINGRESOS != value)
                {
                    this.OnPROVOTROSINGRESOSChanging(value);
                    this.SendPropertyChanging("PROVOTROSINGRESOS");
                    this._PROVOTROSINGRESOS = value;
                    this.SendPropertyChanged("PROVOTROSINGRESOS");
                    this.OnPROVOTROSINGRESOSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVCONCEPTOOTROSINGRESOS in the schema.
        /// </summary>
        [Column(Name = @"PROV_CONCEPTOOTROSINGRESOS", Storage = "_PROVCONCEPTOOTROSINGRESOS", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVCONCEPTOOTROSINGRESOS
        {
            get
            {
                return this._PROVCONCEPTOOTROSINGRESOS;
            }
            set
            {
                if (this._PROVCONCEPTOOTROSINGRESOS != value)
                {
                    this.OnPROVCONCEPTOOTROSINGRESOSChanging(value);
                    this.SendPropertyChanging("PROVCONCEPTOOTROSINGRESOS");
                    this._PROVCONCEPTOOTROSINGRESOS = value;
                    this.SendPropertyChanged("PROVCONCEPTOOTROSINGRESOS");
                    this.OnPROVCONCEPTOOTROSINGRESOSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVTRANSMONEDAEXT in the schema.
        /// </summary>
        [Column(Name = @"PROV_TRANSMONEDAEXT", Storage = "_PROVTRANSMONEDAEXT", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVTRANSMONEDAEXT
        {
            get
            {
                return this._PROVTRANSMONEDAEXT;
            }
            set
            {
                if (this._PROVTRANSMONEDAEXT != value)
                {
                    this.OnPROVTRANSMONEDAEXTChanging(value);
                    this.SendPropertyChanging("PROVTRANSMONEDAEXT");
                    this._PROVTRANSMONEDAEXT = value;
                    this.SendPropertyChanged("PROVTRANSMONEDAEXT");
                    this.OnPROVTRANSMONEDAEXTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLASTIPOMONEDA5 in the schema.
        /// </summary>
        [Column(Name = @"CLAS_TIPOMONEDA5", Storage = "_CLASTIPOMONEDA5", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLASTIPOMONEDA5
        {
            get
            {
                return this._CLASTIPOMONEDA5;
            }
            set
            {
                if (this._CLASTIPOMONEDA5 != value)
                {
                    this.OnCLASTIPOMONEDA5Changing(value);
                    this.SendPropertyChanging("CLASTIPOMONEDA5");
                    this._CLASTIPOMONEDA5 = value;
                    this.SendPropertyChanged("CLASTIPOMONEDA5");
                    this.OnCLASTIPOMONEDA5Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVPRODFINANEXT in the schema.
        /// </summary>
        [Column(Name = @"PROV_PRODFINANEXT", Storage = "_PROVPRODFINANEXT", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVPRODFINANEXT
        {
            get
            {
                return this._PROVPRODFINANEXT;
            }
            set
            {
                if (this._PROVPRODFINANEXT != value)
                {
                    this.OnPROVPRODFINANEXTChanging(value);
                    this.SendPropertyChanging("PROVPRODFINANEXT");
                    this._PROVPRODFINANEXT = value;
                    this.SendPropertyChanged("PROVPRODFINANEXT");
                    this.OnPROVPRODFINANEXTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVENTIDADESTATAL in the schema.
        /// </summary>
        [Column(Name = @"PROV_ENTIDADESTATAL", Storage = "_PROVENTIDADESTATAL", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVENTIDADESTATAL
        {
            get
            {
                return this._PROVENTIDADESTATAL;
            }
            set
            {
                if (this._PROVENTIDADESTATAL != value)
                {
                    this.OnPROVENTIDADESTATALChanging(value);
                    this.SendPropertyChanging("PROVENTIDADESTATAL");
                    this._PROVENTIDADESTATAL = value;
                    this.SendPropertyChanged("PROVENTIDADESTATAL");
                    this.OnPROVENTIDADESTATALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVENTIDADSINANILUCRO in the schema.
        /// </summary>
        [Column(Name = @"PROV_ENTIDADSINANILUCRO", Storage = "_PROVENTIDADSINANILUCRO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVENTIDADSINANILUCRO
        {
            get
            {
                return this._PROVENTIDADSINANILUCRO;
            }
            set
            {
                if (this._PROVENTIDADSINANILUCRO != value)
                {
                    this.OnPROVENTIDADSINANILUCROChanging(value);
                    this.SendPropertyChanging("PROVENTIDADSINANILUCRO");
                    this._PROVENTIDADSINANILUCRO = value;
                    this.SendPropertyChanged("PROVENTIDADSINANILUCRO");
                    this.OnPROVENTIDADSINANILUCROChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVRESOLENTSINANILUCRO in the schema.
        /// </summary>
        [Column(Name = @"PROV_RESOLENTSINANILUCRO", Storage = "_PROVRESOLENTSINANILUCRO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVRESOLENTSINANILUCRO
        {
            get
            {
                return this._PROVRESOLENTSINANILUCRO;
            }
            set
            {
                if (this._PROVRESOLENTSINANILUCRO != value)
                {
                    this.OnPROVRESOLENTSINANILUCROChanging(value);
                    this.SendPropertyChanging("PROVRESOLENTSINANILUCRO");
                    this._PROVRESOLENTSINANILUCRO = value;
                    this.SendPropertyChanged("PROVRESOLENTSINANILUCRO");
                    this.OnPROVRESOLENTSINANILUCROChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVGRANCONTRIBUYENTE in the schema.
        /// </summary>
        [Column(Name = @"PROV_GRANCONTRIBUYENTE", Storage = "_PROVGRANCONTRIBUYENTE", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVGRANCONTRIBUYENTE
        {
            get
            {
                return this._PROVGRANCONTRIBUYENTE;
            }
            set
            {
                if (this._PROVGRANCONTRIBUYENTE != value)
                {
                    this.OnPROVGRANCONTRIBUYENTEChanging(value);
                    this.SendPropertyChanging("PROVGRANCONTRIBUYENTE");
                    this._PROVGRANCONTRIBUYENTE = value;
                    this.SendPropertyChanged("PROVGRANCONTRIBUYENTE");
                    this.OnPROVGRANCONTRIBUYENTEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVRESOLGRANCONTRIBUYENTE in the schema.
        /// </summary>
        [Column(Name = @"PROV_RESOLGRANCONTRIBUYENTE", Storage = "_PROVRESOLGRANCONTRIBUYENTE", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVRESOLGRANCONTRIBUYENTE
        {
            get
            {
                return this._PROVRESOLGRANCONTRIBUYENTE;
            }
            set
            {
                if (this._PROVRESOLGRANCONTRIBUYENTE != value)
                {
                    this.OnPROVRESOLGRANCONTRIBUYENTEChanging(value);
                    this.SendPropertyChanging("PROVRESOLGRANCONTRIBUYENTE");
                    this._PROVRESOLGRANCONTRIBUYENTE = value;
                    this.SendPropertyChanged("PROVRESOLGRANCONTRIBUYENTE");
                    this.OnPROVRESOLGRANCONTRIBUYENTEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVRESPONSABLEIVA in the schema.
        /// </summary>
        [Column(Name = @"PROV_RESPONSABLEIVA", Storage = "_PROVRESPONSABLEIVA", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVRESPONSABLEIVA
        {
            get
            {
                return this._PROVRESPONSABLEIVA;
            }
            set
            {
                if (this._PROVRESPONSABLEIVA != value)
                {
                    this.OnPROVRESPONSABLEIVAChanging(value);
                    this.SendPropertyChanging("PROVRESPONSABLEIVA");
                    this._PROVRESPONSABLEIVA = value;
                    this.SendPropertyChanged("PROVRESPONSABLEIVA");
                    this.OnPROVRESPONSABLEIVAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVAUTORRETENEDOR in the schema.
        /// </summary>
        [Column(Name = @"PROV_AUTORRETENEDOR", Storage = "_PROVAUTORRETENEDOR", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVAUTORRETENEDOR
        {
            get
            {
                return this._PROVAUTORRETENEDOR;
            }
            set
            {
                if (this._PROVAUTORRETENEDOR != value)
                {
                    this.OnPROVAUTORRETENEDORChanging(value);
                    this.SendPropertyChanging("PROVAUTORRETENEDOR");
                    this._PROVAUTORRETENEDOR = value;
                    this.SendPropertyChanged("PROVAUTORRETENEDOR");
                    this.OnPROVAUTORRETENEDORChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVRESOLAUTORRETENEDOR in the schema.
        /// </summary>
        [Column(Name = @"PROV_RESOLAUTORRETENEDOR", Storage = "_PROVRESOLAUTORRETENEDOR", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVRESOLAUTORRETENEDOR
        {
            get
            {
                return this._PROVRESOLAUTORRETENEDOR;
            }
            set
            {
                if (this._PROVRESOLAUTORRETENEDOR != value)
                {
                    this.OnPROVRESOLAUTORRETENEDORChanging(value);
                    this.SendPropertyChanging("PROVRESOLAUTORRETENEDOR");
                    this._PROVRESOLAUTORRETENEDOR = value;
                    this.SendPropertyChanged("PROVRESOLAUTORRETENEDOR");
                    this.OnPROVRESOLAUTORRETENEDORChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVCONTRIBUYENTERENTA in the schema.
        /// </summary>
        [Column(Name = @"PROV_CONTRIBUYENTERENTA", Storage = "_PROVCONTRIBUYENTERENTA", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVCONTRIBUYENTERENTA
        {
            get
            {
                return this._PROVCONTRIBUYENTERENTA;
            }
            set
            {
                if (this._PROVCONTRIBUYENTERENTA != value)
                {
                    this.OnPROVCONTRIBUYENTERENTAChanging(value);
                    this.SendPropertyChanging("PROVCONTRIBUYENTERENTA");
                    this._PROVCONTRIBUYENTERENTA = value;
                    this.SendPropertyChanged("PROVCONTRIBUYENTERENTA");
                    this.OnPROVCONTRIBUYENTERENTAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVAGENTERETENEDORIVA in the schema.
        /// </summary>
        [Column(Name = @"PROV_AGENTERETENEDORIVA", Storage = "_PROVAGENTERETENEDORIVA", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVAGENTERETENEDORIVA
        {
            get
            {
                return this._PROVAGENTERETENEDORIVA;
            }
            set
            {
                if (this._PROVAGENTERETENEDORIVA != value)
                {
                    this.OnPROVAGENTERETENEDORIVAChanging(value);
                    this.SendPropertyChanging("PROVAGENTERETENEDORIVA");
                    this._PROVAGENTERETENEDORIVA = value;
                    this.SendPropertyChanged("PROVAGENTERETENEDORIVA");
                    this.OnPROVAGENTERETENEDORIVAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVRESOLAGENTERETENEDORIVA in the schema.
        /// </summary>
        [Column(Name = @"PROV_RESOLAGENTERETENEDORIVA", Storage = "_PROVRESOLAGENTERETENEDORIVA", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVRESOLAGENTERETENEDORIVA
        {
            get
            {
                return this._PROVRESOLAGENTERETENEDORIVA;
            }
            set
            {
                if (this._PROVRESOLAGENTERETENEDORIVA != value)
                {
                    this.OnPROVRESOLAGENTERETENEDORIVAChanging(value);
                    this.SendPropertyChanging("PROVRESOLAGENTERETENEDORIVA");
                    this._PROVRESOLAGENTERETENEDORIVA = value;
                    this.SendPropertyChanged("PROVRESOLAGENTERETENEDORIVA");
                    this.OnPROVRESOLAGENTERETENEDORIVAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVINDUSTRIAYCOMERCIO in the schema.
        /// </summary>
        [Column(Name = @"PROV_INDUSTRIAYCOMERCIO", Storage = "_PROVINDUSTRIAYCOMERCIO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVINDUSTRIAYCOMERCIO
        {
            get
            {
                return this._PROVINDUSTRIAYCOMERCIO;
            }
            set
            {
                if (this._PROVINDUSTRIAYCOMERCIO != value)
                {
                    this.OnPROVINDUSTRIAYCOMERCIOChanging(value);
                    this.SendPropertyChanging("PROVINDUSTRIAYCOMERCIO");
                    this._PROVINDUSTRIAYCOMERCIO = value;
                    this.SendPropertyChanged("PROVINDUSTRIAYCOMERCIO");
                    this.OnPROVINDUSTRIAYCOMERCIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLASENTIDADBANCARIA6 in the schema.
        /// </summary>
        [Column(Name = @"CLAS_ENTIDADBANCARIA6", Storage = "_CLASENTIDADBANCARIA6", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLASENTIDADBANCARIA6
        {
            get
            {
                return this._CLASENTIDADBANCARIA6;
            }
            set
            {
                if (this._CLASENTIDADBANCARIA6 != value)
                {
                    this.OnCLASENTIDADBANCARIA6Changing(value);
                    this.SendPropertyChanging("CLASENTIDADBANCARIA6");
                    this._CLASENTIDADBANCARIA6 = value;
                    this.SendPropertyChanged("CLASENTIDADBANCARIA6");
                    this.OnCLASENTIDADBANCARIA6Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVSUCURSALBANCO in the schema.
        /// </summary>
        [Column(Name = @"PROV_SUCURSALBANCO", Storage = "_PROVSUCURSALBANCO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVSUCURSALBANCO
        {
            get
            {
                return this._PROVSUCURSALBANCO;
            }
            set
            {
                if (this._PROVSUCURSALBANCO != value)
                {
                    this.OnPROVSUCURSALBANCOChanging(value);
                    this.SendPropertyChanging("PROVSUCURSALBANCO");
                    this._PROVSUCURSALBANCO = value;
                    this.SendPropertyChanged("PROVSUCURSALBANCO");
                    this.OnPROVSUCURSALBANCOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVNUMEROCUENTA in the schema.
        /// </summary>
        [Column(Name = @"PROV_NUMEROCUENTA", Storage = "_PROVNUMEROCUENTA", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVNUMEROCUENTA
        {
            get
            {
                return this._PROVNUMEROCUENTA;
            }
            set
            {
                if (this._PROVNUMEROCUENTA != value)
                {
                    this.OnPROVNUMEROCUENTAChanging(value);
                    this.SendPropertyChanging("PROVNUMEROCUENTA");
                    this._PROVNUMEROCUENTA = value;
                    this.SendPropertyChanged("PROVNUMEROCUENTA");
                    this.OnPROVNUMEROCUENTAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLASTIPOCUENTA7 in the schema.
        /// </summary>
        [Column(Name = @"CLAS_TIPOCUENTA7", Storage = "_CLASTIPOCUENTA7", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLASTIPOCUENTA7
        {
            get
            {
                return this._CLASTIPOCUENTA7;
            }
            set
            {
                if (this._CLASTIPOCUENTA7 != value)
                {
                    this.OnCLASTIPOCUENTA7Changing(value);
                    this.SendPropertyChanging("CLASTIPOCUENTA7");
                    this._CLASTIPOCUENTA7 = value;
                    this.SendPropertyChanged("CLASTIPOCUENTA7");
                    this.OnCLASTIPOCUENTA7Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVTITULARCUENTA in the schema.
        /// </summary>
        [Column(Name = @"PROV_TITULARCUENTA", Storage = "_PROVTITULARCUENTA", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVTITULARCUENTA
        {
            get
            {
                return this._PROVTITULARCUENTA;
            }
            set
            {
                if (this._PROVTITULARCUENTA != value)
                {
                    this.OnPROVTITULARCUENTAChanging(value);
                    this.SendPropertyChanging("PROVTITULARCUENTA");
                    this._PROVTITULARCUENTA = value;
                    this.SendPropertyChanged("PROVTITULARCUENTA");
                    this.OnPROVTITULARCUENTAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVIDENTITULARCUENTA in the schema.
        /// </summary>
        [Column(Name = @"PROV_IDENTITULARCUENTA", Storage = "_PROVIDENTITULARCUENTA", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVIDENTITULARCUENTA
        {
            get
            {
                return this._PROVIDENTITULARCUENTA;
            }
            set
            {
                if (this._PROVIDENTITULARCUENTA != value)
                {
                    this.OnPROVIDENTITULARCUENTAChanging(value);
                    this.SendPropertyChanging("PROVIDENTITULARCUENTA");
                    this._PROVIDENTITULARCUENTA = value;
                    this.SendPropertyChanged("PROVIDENTITULARCUENTA");
                    this.OnPROVIDENTITULARCUENTAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVCLASTAMANO in the schema.
        /// </summary>
        [Column(Name = @"PROV_CLASTAMANO", Storage = "_PROVCLASTAMANO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVCLASTAMANO
        {
            get
            {
                return this._PROVCLASTAMANO;
            }
            set
            {
                if (this._PROVCLASTAMANO != value)
                {
                    this.OnPROVCLASTAMANOChanging(value);
                    this.SendPropertyChanging("PROVCLASTAMANO");
                    this._PROVCLASTAMANO = value;
                    this.SendPropertyChanged("PROVCLASTAMANO");
                    this.OnPROVCLASTAMANOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVCLASSECTOR in the schema.
        /// </summary>
        [Column(Name = @"PROV_CLASSECTOR", Storage = "_PROVCLASSECTOR", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVCLASSECTOR
        {
            get
            {
                return this._PROVCLASSECTOR;
            }
            set
            {
                if (this._PROVCLASSECTOR != value)
                {
                    this.OnPROVCLASSECTORChanging(value);
                    this.SendPropertyChanging("PROVCLASSECTOR");
                    this._PROVCLASSECTOR = value;
                    this.SendPropertyChanged("PROVCLASSECTOR");
                    this.OnPROVCLASSECTORChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVOPERMERCANTILES in the schema.
        /// </summary>
        [Column(Name = @"PROV_OPERMERCANTILES", Storage = "_PROVOPERMERCANTILES", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVOPERMERCANTILES
        {
            get
            {
                return this._PROVOPERMERCANTILES;
            }
            set
            {
                if (this._PROVOPERMERCANTILES != value)
                {
                    this.OnPROVOPERMERCANTILESChanging(value);
                    this.SendPropertyChanging("PROVOPERMERCANTILES");
                    this._PROVOPERMERCANTILES = value;
                    this.SendPropertyChanged("PROVOPERMERCANTILES");
                    this.OnPROVOPERMERCANTILESChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
